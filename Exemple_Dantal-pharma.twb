<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <range granularity='0.05' max='0.0' min='-0.15' />
      </column>
      <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range granularity='5' max='30' min='-10' />
      </column>
      <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
        <calculation class='tableau' formula='85.' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
      <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
        <calculation class='tableau' formula='&quot;delivrables&quot;' />
        <aliases>
          <alias key='&quot;cost&quot;' value='Cost' />
          <alias key='&quot;delivrables&quot;' value='Delivrables' />
          <alias key='&quot;duration&quot;' value='Duration' />
        </aliases>
        <members>
          <member alias='Cost' value='&quot;cost&quot;' />
          <member alias='Duration' value='&quot;duration&quot;' />
          <member alias='Delivrables' value='&quot;delivrables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[F11]' value='[cleaned_BigPharma-ProjectData.csv].[F11]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
      </column>
      <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
      </column>
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calcul 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Actual_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calcul 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Planned_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
      </column>
      <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
      </column>
      <column caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
      </column>
      <column caption='Categ Deliverable' datatype='string' datatype-customized='true' name='[Calculation_2063774573782769665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables] &lt; [Parameters].[Paramètre 1] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
          <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
          <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
        </semantic-values>
      </column>
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
      </column>
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Attribute' name='[attr:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Avg' name='[avg:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Count' name='[cnt:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cum:cnt:Actual_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[cum:sum:Planned_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='None' name='[none:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2063774573782769665]' derivation='None' name='[none:Calculation_2063774573782769665:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual_Cost]' derivation='Stdev' name='[std:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Stdev' name='[std:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Stdev' name='[std:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[win:usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.791246' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.208754' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2063774573782769665:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Var Cost2 (copie)_860187577584152576:ok]' type='palette'>
            <map to='#499894'>
              <bucket>88.599999999999994</bucket>
            </map>
            <map to='#499894'>
              <bucket>97.599999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11.044025157232705</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>91.741935483870961</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>93.400000000000006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>92.67307692307692</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>94.799999999999997</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>21.734397677793904</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>96.25</bucket>
            </map>
            <map to='#79706e'>
              <bucket>89.599999999999994</bucket>
            </map>
            <map to='#79706e'>
              <bucket>91.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>89.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>97.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>86.599999999999994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>95.0</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13.101590997283663</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>92.599999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>86.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>94.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8.7202819816323878</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>92.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>88.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>95.200000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>90.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>91.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>91.599999999999994</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>92.200000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>93.200000000000003</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>92.365384615384613</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11.439756415832971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>90.200000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>93.299999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7.8207217694994187</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>88.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>97.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11.291812973572352</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>92.861538461538458</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>94.400000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>91.799999999999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>89.400000000000006</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>90.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>100.0</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>10.893166472626714</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>86.200000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>94.599999999999994</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[win:usr:Var Cost2 (copie)_860187577584152576:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>11.044025157232705</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>91.741935483870961</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>92.67307692307692</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>21.734397677793904</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>96.25</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13.101590997283663</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8.7202819816323878</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>92.365384615384613</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11.439756415832971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>93.299999999999997</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7.8207217694994187</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11.291812973572352</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>92.861538461538458</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>10.893166472626714</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Calculation_1726004602423439360' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_860187577585688577' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_1109292929463463937' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Var Cost2 (copie)_860187577584152576' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Categ Cost2 (copie)_1109292929746456580' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Calculation_1109292929877172230' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1109292929876938757' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_1109292929462259712' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Categ Deliverable (copie)_1109292929463627778' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
          <range granularity='0.05' max='0.0' min='-0.15' />
        </column>
        <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
          <calculation class='tableau' formula='20' />
          <range granularity='5' max='30' min='-10' />
        </column>
        <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
          <calculation class='tableau' formula='85.' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
        <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
          <calculation class='tableau' formula='&quot;delivrables&quot;' />
          <aliases>
            <alias key='&quot;cost&quot;' value='Cost' />
            <alias key='&quot;delivrables&quot;' value='Delivrables' />
            <alias key='&quot;duration&quot;' value='Duration' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='date' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                    <column datatype='string' name='F11' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='29524580.761088483' min='-21797503.283543896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='21241815.303664804' min='-8307262.7398131508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte Livrable'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
              <calculation class='tableau' formula='85.' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='21826300.539520733' min='-19153184.252250321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='16329456.743621644' min='-5864865.6716618836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deadline2 (copie)_860187577585688577]' derivation='User' name='[usr:Categ Deadline2 (copie)_860187577585688577:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte générale'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;</run>
            <run fontcolor='#ffffff'>Sheet Name</run>
            <run fontcolor='#ffffff'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
              <calculation class='tableau' formula='85.' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='18131898.886724941' min='-16034705.107065933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20295568.112543508' min='-19340045.560288582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6751B8A-A9E5-4812-B726-82F6460F57DF}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Paramètre 4]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <size column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Diagramme Coût'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{705E5BED-2E1B-45F3-AB31-154FCEF7B3C4}' />
    </worksheet>
    <worksheet name='Diagramme Duration_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1C3D987F-EFAA-44F7-ABA7-20DCD4B87DEB}' />
    </worksheet>
    <worksheet name='Diagramme coûts_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4B55B6F5-5242-467A-809B-F274D1A3EDB7}' />
    </worksheet>
    <worksheet name='Ecart Cout_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a90c38</color>
                <color>#ad1a43</color>
                <color>#b12a50</color>
                <color>#b63b5d</color>
                <color>#ba4c6b</color>
                <color>#be5e79</color>
                <color>#c37087</color>
                <color>#c78497</color>
                <color>#cb98a6</color>
                <color>#d0adb6</color>
                <color>#d4c2c7</color>
                <color>#d9d9d9</color>
                <color>#d2ebfa</color>
                <color>#bdddf0</color>
                <color>#a8cde6</color>
                <color>#93c0df</color>
                <color>#81b1d5</color>
                <color>#70a2c8</color>
                <color>#6192bc</color>
                <color>#5484b1</color>
                <color>#4776a3</color>
                <color>#3a6795</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{E758928F-CA90-474A-BD87-8225A85D3413}' />
    </worksheet>
    <worksheet name='Ecart Coût_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{103B419C-8D6F-4B94-B868-2E57430B1B34}' />
    </worksheet>
    <worksheet name='Ecart Coût_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{79EC9968-1FAC-4251-B1BC-BFB0CF02F19A}' />
    </worksheet>
    <worksheet name='Ecart Coûts_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{36139FBA-FA7F-4FDA-9511-B38FF008FA34}' />
    </worksheet>
    <worksheet name='Ecart Duration_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{31F5F1BE-8838-4194-9268-D2588863C3BB}' />
    </worksheet>
    <worksheet name='Ecart Duration_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</cols>
      </table>
      <simple-id uuid='{540C7657-28D5-47CE-8275-77F6301429C2}' />
    </worksheet>
    <worksheet name='Ecart duration_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1726004602423439360]' derivation='Quarter' name='[qr:Calculation_1726004602423439360:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]'>
            <groupfilter function='level-members' level='[qr:Calculation_1726004602423439360:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]'>
            <groupfilter function='level-members' level='[yr:Start Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#c90000</color>
                <color>#ca1212</color>
                <color>#cb2525</color>
                <color>#cd3838</color>
                <color>#ce4b4b</color>
                <color>#d05e5e</color>
                <color>#d17272</color>
                <color>#d38686</color>
                <color>#d49a9a</color>
                <color>#d6afaf</color>
                <color>#d7c3c3</color>
                <color>#d9d9d9</color>
                <color>#a9cee6</color>
                <color>#96c2e1</color>
                <color>#88b6d9</color>
                <color>#7aabd0</color>
                <color>#6d9fc6</color>
                <color>#6192bc</color>
                <color>#5787b3</color>
                <color>#4c7ca9</color>
                <color>#42709e</color>
                <color>#386592</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{29BD973D-2E58-4740-AD01-E210427A015E}' />
    </worksheet>
    <worksheet name='Feuille 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{D57E715C-5382-4F61-85CA-C93075E51A87}' />
    </worksheet>
    <worksheet name='Feuille 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F96CEDFB-537C-4D95-8D7A-B8D190470DB2}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='292' />
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
    <worksheet name='Livraison_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{213CBA80-5D07-4420-BA36-823EF4945780}' />
    </worksheet>
    <worksheet name='Livrason_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]'>
            <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Phase 2 - Initiation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='member' level='[none:Project Type:nk]' member='&quot;Marketing - Launch of new product&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central/Eastern Europe-Middle East-Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Distributor&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]'>
            <groupfilter function='member' level='[qr:Start Date:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]'>
            <groupfilter function='member' level='[yr:Start Date:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{AA552FCC-9DA3-473C-A44D-DC024437AED5}' />
    </worksheet>
    <worksheet name='Table de duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:F11:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='402'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Table de duration'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card size='16' type='pages' />
            <card size='56' type='filters' />
            <card size='170' type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' size='22' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='40'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='130'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' maximized='true' name='Carte Livrable'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_2063774573782769665:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[min:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
    <window class='worksheet' name='Ecart Cout_country'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[io:Ensemble Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38670E7D-862A-4F62-AC6C-885237391965}' />
    </window>
    <window class='worksheet' name='Ecart Duration_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC9D0A7-3618-46CF-901E-8333BB434D13}' />
    </window>
    <window class='worksheet' name='Carte générale'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD5A2839-5CE1-4952-AA8D-ECCF1B8CADA5}' />
    </window>
    <window class='worksheet' name='Ecart Coût_region'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A30560F3-7483-4E67-AA44-AA502394BF72}' />
    </window>
    <window class='worksheet' name='Ecart Duration_region'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49F9EC7D-966E-4F93-A671-EC0437DE0BC7}' />
    </window>
    <window class='worksheet' name='Diagramme coûts_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75140326-8619-41B9-88FE-FE42D5542493}' />
    </window>
    <window class='worksheet' name='Ecart Coûts_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{149D4F5C-5A19-4FD9-918D-9A47EBD88C9E}' />
    </window>
    <window class='worksheet' name='Diagramme Duration_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='142'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='112'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B9B3028-B764-4E42-BE78-8C2372C1734B}' />
    </window>
    <window class='worksheet' name='Ecart duration_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='170'>
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='142'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Start Date:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1726004602423439360:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC165193-E602-45FE-9144-9D97A953A61A}' />
    </window>
    <window class='worksheet' name='Ecart Coût_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{836AB390-525F-4874-85CD-88DD0DC85E71}' />
    </window>
    <window class='worksheet' name='Diagramme Coût'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='46' type='filters' />
            <card size='135' type='marks' />
            <card size='204' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{DF3E3057-1BD1-4EBC-BBD0-74DD3D63E1F5}' />
    </window>
    <window class='worksheet' name='Livraison_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E362096-A2DD-48B5-871F-F4F46862F47F}' />
    </window>
    <window class='worksheet' name='Livrason_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='113' type='filters' />
            <card size='70' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A14218B4-BCDE-4E17-A8C9-1320A6895807}' />
    </window>
    <window class='worksheet' name='Feuille 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{204F2934-7299-4661-8A19-9234A8BF0E99}' />
    </window>
    <window class='worksheet' name='Feuille 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3521AFBC-8D8B-451B-91F6-244357D36C7C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte Livrable' width='192'>
      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
      WHj8f3g/nymgw7JEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Rc93Xn+XmxXuXqqs650Y1uoJETARAMADNFiaKksUzZY1mSx2PZO95Z
      z453zxl7Z9cep5lZh/Hx7Eq2pbU0lCxRJMUgUSLBACKDyN3ogEbnXJ0q53rv7R+FKnQDTaAb
      RBKB7zk4B/3qhd/7vXt/v5uvEA6HTUVRuId7uBshK4qCpmm3exz3cA+3BeLtHsA93MPtxD0G
      uIe7GvcY4B7uatxjgHu4q3GPAe7hrsY9BriHuxr3GOAe7mrcY4B7uKtxjwHu4a7GPQa4h7sa
      9xjgHu5q3GOAe7ircY8B7uGuxj0GuIe7GvcY4B7uatxjgHu4qyHf7gHcrTBNE9M0MQwDXdcB
      EEURWZYRBOE2j+7uwT0GuA1Ip9Nks1mSyeQVv6mqimEYWCwWLBbLbRjd3YV7DHALYZomuq4T
      i8UwTXPRc9LpNACSJN1jgFuAewxwEbquo2ezBANzuIu8JJNJ4tEwZRVViOL1q0p5ok8kElit
      VrLZLIqikMlkFjCBpmkLnmOaJrFYDLvd/rHe6x6ujrueAULBOfyTE4x3HsU6fpCAUokgW0jM
      DFFjS9Dm20H9mh1UNa7GYtFYTgWNbDZLNpslHo8DkMlksFqtGIaxgPgtFgu6rl8hEimKgq7r
      iKJ4Ty+4SRASiYR5t1aFGB7s59S7L1MUPENQ9FJjCVNliXIyWMR9RQFMQBRM+pM+ZkvuJxme
      Y/Puz1C7ovma99Z1HV3XyWQyBeLNZDJXEP/VIAgCpmlisViwWq0faye6h8Vx186oruucPfIe
      ylwXxVqW+93jDMWsKKLJOlcISTCxSCaBlEwIF5sjb/IAhwmPdi6JgEVRRJIkVFUllUqRTqfR
      NA1JkpY8xvxzUqkUiUTiut/1Hj4ad90OMDzQSzwwib24hqHX/ph6awSXkgUglhGxK8ZVrz8d
      cGFfsYNNz/zmosSs6zqGYaAoCqFQCFmWMU2zoNyKoohhXP0Zi8HhcKCq6rKvu4er467aARKJ
      BBO9bSgn/o6OD17BFCQccrbw+7WIH2BTURjL+OGCvG4YBslksiDeZLNZotEouq6jqiqZTGaB
      3rAU4hcEobCDaJqGy+W6R/w3CXeFEmyaJqMX2unv6cR//hhlLhPFf5Ip0cfJgIctRUHEJeqY
      WUNAWPNLaJpGOBxG1/WCnC4IAoqiYJomkUgEp9OJYRjEYrEl3dtmsxUIfb7Sm83mmFTX9WWJ
      UPdwbXziGSCRiPPhT7+DMHmWEjGIKoqMRCS2lcSBOHOppU2BaUIsKzJX+iAr73uiQJR5OV0U
      xcJqL8sy2WyWSCSCzWYjlUpd9d6CIOBwOMhkMoRCocI9NU1DlmWSyeSCXST/+yfBMmSaJgM9
      Hbh9pfiKS2/58z/xDHD6re8hTJ6l0TKDXTGovsys7rVkF7/wIgbCCnbFpDdTgXvt02x94FFM
      0yQajSLLl6YvL/5EIpEFx/JWoKspzoIgFMSoPGRZRlVVYrFY4XpRFAvPzmazyLKMw+H4hWYE
      wzCY84/i9uaI/9TBt3CXVNPYsuaWPP8TqwNks1kymQzuxvuYEUs5FXAxEFExzdxqPh+mCdNJ
      icwi4rlNgX2hetTSZszYFIqiFAguvwsAH7nKp1Kpa1qN8oySh6ZpWCwWIpFIIU4ok8mQTCbR
      dZ1sNotpmmQymV9o65BhGLz3kxcJz4wjXdzhVm9+kMqa+ls2hk8sA3Sd+ZC3vvkHFBe5qFv/
      IPX2BCucaXqTXgaiFoIpEdME3YALERsTKTvKZbMRyYicC7nY6pykLNFFy/YnMQzjuqw4y0Ey
      mVwQLpE3pSYSCcLh8AKG+kX1DZimyckjHzDccQwcFWQyGXRdx2qzAZCIL01vuhoymQy9XW0F
      Pe308SPEL7vvL+bsXQPJZJLhnjZqLEEm2t7DpcmMZorY6y/lbLSMkajCYPRinI0A3REnTfbI
      FTtDxhB4qHQOu2JS9Mi/w+kuIhgMIoriLSO8vNl0/g4BObEpv1P8oiCZTBZ2rNmZKRJz46Qk
      O6GpEQRM9r30TVKpJGffe4meQ69d836maeKfnCzskpcjEY8xef44yUSCjsNvYj39/9J34r0F
      53wiGWBudgbHzAka1BnMseNUtW7HV1bFdu8sJaaf+8tiIIgMxTQmzTLsNes4EqwkklloYfFa
      dAxE9A1foby6vmDNiUQiN30XyCOvH1wORVGwWq2/EPL/+TPHOPD2G7z/vb/k3Td+CEBgdpae
      zrPUCWP4h7roPHOcVHCc/S99g7KJn2EpqrjmfQ3DoOvMEdLpxcVPl9vDA8/9BqND/SjtL1Bp
      iWLre5XJ4b7COZ9IJbj9w/2Mh1VaHQIrFD/H9r5C6+6vMNrfhXj2Hc6nLEx412PxWZhVfMwc
      /QmfrZlFky4RtWFCICURqn6CDdseIRKJLDmE4Ubi8tXN6XQiSRKCINxU4r/8Xa/nWbqu89Yr
      L2AGBkjYanEl/JSXeAoRsWvufwq7GWPHmp30vvFfqZcGCTQ9gel9mpama4ebSJLE7qc+d83z
      stkMPuXiDpqJFZyS8AlkgGQiQWqmn09X+lHF3EdsnXmFfT9sY9X2J6ne/ARWdxmueIhk509p
      SL3FlvqFK0j+25+LlXDflmcK8ft3AiKRCJqmYbsoK98sZLNZBEHAMIyCU+5yJrhWoJ4kSTz8
      qS9w5sNDjOx/nfpHPsuGXY9xoe0Ys2NDFFU2MHDuLP5z7+FY9RgR+5Os2/bADRUv4/EYvQd+
      RLXDwDQhlJZpqagp/P6JYYDh82dIp1KU1LUQTCvsjxbzePk0IKBJJlXSLJPjozjG3qPYFqNX
      X81qsQ+vmr7iXlkT3h13U7JxD6VlFYXQhvnZW7cagiCgqiqKoiwrInW5yGeqxeNxDMNAkqQC
      odtstsKz89ls1yJWu91BbUMTkxNbad3yQG7nkhRWb9yGpFgZPBHD0rSbipoV1K9cfcPfZ25m
      itmMla6Yl86wg2KrgXF8H1XNm6iorPrkxAKdb/uQ0c5j7PjMVzn//X9PKTO41JxIk9/OT0Ur
      8EcNHi+bIm2IHEus5GHHeUQgv4i1hzwIZgZNhsrP/wXlFVWFZ2QymQV2/lsJVVXJZrOFyNAb
      hbyCLUkSsiwTDoex2WwFvWN+3sL17jzzHXemaRZ2jPzxTCbD+MgQ9Y0rl32/a6HtxGHE4/+d
      Xm0La1LHADge8NJaaaf1S3/2yVGCm9dtY/WDn8Nud2Cs/Aw9YSspXcAwmScvm2Ts1cxkbNhl
      A2fGz7FpJyYQSkuE0xLlapSgdwu+x36fsvLK2/1aBWQyGZxO5w1vaJhKpQrOtmw2Wwjms9vt
      Cxx4sixfN+PN11fmE23+uKqqSyZ+yGXNHTn4Abp+bbG0ZsUqZpp+FSE+TYmWIWPAwyXTmNkc
      g//CikDT/nFGz75HceMWahpXIwgClVXVAHgr65nsrOF9oxh9/Bw7SyJ4NZ2Ndj/VqTk6UnWU
      q71s8wYxzdzq/+aYj5TqpXnNRnY/9gy2yzKx8mLB7cTNUHzzsUXhcBhVVZFlmVgshsvlQtM0
      VFUlmUwWYp3uBFgsFtas23CF2XoxFHm9PPjIkxxTLWT7eqi2ZzBN6MvaSKdTv7g7wMxoP2rv
      Txn5+V9z7ui7C8ySDStb2f4v/mfK8VPrSGORDJK6QHfIyvFoNRH7CgaiGv6EgiDAZFwmkARV
      Ak1IF5wxkFP04vH4Aq/s7cDNqhahKAqSJBVCtvNOo2QyiSiKKIpyR4Ziuz1FC0JRrgZJkti0
      bSfnhHVMph0AODSZvlP7kP7wD//w/1rqjW4nUskE02NDOD1eAIpKKzk0DEXhNizTZxhPOZAt
      dgY7T1BUVk0kFCDV+TqrXHFUCfwJhRORSorkBLXWKEenndhIUmHLYJhQZUtRZkkiVm6muqG5
      IBJEo9ElhTPcbLhcrpvifMsTO1Cw+giCUFB8PyllWhRFoWb9gxiV9zEyE8N016KPnvzF2AFG
      +ro49+IfE9n7J0xPjgO5D+cVAsiiQJWWINP2I8LBWaxnvsHpn34Lb3Ep4fpn6Qrb6QhaGYha
      cHpLeMg7iRId4VMlwzS5ch/epRrUOjOEkmB3OAGIRqMEAoEFKY23C/n8gJt1b03TEAQBu91e
      WOnzOsDt3PVuNCRJoqyyho2f+z3qtz2DMzFy5+sAuq4zNxfAqNnFTCpBhT23hcmyTFXtCrrS
      EnPRPqrEYQRJZiTjZcXs+5w63sy6bQ8yFDjL2UkTwWqn0iryzrgX0zR4whVkPlmndYGspYja
      5nWYpkkqlSoQ3e1mgLycPt+CcqOQV0JFUUTX9cJ7y7KMYRiFVM7bPQc3GjOjFzBF6c5mgEwm
      w/6Xv4mrpAqpfy+jRjlb9nym8HvzfY9TtSbKUG83iePfJj3RR6Z8K+OhLkrLKynylVD0pT9i
      bTaLLEu0Hz+IUrGOkt7v0hG00eRMYJVNwhmZPqMGe9P9uNweBEHAarUuGoJwO5Anzpu1C0iS
      VIgszcc55Z+VSCQKu8QnCelEDN+T//HOFYFisSjpdIqWHU+SGTlOgzJJaWkZFouGaZoceOtV
      otEIgiAQCUxT+ak/YPX2x9j59POELZXE9v8NXcffJzg3x0j3SYKBINb2b2OMn6QnZGM2KTOd
      zPG/Kur47vsVHnjy8wXPptVqLYgBFotlyQrXzZuP2E31RquqWjBzzg+1yCf33MnI6THLCwtf
      u+NRKupW3nkMkMlkOP329/ngB39D58++SVVdE7W7v8Zg6adp2fVZILdtu70+Og7/HKvVxvbd
      T1NeWYWqWrDZ7NRsegJx89eoWbWFUCjI2OEfYLPbuaBsoDLRQVotYpUnwfGgjyMzHnrVjTQ0
      NV9ho1ZVFZvNdt2J7DcK6XQaQRAK1pqbhXxOg8OREzMFQcDpdP5CFOdKpRZ69HORohNXHJvP
      zLqu33kM0HfyXWrGXmaXdAqKVzHl92N1eNj0qa/hKykjFo0CsHrjdmzFtVdc33uhh9FTP8dM
      x7BoGuWVVaz+/H9g4NjrVCa7qNBSPFPcT7k1wxNl01RY4swIxQsCpCA3WeFwmFgsRiKRuK0M
      ADmPbTgcvmn3F0WxoATPd1rd7KC7q8E/OkDfuRPXZHpBEHC73QuOBebmrsjF7r1wgc6OtsLf
      PacP3Fk6wFDfecRzP2AoZUcmi6LH6Wk/war1WwGYnZnm7Hsv8cgXfxtVteBwukgk4kxMTHD2
      +GFKq+qwaFZsgXOUdR7lyMQgpVX1nDjTgW3mFNuLwyR0gVRaZDiq4rVkqXOkUcMfMDm8mSKv
      rzCW+Xm6iUTitppBNU3DarXe9DHk453uBIyPDBLb+8cYmTSByr/FO+/bLAVenw+v79I1pmni
      909it9uZnZ3F5/ORjszeOQwwPtTH3L6/xWfE6LJsQVVVSiQr5tgZ9LWbME2T4aM/xhtpJ51K
      YdE0xi+cpe3ou+iiBdvsWYTJt0i3fgHLms/R3/k6ydAxUqNvYyRqMKp20KHqEJ9lWrdQ1VhB
      wOEj3f09Mk2fYevazVeMSZKkgiKcVwrz1pFbLRfnK0Lc7NX4diXYmIbB9NQkhmkyN9JD8swP
      qFPC9FtW0Fzk/fj3N02qKiuJhgOoqsJrf/8nrBYv3DkM0N3VQSSm0ZMsp+a+LYiyzMDBf2aN
      M8Tsq79P7PE/wtX8AHODBzl9bD8ehwVXaQ0njh7E57YTShjcV5VgRBWoXreLAUc5jZrAzL6/
      Iya6+Reffx6n01WIdjRNk9nZWSZLKjATMSRp8amwWq0oioKqqgvMkOl0muhFcexmI58wf/k2
      /0mBrusc/WAvqfaXqbGEqdAyJGWZYddOVjz85WsyvWEYdHd20NTcsqjHemJinA9e/Q728Hkm
      hCqmP8xQkRylzJ24cxjg/t1P4F+9HkyTc3u/i1reSixt4lQNXEqGo+98m+r7fwld85E68R0i
      Thctz/9nKlp6kIb2YxFMDFNgfMJPRjtPcGaC9U88y9xRN0+obXx44D2aVq9H01RGT/4cYe4C
      ybSOZ9NzVDW1fOQki6K4aK0eRVFwOp23LDo0H6j2SasLZJomZ95/hdqBF3F7dMJZhX7nLrxr
      HmND81pE8drvKwgCxSWlV8xNJBym98xBEkMn2Cq04yrWEQijiCZCPiP2TguHNk2TSDjEqZ99
      B8/MMUZiKmVaGlUCt6ojCuBRMvQrrUQdjTRufRyLprH3f/wlu50XeDW+izrZz2plmLl1v4Ov
      /e9wy2kmEyo6InNZO2uds0hCLvGlJ+qk4Zf/C8UlZcseq67rhEKhmzALVyLfL+BOCkr7uMhm
      s3Qc/wD17Lep1BJMZN0oO/8NK1o3L+sdI+Ew7WdOcv9De4Dcdxnt7yb0/l9RJc8hCZfC3S/H
      HbMD5CEIAi63h41P/hpnjjfhMHSGB9vxZkZwilECno0EBBNXy8O4TIHi4hJUi4XWrQ8wOLeS
      x1sfoP/tb+AQU8wmgkwZXtSsH0XQqdDS1AhJTBPmUhJei86c4aJRuD5jmCRJt2wXyCfD3Axv
      8O3CxNgo/kPfZUdJgomEgnn/79K45kpd7FpwOJ1s3bELyGXMvfHjH7Ey8DbN7qsXJIM7hAGS
      ySQT46OkgpM0rNmGxWLBU+Rl9xPP0HP6IKUDHWScZai7f59NdSuAK8MT1j/wDIlEgvHxMbz3
      fYmh4BDVTWuZsnsYHTnF8GyC2sg5prJOrBaFpL2aKnMC7+qdeJZpYZiP+ZXgbhbyodj5yM1P
      CvzjI1RY0wxEVIaLH+OZtRuXdb1pmkxPT1NaWloI2375xX8mNnicxhXXJn64Qxjg6Ct/x8r4
      MVySwblzTaR86/B6fbTseIqmDfczV9WEy+O9akhu3vHhdrloaFhBb7eFmalxmtZsRli3lU2y
      TDqdZr0oIlyMddF1/YakF97sEimSJCFJ0i9sDaDFkM1mGDh7gIe0NO2ZFTzx3L9c9vsJgkBJ
      SQkA/skJJElmx/0PcDw8jG7MsJS14o5gAFvZSrThwygiNBkXSE32gl+gR5Ro2f4ExaXlC85P
      xOMMdJ2mpqkVp7uIaDTK0df/kcGhEeoaGmnc+hipfX9OhTVNzxGNUMNzPPDU5xntOUtspI2q
      bc+SScVIJROYhonTW4rL7bnueJebGamZrwBnsVg+UQxw7N032CScJZYVKd32BSzLmPv5KZGC
      IOQC+CSJybFhpEyUBreOskQp8Y5ggGx0GkkwAQFBAE02MTHxt7+DUlTFiuZLdSKTySRv//Q1
      WuZ+Qt/042x48tcZvnCO9HgbX6gIcjxZTHjOT4UljSqaqLLAhvsf48Lxvbg7vkVCqefEgbep
      nN5L2pBIZqHKmmTU2ULr5//DdTHBzSLMfELKjdqp7hSYpkkgmqRKMBgWV7B97aarnj8+PMDs
      wBnWPPhZRFHkfHcXRV4vZWXlZDMZjn7vP+FLD+EQkjiULJXL+By3fUnRdR1j4uyC0OSkLrJ/
      pgwtPUdk31/z4YG9BANznDp2gKGBPhqm3uBC2Iq7biPTE6OIepK4pYLhuI3plMrUSC+KaJLU
      BeLFm9E0K8n217CIOn1mAwNtBym3JGiwRZnIFiGKAsJcHxfOHrmud5Bl+abI5vm+YTab7bYH
      490omKbJ+MgQTdM/IZKR8N33/FWdb6Zp0nbmBBd6ekinUnR3nsPt8SBJEqFggK6OdpxmiBot
      SpEle0V5y2vhtjNAYG6WMmG68HfGEDghbGOjJ8gq+xzhpEFJ97c5/f3/SKD9LUbaPsBAYKUj
      hqesFlEUCJ18kY1qHw32OM2pk+iCynBMo7vmN2ja82X848N4zFmSuohqdfBUdRCbbCIKJqK7
      irHmf01c8hAY7ycWXb5FJ59OeKNDFWw22yfK6pPHVPchyrUkSVsNLavXXvXc2ekpqkdeYqdw
      jOM/+r+pa2jk1MG9SIJAz7lTWG1W0opnSfnBi+G2M0B/+zF882rzXFDW4yuvwSbmjm1wB/Gp
      KVZpk2yRO/HELpCW3TiVDMGZCXxlVRTt/ApZSxEAPkuWyvoWBpIe1m3ehttbTGhmAqecxSYb
      +MeG6QnZMEyYS8mMDQ/y3k9eJBkP0xp4k1Pvv7psQs4rqTcaiUQCm832iWKAcChAcqoXARPV
      V4t8DdHOPz5CpTWNTTaxCgn0bIZsIsKZU8eZ/PAlIof/EXvrp+iTrl1JbjHcdgZovW83I6VP
      o5sCpgmW6g3EpweJZiSimUvDs8sGogDu9DjIKg7ZINybE1ma19+HuuPrdATt9AlNxOfGkSWJ
      7Lx0PkkAAahUApS6ZARyzPLFOj+frQtSpqUxgO4zR3n3nb1M+SeX/A75IlE3OnE8n5D/ScJw
      fy/lsXMYJqRDU1ddbEzTJDN9AUm8WK2vZA0dL/85HiGMo/dlmmxhVtAPHT9kMuuhN7r8mkVL
      ZoBMJlOoS38j4XA4ad7zq3QbjQyt/Nes3v4E657+V7wfWcm5wJV1aMqsGVbJwwgC6KlLsTgN
      LesR1z/P9uf/dwIDp3iwaIzRAy8AUFpZy6lUI+NJK9tsgziEBIIAsggOxaDBmabWkUEApGyc
      M+++SM+P/5RQKLikdxBFEY/Hg9VqvWGyej4LK5vN3vbMtEwmzdSUn0Qi8bHjn1av28Q+YTfd
      YRueeC+zUxMfeW7PmUMUD/0YgLQhYIgq7qwfpxlm1rOVuUzOYFFjDKEkZ7CIy6fNJVeFSCaT
      hZfPdyf5OFtzvuxGvq+Wb9UuqhtbkRWFcCiAvf81KrQUc1k7SV3ELmWvcGfHUjox9yrcbjcz
      09O0rN2ErhtEz/6YYjnKTFLE17obze5i6PQ7SEaSEjWFU1notMrXBpJFaHanKLHq7B9VGBkd
      xWXX8BSXX/Vd8+bKvLUmlUrdELEl314p3271VsM0Tfr7etn79lscf+91OtpO03viXUSLg5Ky
      yut6R1GSqKltoH9oFCU5RfeFPmrX7kSSrqSnUwffpjbTjXjx28wGwhjVO1gRPkRJqp+kIVKk
      5orexjMmiYxBqZZZ7LEfiSUzQDqdLvS7zReLzUcpLsdJYxgGMzPT+CcnOH/uFDX1jQQDAVyu
      S5GOdoeTmGcNbXM2FF8Do+oqQlPDlFsXvpzLDDPe/SH+rIuMKVJcXEI2m2W67ecUKzE0PcKp
      GY3aFc2IzjJ6+wdJJBN41CyzyYuJ5gi85/fhtWSwSjkxy6nojMdkVikjnO3oobhuNU530VXf
      K5vNFuYoX1rk40BVVSRJKjTOu5V6gK7rdHd3MTYyzE/eeA1tto16LUyt5MdpBhHGPiRoqaF0
      XtnI5cBmt9Owbifayj04KlYxNzVJcKIfX3nNgvMy2SzWiUNIF189aF0B9hKKIp0oEgXiFwTw
      Kkk8ahZpmUL9de/X+fQ50zSJxWLIslxggvxqpapqoaZlLBYjk07Rd+Q1znV0UubzUMcQXaVV
      nDl+hK1bNqFnUjRv2IEkSQT6TrAn8Spifvf3XHp2XgoTBBD1BOf2v8KTv/F/Eg4F6DhzEtNZ
      RzI5TcSwoIu54LEVrZvR3KV0dXbw045D6CaYsg09m6appY6jI308KnWiSiaSCI9URTk9Y0XU
      Y7S/9yIVX/7frkqE6XSaTCaDw+G4IWHS+YVGVdVbmpJomibtbW288v1v49JEWuwhVhXHMRGZ
      KX+UYDDMqfEZtoajHHz3Te7f89SSFr/L63nKsozPV4zPV8z05BinX/8hk5MTlFbWUbtyDVar
      lbnJEXzzpBpdUBAn2xcNbBMEUKWbKAKlUqlCgaj5/+YjXz35fPspZt7+C2aCUUob1nJw7+uc
      fP2b6AP7qUucocYSYZVlHIeQpKt3EHd2AsfkYUr8++gdGiWOjerV2+gfGiaYtaLp4QUvN5G2
      M5GyUyQnOTTtxtWym9r6RjpP7Mfa9T2OzPgQ6h/CEz7H9OgA7eMpfN4iKqtqUEST2pEf4jED
      xIs3s+3BxwnF0zi85cyGopSKc4XJtMkGJ2dsGLKN5vXbUJSPFkPyRKAoCslk8oas2Hniv1Wr
      fyqV4uzpk/z8pe9QJMdpcSfY5I3hs2SZzDipfezraEWVhDrfoT5ymP7BYWaiWURJwunyXJUR
      BtqPMN55lOK61Ve+jyBhOqtwnP0mXv8+hs4dIajWIFk9+CfHKRHmAJhV68iIGkYygqHrWKSP
      n732sTW2xYs2mdRpYeSJ12j70SAjQ7M8Xe5HvhiWmm9ILYmw3T6Qu8/FKxvCh4gfPka/YwPB
      pIB39WeZOvtPVItBIhmJSWsrgaJ6hFSIdotMbV0QXE5OHj+GNNVNvSVNkxAmmTXJmDI7i+d4
      aegsY8H3sT7/n5EtNvqiNjb7IsyFz7Gy+V/inxhl3YYdvNp3HikxzTp3LsS5xKqjiAa+pi1Y
      LFf3EOd3wHwPsY9jFs1XpbiVoc/JZJJ/+Ob/QzAQYIM7xDpPlIOhWjqFWoriY4ienHgyMdjN
      nvIQTtXAo04jjb2AMSZxtuRh1j39mygXd/98k8J8pYnpoW4EcovmyMAFOtrP8vDjzxCPx+k/
      9BJZWzl2exUWo586c5ypA3/KrGcXlZs/z9yxv8RrySKlQ5Te/+v0HZEJJ3XWpU5QYrmyvP1y
      cN0MMP/DXL4jmGaOwBXRZEXyDPWlOcJf9Fsu4uixSVkaEydJGwIfnoxRvvmrnA4Gsbt9RKaH
      iXS9T70WYrz8aR7/wtcwDB1DNzjXZufQoUFKNz5AmdeFezaNJECtJYTdCNPVfprY1BBbvRFm
      kjJi3U5EUcSi2bFarbQ0VHO8y0CLnWelPccEz9SEeP3Dt2ivqmbNmjVXDUlIpVKEQqHrsgTl
      DQIWi6Ug898q4jcMgzOnTpJNJchGZ5jICqhY2OMbYUivwrLz61jtLgCsJNDk3PfNl58HA8fc
      O5x+OUDzk1/H4y1GFEXefflblOjjrHr2f+W+T3+V4Nwsp7//H5mbGidRtI72H/wf2BJjNFqT
      MCsiYsBFOinT0hQn3ufDI6Pcd7GVbXnyPOe72lidOMxIws60rZoS+j/Wuy9LCTlyJS0AACAA
      SURBVL68TOD8Ou+XiN8kNDtFUeAkinhRTr9KQsLVPnIooxIs2oiqqjjlLGNn3mU0KlOuj7C+
      KIYjPsDEQDeRpM5s/xkm+89xv72fE0MxmoN7cSm5Lic1WpSYoWFU30/o7I+ptSexSgaJotVU
      NK6lqrqGnlP7qRr4LlNSJUnXCqr1ASQBbLLJSkeMH+3rIDg3xYqWdR+5usdiscIcLSc+SFGU
      QjXmvHXtViq94XAY1WJhsK+XkuwIO8rirPGmsUgmpXKYoZiV8sb1uTIpJbX0DY5RxtSCewgC
      +LIT9J07BiVrcHm8xKf60QKdxB0NuST3/X9DvTlIlTVJgzCMlwAeNYsogCiYV9CIKECNMod4
      8fhkxkX5jl8m3vsByaxJKhGjTMt8JG0tBctaqi6X+S8n/MLxi/8+Lrxqmvvib5EZAEWEegfs
      m5ggLogIApSoKYqTbZg9bYgC1Ms5Bdkhpi5O6KWZKVVjnGz/OauduVAHQQB94AOy2S/kat8X
      VTBevIfnHvsKmXSa8RcPU6XlnFAOxeA3V83wVu8RfvyyjUcff4Li4pIrxpvv5Ljcygo3u/Sg
      oac59v6beNc8SkuFnbdff4mUYGPL/buZ6T/N0GQQe1EFA+eO4UqPUY5CjSNnlRuZCLHPfwx5
      xcM4jQDH287jmJ5ASwdoD8Jn13joHo+wptqFIECjOsVQx/tU1DSQCk4iNj1N3cq1nPvH36TO
      EVtArMt5Y92EZP0TGL1HqVUTlKowm/r4PpdlGY3y8u18ol9MGb7uwSzSfjSnkF4SoTb54iSz
      ZoHB8jsM5CZUFOAJ3zBuZWFRV1GATUIbQcNGV8DCQMKJ876vFMSVhuZWNj37P6FZbfQffplK
      S474DRNOz1rJGvB4VYho915+8oNvLUrk+Rqb1+oMPx/5zizLwXLnPBWPUVPuwx9OYaYCzKU9
      PLR7NxUekwv9MXZu38L+F/6INdIQO5u9bK11XXyQwanROI+uK2HwxEE+PHuedevW0WSPMzqX
      xTRsvO0vJWxqZIzceLKGgKDaiUYi2GvW4zz/A9q++++ptyeua6VO6wIv9JXyXnAFqrME5/DP
      L+4YUKJd6RtaLq6LhfIBWjeK8C8vwJTvS7UYPBadB8sjC1aPy8dy+aTMJSXsioEATBU/REd3
      D6tX7uLJ9dsW3AOgp/0Elf63EC5KOfGsSGe6hom0k+J4N02uDNGa5kVX7Pw7LFX80TTtmqt/
      3gusKArZbBbDMIjH49jt9iWHbludRXjdNvrjYEoOVta5OH7wHewVqxHNaf7mv/0thiGhFfnI
      RAO8Opzm89srkAyTpCCTRcEnpDnmn6J0zENXn8FWzSQQnmU8VEKo6YsMz/awtVLC9DYBKoMv
      /DZBsZgaLYWX8SWNczGokslT1SFmRQuWjv+BT7mx6adLZoDFTJ43CguJV7jmvR3KlYx3NSIK
      6yqnjGYapRHi00O4iqtZ0bRywTUjQ4MgCCSSKTJJlVp7jvAkwcRmtbLzU7/Cke//KQGpjM9s
      3rbo8/JpeaZpfiQT5C08+fOvxiz5ZJh8acR82mXe93Kt6xdDKhHBW7aCmmIbJ88PEhSLWFHq
      YHLUjyh42NxQxOjMOKlUmqmkRG+sjM2r9jA6MEeFV2L1+g10HXiFLS2lCD3T1GoTGC2r0RMV
      bHr8cboOvY7v/HfRbAY15vCyxvZRKLakKGZkeRcZOgc7Z4iIMk+v8vDBuWlimSz+tESrR2Qm
      rmNz2pbnB7i8fOBHYb4SfDk+ilDzx28kY+Xv6VaylAgzDFOLzy6xOnuGSFahpGEdoiQRj8cY
      /smfo/W8THr4ODX2VGEXUUSQ0mEmKKdq3UNU1DWxunXxEF5Jkkin01ftnmiz2bBYLCiKsiS5
      XxRFEolEoSRKXsTSdb1Qt/RaCPqHef9ED4nZcYoqVhD1X2A4JLLnoV2Mnz/B4NHX2dFSwkqX
      zom+We5bVUr/4BwhWzmf+fofMTIVZ/uuXdRWFnPixGkqnSZ14gSmKOErctM+JSPF/ei6QTIr
      4Jg5gSpeqdTeWghU+qyMBRI0lDioL3NgJlNUVBYxPBPjmc0VdPTN3fqMsMs7Bl5+/GY8K6FL
      ZE2JuvueJXDsu5SoKeSxtzjyepodz/4rTBNi2JlWNhDQyuifOMKeskDhAza7ErR3vkBw3dd4
      9LHHP/J5+WrK+c6KixH4cmKo8vfTNI14PF64pyiKOByOJa/+nrJann32Uh3VqpLtQE68ys4N
      8uWtDtpmZTxOC4+uy5WHKV1dxkhGo6i0hgfK6wgGg2gODw89/BD9XS6SA2ep9GpkjAwtPita
      UQWBI/+EU0yiaLe3mw4AglDQDSFXea5zNsOzK1TsaRvvtE8xE9dvjB+g8JC8cryE629Vrc2B
      iIUZRytND/8yRjpN1LAxrTsYr/sC0Z59dHz4Hs2bHkRsfIwHt27DZrNz6sR63n/v79lTOkdP
      1IFFyNDiTvGPh/bxwIMPXTWDyWKxXDUYbrnWnvkdXFKpVKFn18dNwxwY6Ofwvr2Yk32c11Sq
      HHqhsTiAP2kh2fJsLiwlECgcN00TWdXQTQEwUURomf0pg4FGarQYXmV5ZcpvFvRMliMX5mgf
      CVNX7ECJR6mq9uasPoKAKkFDlev6GODylpcftarfaCz3/roBiiRQvf1z1De1YBgGVuvXSccC
      VFucWFo3UlpeSTQaweO0FZTvTVu2kQyMMXbhh3iVFG+FWqjPzFBdW3dND2++fs/VrETLRb70
      Sj4m6OOYTE3TJBAI8IMXvsMjrh5KSzMMhmVqHJciZM+H7dge+F02rt+ygPjzqG5opn9sF2vj
      By5G0Zo00Qt3UNqyKEtsbvSyudGLLIlIRV5qLs59TamTMp8DTRGXzwCXm/nmK6357Vm8QcLf
      fAYTRXFZxG8CnSE72fVf5uGLaXeiKFLb0MTMzDSdP/pjWp79feamxlEsNmbPHyabCBJPGVRV
      lLHloU9xylaMPPQee8weEmu/ghzNXNNkKQgCNptt0YC4j5PdtZTrltJAenBwkO/909+z0zHM
      KndO0R8RLjF1xoBg1eNs23Qfuq5fUe8o/73NVPQ2y/hXhyAI2CyLfytJErFefOVlM8BikytJ
      UkHxEy/W3blRyK+Y8/0PS0HWENBXfoYHdz96xZiLirxs/rU/w+FwcmzfzyirXUlRuI2K7v2k
      DYFkn5Wu4G+wc9ce0tu2Mz7Ux3hfH1WVS2ucnV+x74QGe/Nhmibv/vQVtthG2VoyX1S5NMak
      LlG/ZttVvdHDZz+gOXMWPgE1upbMAPnVPb8az2/cJklSIVvMNE0kUUQgJyN+HOQ/wPV0KhzP
      etm259OLiiySJOG42A1y20NPkkwmGdct1KomimhiJ060+1U+TCZo3rCTuqZV1Da2MDk+tuRx
      22w2QqFQgWmXavX5OLjW/XVdJxGZI27ARFyiwpZb3QVMElkBq2wS0TXKLqvDlIdpmoxcaKdm
      8g3sqoBh3FyR91bgunSAfBJ4KpXCYrHgdDoXNJJQNBuDmRLKjABe9aNNp3omywfdM8RTOqsb
      S4jOhBiPZXG5bHjFLP1zKYqKHNzf4AJMzvXPMhLO4nJZqbfBmYk4kqKwucLC4b4QW1srCEyH
      aKwtQq/eeUW398WQj+CUbB4w83nAJvXCCIMdLxCobSGVSlFWXk5ffx8VVdVLImRZlvF6vRiG
      QSgUuuVJLYtBFEUMxYmYFiizXhJt0kaO+AFK1Djn3vwGGz7zO9jtjoJSn9drRoYG8GVMUG++
      zncrsGxZJV8QVhAEPB5PwSJhtVopKirC6/XSun4zq770F0yV7iapC5zNNJHUr3yUKEvsWVvG
      mjIr/lCK1Q0+Hm8txj8bp3cuzac2VRCYjpC+OMeDs0n2rC1haibGwHiMratKyURT9E7H2bOh
      mPbOWSYiWWbCaQTt6hlceYyMjGC320mZC2P9TdMkkQWny0VpWRl+/yThky8SmJtb8lzld023
      231HdFoXBAG720uZNYMoQNaA9jlrIeMKchG8ZeEzDPf1IEkSHo8Hi6oy0tuJf2IMtwWmUypZ
      Xb9jusl8HCybAfL18l0uV8GhM7+fbr65nNvtZsNTX+Ws8ymq9vwWA9omjMsWC0EQGBgN0jYR
      x22TiYRjvHRyij3rSlnpU3mrbQp/KEP2YnRdkUXinTY/ml2lyK1yrNNPRhRpLHdwoH0WUzNJ
      myZdwwFCgSmm/B+dcJ1HTU0N/T1d1KY7r/hNFkz2730TwzDo+PB91jumOPXBG8ta9fLN7W5l
      WcN8lYrFxtLc1Igo5Cpw9Bm1DDu24NMunRtISZw211LftAqAM6dOsO8Hf01Vx98Q++CvcU/u
      p9UdXVYg252MJXuCM5kMmUymUKzpWg6dvBOntnk9kixjrWhl8HwbxdKlWI5EPMVUwqDMITES
      0TnRM8OuVcU5GVqRcGgSaVGiwQ5DMZOB8Shrat30TkUxdJ26cjeBuSiN9SV4RR2Hx0E4nCRr
      wk6Pn8GRcSrXPnRN0cNEYGqwkyJz4epulXQqMxc4dKKdVfFDuBWdU/2zeOs34HZ7PuJutw/5
      1k3hcJh8sYHL4SsuZnpsgITkovqp38NTUkVm4ABFlpyedTzewLNf/yMSySSapnH88H6sdhfp
      4DgyWSRRwKsuL/H8TsayGMBms+VKGV6sgbNUV34qlUJWFPxR8IbbC1uuLEvoGR1TVthU46TE
      oZDMGEiSiM8mE06bbK53c2E8QmWJg9ZKO8FYhm1NPprLncQSaZrrvHg1EVGRqXSplLtUyr12
      nBaJRCJBsmQjqVQK+8XWn5cjGAwiiSJGURPJ3n0FWRhyYRCKYFItT2O9mH5XpqU4NJBm7abF
      44FuF0zToPPEASYSEpoR5b133qent4uJgE4mOMzBoydxllZR7HEiO0rpMWoQkyHmZmeZG+6h
      vacfQVVJWUp590QPfcOTrG6soq2rn/UPPEHI0chszKAoPYpbXb5R4k7FkvflfIqe1WrF4XAs
      y51vtVqRJInqVZs5n65ENy79VllsZ0WJDUkQqCl1sqrKRa1XQ9MUmsrsKKLA2hU+XIqAqsqs
      rHRiV0RESWRFuROfLce8TmvOyuK0Wyhx5FY+F1FiP/sDIq/9Hqde+SuSiSu9lLMzM/T191FU
      XEYgfeWKOT/cGsCt6ARHuwux/3cK9HQMzWpnciaAZHHy4J49tJS7cXqL6Bie49Ofeoz9e9/B
      1FOc6BjkwM9e4INX/wlJlulKlLBnXTkd/XNMJlWe+6UvUeNQ2f/OIYpry/nggwNMDQ3TvOuz
      JIU7v2fwcrDkHWB+qO9yVz5ZllEUhUwmg1a3jfPDk5Sb/pvuSLFIZq4kopSlKDlMT28/ur0c
      V1Fx4Zz+vl6Gh0dQRQO3/0Bhpf8oCAKksgYhSzWVVTVXPfdWQpQtOJQ0w8EslV4nmFk+bOvl
      kQe2MdB5mr6RaWb8ASx6iMrWbQwf/iGP1WZon5E53dbGugoLZ+Kreearv8v4hTZCaimKEOOv
      vvUmnf0TnO3qZnZyGJ8YYjxsYFdMNPnmW4BMM2dMv1m0csuC4SRJQtO0XNUE89a34hQEaEyd
      JvReF6eONpNVPTTt+TXWrd+AYiQQTv0DRerSurxsLY7x1r4XiMz52bxjN27P7dcHTNNkZnYO
      PZszQgy0ncBd3YwoSjz46NPIRpR3uMBsMMTg8QMcH4yTMYtJSIPYVCuh1l9Bk/zEx84znPbw
      +H2reemFw2xq8HAhUQ7hftTRd9m+o4isAZ0BFc8yEtKXazJN6zCdVJiyNiN5G9AmP6RZm7r2
      hcvELY0GHR8bzRXVmukn62PJTQxuJNxyEne6jWBEIh7/fM61f/o7VGlXxrxcDY+XjDM98H3e
      DwT47PNfua36gGmaBPxDvLr3CKrFynRNNbbiOtZ4fCSTSeYmBumdiPDEow+gKRKmaeLzujj+
      wp+TLatic6udn7zxJo8896v88wcnONMzxg++90Naax0IqTg+l0yxmOYztY6LsT+5FMW0Liy5
      Fs9SiD+QkghmrcScjRilrVSs3EiLw4ksy5zZL3F6ZB9N9igxU2MiJrHZG/nYfohb2iXynVe/
      D5qL891d6FNdfHll4IZubXlP9VImxTThXP1vs2bjNi789L/Rkj17Xc/sj2hMFz/IE1/6neu6
      /kbANE1mZmYwDAOn04nVaiUWixUKlnm93sIK3H72DCPdJ1AjQ3gTFyi35qpm9wRVXkh8CqxX
      9kurC+3nyzUXsMxzqk/GBAYjFraXJQvfcCmr/OXVROZjX7COlid/q9Dh/fJgy0g4zPnj77Bi
      /S4yiTC2M9+gWP54RchuaXXo7Y88QyKV4cu/8XUicilvjzqv8A0shqWursutpT/W/gGRcAjB
      U3Pd9eVXOJMkpvqu7+IbiPkRuvmmevnAtWg0immaJBMJ3nrlu4iD77NB7KDJlcah5MpBFlmy
      KMKV+o9pmjgsIupllDIZV3BbDAKpSz6gjxpT/v9X+zYmApbiBiyadkWxhfw/h9PJlkc+R1Fx
      KaU1TfgrnyZrCte895XvRIHubikDOF1u7n/gIaxWK5/+wpdIGcKSGGA+5n/oy196eQ4q2Gnv
      JzAxyMRQ7/IGcREZA0biVnCW31arkK7rWCwWvF4vmqYV0jJhoVPsZz95jS1Of642/2Vfvshi
      YDMWr4YdSWY5MWXh5JTK6WmVrjmFhC7iVg36wwrzg+kuz++e//+ULnAqXEx7tITYvNL3JjCb
      lFG89YV0Ubh2AGRl606G0sVkjeV9+2G9lC7vp+mMFd/6jDDfxe2tpNhHX8zJmyOw0Zeg1rE0
      ArrWKr+ciXBLSTJn/jtbLddO38sYYJi5kxTRRDcFelwPo7asw2g/cFsb2MmyjNPpLPwtiuKC
      ZPtMOs1P/+GPcYe6cchZTFlY8L5JXWDAqKbKqxEKRzAVO4JwaWUPyuVsKulDEsAAwmmJBreO
      VTaxyHBmxkKLJ4VVvtJaY5omhgmzaZXRyudofuphAC6cOYgwehSpeCXxVAZbvAPJf5JMZvOS
      w0asVhup5uc4MjGEJz2KYiRpFvoLYzBNiOgKo3opDiNIjZYryxIs2kTLjk+j60/fviZ5RV4f
      61Y1ok2d5NVhH1+sn6HctrgVZll5AIWVb2mms2Lt2pafad1NfNXzTPhnCM5M0lRXh+YsYvOG
      B/jwB39OwHAzPj5GRUXlHdHLS5ZlVFVlesqP0+XiwqE32Sq1MyBJTCfkixWULy043dl6Gp/5
      d9TLMi3nL9DZP0n3lI4pWRGNFNutvUhibp2XoOA1BoFiLff/oYhCPCtSYs1S49CZHwncZ9Yx
      5VrNuo27CtG5Kzc9iLnxgcLf6VQK5ToCBle0bmFF6xZM0yQ4O03XwW9QZvqxyQbDQi3api/R
      UFXHzPQUHWffQMpGsTi8wMXcllupBF+OZCLB4Z/9M/7uo4SkYtaWy5APo55H84tOSmGLzZ9u
      kt+Ks4aJHpul1TKG9SI9TiYU/AmVla4ENnnpQVwjehm90mqqtRhJRx02XyWq1cnajVvpbDuF
      cfC/ousGw3Er9Y//Nus2b7+uubiRSMTjTE6MMXj+LNahvTSoM2gX/RuBlMhgWEYSYH1xzowZ
      zqqM1j1Pcf1aMuk0U6d/gu7vIJBWmYzLPFc7jVMxyM/vR9GoacKBCY1d5UlE4dIH7LA+wIqH
      f/WWWMpi0QjnD/8EXVBYc/9T2OwLIwDypevzY7mty5VmtbLnc1+l7cwGNIsFp8e7oDpEfjVf
      rGAWXJmamYdpmkQiYYYmRxFne/BpOlNSPZvue4D291+kZm4fLiF2zfENRiyMGzLb7fsZ9muI
      Fh+bduwmEAjkAuROf0itVEQmm8Q0dd599z1aN2y97d3cB3s7SZ55kdLIMNGZSQ7HdXas9BEO
      RmmfiNNU4+P4hErvSIBVdcWYWhGDQ2O4GzYzMXCGusgxAqbJqb4Anvo16NW7GJoY5FC8gdWu
      ONMd7/Doag/+uTjl3pwX3zTBHxeptmcWED+AEJ1karSPspqmm/bOeT1nYriPVfFDxCUXmQEH
      0br7cThdBePA5XS0ZE/wzYIgCBR5fbl6/RcHOD/tcjEi/yitP3/cNM1cvc0iH8UN63A1bMZX
      VonFYsFXs4r2CyOUG6NXFZF0E87HPNg3foHkzAArrCHas41oDg+pZIrh/vM88vRzVG7+FBFb
      PUrFOoRUkNUbthbk59uFkrJKnI076ek+j1OYoV7TOebP4FRE1te4+LODGh/GakiV38fxrjGq
      yksYmNOJxlOIwwdpdYY43TXG+tUVdOutbHj61xhNaEQMkXBEJZNOcMafIhBO0lxqYTZrY9Kx
      gWN+K2tdoQXxVAAl4hyTA91oK+7H6/WhquoNNxoMdp9l9sPvI832UKvO4RIT2EPd9IdlfDWr
      PvK62y+wsrDR9GK1Ri9nhmvlvuZDNgzDKPQ1gJy1RNM06nd+jo5DCWoy3Xjk1OJjwsRR0ULN
      imaGL9gRmEYfOcZPv9eFo6iMpGlhzcatKIrK2vUbc6a6HfffMd3cHQ4HTY9/lZF/buNYv5/H
      N1fiUeDNE+OsqViBe/Is8kAHldlZWiwi3b06I8F+JoseYjIuc2BaY8/mJ2lyGPjHhpiKmsii
      QCw4TGRygvIHv8TJA3s5t3+Khz7/66zbtJUNkf+CR75Sp8oYEJF8rC7yYrVaFxC/aZokEgkc
      Dsd1l9nUdZ3s6AnWSRdAWkgXkigUUnYvh2madwYDXD64y4n/o0qw5Jni8t/zf+d3kny+ssvl
      yhWUsjtZ9cy/YazzKEWD/x+mYWCaMJexMO6+D0NUMGUHlWt35fJ7V3+WDwbPIylnWO028TQ3
      sWH3cwsaZizXFn0rYFXh510z/C+7q5EFePXIMA9tqmEiBrUtLkRM3u+0kCjdTpPLw2tHhnhq
      pZdU9kFS3W9zYlyiPNGP5LYQDcbo6B/iV7/4PFL8IXSLD11xMXfgWwjpMB3H91NvBBatENJv
      1PDQ1/6kEA8WCOTOy7eTstvtJBKJ66qTOj42SvDgNymTQ3CxSeR8+rGOH6T7jQGUslaqN+xB
      u+hnyOOOYID5xDwf18o3uNpqMf/a+QF8iUQCQcjV4Y9N9JDOGpwXWtAdNdjqNtNQdamAlKqq
      eDweKioqODA3hK/qYRrvf27JNTlvJeLxOCM9bYiygsXpRVUUBrraqLal2Xt2klX1RcR0Kz8/
      O4fb62bYuotQVmFrw2GyAwfxs5lVVQ4udLbRuH4XW7as4+C5HoxSL8+v34aIQUPTBLVV5cxO
      yzS3tiAkw6R/4y/YsXE1ANOTDzHw1l/hSIxQpGaQL26GqhEnEJijtLSs0GUIKHiuIVcnNZFI
      FHaHfD2ky5Fv0JhHcUkpGSlDlW3xuKQVtgjQTdZ/nrM/72bts/92gY52W61AeUSjUUKhXEOK
      5YgQS9EP5jOXx+MhEomQzWaZHB8heuRbRLMyzo2fp7l1HZlMprAbiaJIcXFxIalkuc0AbzUO
      vPYdmqZfRxByMTqmIBFOwWxSwDDArpjYHvy3+ErLScXDVDeu4dD+9zEH9rFR6mJQbmHt8/+J
      d/a+QyQWRbM6mA7F6R2b47e++DiapiGKIj6f76pKfjKZYHJsmLG+TsSBd9HMOMVSBOORP6Gu
      seWigSJSKBhgt9sJBoMoioKmaYX5j8fjyLJcKEIWi8UwTZPs/9/emcfGeaf3/fPO8c7xzs2b
      lEhJpCiK1n1Zh+VD9tprx2682WTTJNs2zTbdImhRIEHSFg1aoAV6AEVTIA1aJNumzaZ7eDfZ
      3Xi9crT2SrZW1i1ZB3WYokjxGl7D4dzXe/SP0e/VzGhIUYclSpovIIjHkHzfeX/P7/cc3+f7
      qGqZwMDsbATniT9imev2ecqVG2hatXDZuw/J24zN4UZiiZwAAvfiQsz3M9XcqFwuZypMFFIx
      6l78HbpCDeg3RWgFRNtnKRaaDLMUYA+103fVjs+usyZYADQCdliugGrApUwzq5avpKGpBYDp
      qUlys6Ps/fU/ZODg/6Vl4kPOffP36dn7T2hftZpv/82HXOwfRbc6GfysD4fTzcefDrB1/Vp2
      bd9EQS2w/6NThGfiNPhdvLJnM40N9VitNnSLk7yzkc7X/4DJ8BiD53+A+9z7tK/qNk9uj8fD
      5OQkuVwOn89HIpG4bdBiJpPBZrORSCTIZDI0NDRgtVqRpKI2amRqnOTFn7DSeXufR7V14bbp
      bEl/gHHTVnRjCZ4Ai/GlSzUyK1EZKAtUvlZQBCpfJ6qqD3M+14PAxeOH8Hz6xyTyEu3eWx1b
      mgHXA/vofvnvoygec/c+d/ITEld+xq5f/1cAXDh+EGffN4kXbFjW/Qp9U3D5/Bn2KP0UrG7y
      dc9weiiJ121nNi1h8TRRsHqKRQHDwKKmafLbUTWdSFpHw8qraz10d3bguFngampuxuVyoWma
      OXdaZOxUVTXdI7fbbY6dTaVSZXMpvF4PowNX0Kb6aE9/SoN8f0PEl8QJsNj2ytIsQWVmqPQ1
      i/3ZUkU78e9hD6cTEIPDZVm+a1IfQHb0DLGkneWecl94RG2g97WvER4doj+WYPPW7VgsFuyy
      HT2fNuOjTbtfYbC+hehH36G7rZP13jStNz5jmVfjasPLNAdD5Ib7yFqbwS+jlV6fJKHbFcLC
      C7EWS2YnLo1QH/Ti9/txu92m7y42o9JNSfSL5HI5MpmMKbYgNrpsNovf72fw8HfoLZzBYTWw
      PQChjSXh0Apfb7H+dbVgeT7fX+wcpZ9rmoamaWVfh6Kbcz/yhfcDobAxPTVF38WLZfHIYjCT
      lvDYtdvUGgyHn0Q8TktbB1u27TDf42Uru1n39u8iSRKpVJLx0RtMTkdQ3S20r1jF5k0bGJdX
      c37GztULp7FaJNzWAoZFLqnCL3xaS7JCc3MziqKYWlLi58Q42VgsVqamLdpnhbSk3W4nEAgQ
      DAYJBoM4GrtIGw4zwL5blD5zwzCWhgFYLBaCweAd2y3nW+TVageln1d7MCVg+wAAIABJREFU
      XelpIE6Exertfx4Q19HQ2Mi69etJpVIkEoufhlLXtooJox7dIqPqkFYlRrVGAjt/k6bmZlMk
      TGwAsuzA4/Wh6zqT4XEu7f9TUtcOs+9L/8D0s3e89CZuq0Zb+0qi0TlWtASR8ski50Er3Hwf
      ddALGFoB1CyoGdxGnDprDKmQQtM081TNZDLmhiQWuKIoZLNZ4vE4qqqiqqr5PBKJBNlslkQi
      gSRJxGIx3E2rGc76yp61YRjcCM/RH8kCBkPjcxy4MEWyoHPs8iT7z4bZf3GGfC7PwYuTXJq8
      FTMsiRgAMN8UEe0vFtWMQvxfWSdY6HsAgUCgjI77KGEYBpqqYltk8J3NZtA1nYHj76GqBbxt
      vQQamgnWNZJOp02hW3HvsVgMn89HIBAwXYy52WmWta8kG5/h8Ccnyep2mht9nD9xhCx+1qxd
      xvs/+ZCU7uLLv/QWl6+H6T9ziDXbX8ZnybB29XLOHD9OTjN4/tU3IT7GsbOXWLdlJ9b0BMOz
      BV7as4Nr16+zurPTvHYh55JOp3G73WQyGXNipmAHiM3A6XQyMTyAcu5/0OoqFjENTePySIxp
      w8beDoV3z07z6lo/h65neWN9iHw6zYGBDF4tx9o1TRy5EOat7W1YWSIxANzS0xTTUBb7MwKV
      lWLziLu5o9/JqO6lCPN5QpKkRS9+AKezaLidO980s12GYRCJRNA07TaOvnBHVFVFURRsNtst
      tQ+rg+dfeY3BE++SrVvLyGSODevcdHZ08p//0ytMXj1Cf6GFLz9r4VC+hWVbtrFSyeJyWmmo
      /zJq4hqfnB1Az46zffsOGhqCHPu4H7/XypVL59AcDRhI2Ky3OviENH0ymcTn85UVM8WzE+uj
      dcVqIu4/4PTpH7DZchGL1Up3k5vIRB5dK+CyOHG5Xaj5WQwjyCdXo+zubebgxQnqnRYadAsx
      IMQSiQEErFYr9fX1+Hy+u3ZFFqoMV0IEVuJ1DoeDurq6JZ/qvBM0TSOTyZDL5VBV1cyyiPqF
      xWLBZrOZomZ2ux2Hw3Hb++ZSPFw5+RFXEkE2tDfwC6/vxUDG17qKS2d+zg8PXaJnucLZa1Ps
      2ria9z/4mNHxSQqqxNTwRd4/fJXnn+thdHKUa1f72P/TI3gUjRtTESbC41y7fIHDx84A5c/C
      arXi9/tvi+nEjLTSoLhlWTu+Z14lkS93my1WOxk9QyqZQna4yWeyJCx2grKFRpvEZEZjxqLj
      1XRiGfXRk+EqIUmSSZaam5ujUCgsqEK3UPV4MdkUp9NJIBB45AzOxSI2N0cmk77NVcvlcszN
      zZl6/pIkkc1mkWUZm81WNl8MMGeORaNRs7Ak/o1cOcFwPsSrezaRSkSwuhtxqnFyNjet7Z08
      0+7i6Kl+8ukEF8+d5NPTJ1jVVs/Y0W/TN+vhV7/yNi7ZyviNEXbufZ7L5y7y8muvUYhHWNZW
      j+Ftp5CcYtXKlWX3YBhG1YygcI3EKZFOp7FarcTjSQrhCyhqnA+uzBJL5nG5XbQpEp+OZ3mu
      J0QmW6C1oagl1RJ0cvZahJXLgqQiccYL1qUTA1RC13Wmp6dxOp2mIVgsFjRNM08Hl8tV1QAq
      g+L5jECWZbNh/HFBtXsyjFtN8WLHT6VS5qKZj0s1Nzdnip2JHdjr9TIz1s/Rs1dJpzNs27WX
      mcGL/OzMIOt7VpCOTpKRPDi9QdZ3ttJ//ijRy4eIjY+y6Rf/EeNRlWw+R+/mnbTXOTh64lPW
      btqK26YxF03R0tJA37kzLFuziXqfy7wXEfQqimK6PalUClVVy4w4n8+jqioOh4OJ0SHcp/6I
      ZtfdM0s13cAiSUvXAADi8bjpl4tCmdjVRTFFlM/FKVFJixBEOJGKy+VyFAoFkxkaWAKaPvcL
      XdeJRCJm2jSTyeByue7o0kUikdtOP+EaicBY4L9/6wAzqhcK6WIa1OYqfpyL8aZ8kDafhGXP
      79HU1gEUqQsit5/NZsnn8wSDQbNZv/Q0Eh9Ho1H8/uKE+nw+X2Rr2mzmM5QkiXg8js9XHOSt
      qioTI9dJ9L2PvzBBhxwpU/GrhAgDS/eDpeP7VIHH4ykrkYvADm7NKMhms9hsNvL5vNkHK2YW
      wC2mqTAQYezpdNr0kR+nEyASiZhB6/DwMCtXrjSNWvBkFjtEz+l03ub6GYZRdRyux2ljJgnY
      Tcol1nQY3d1EftkLyJt2EWq8NUFHURRyuRypVIpsNkt9fT1+v9+kqJee0mLjEtkeu91elpQQ
      15hKpcrmpNlsNuqalxNs/BqFfI4Lp9+lLX7CbHM1brbF6gZcLzSTCfTgipynwzFrjvBd0gYg
      gjZRBUwkEmUPp/TkSiQS5nFemkWofMDi606nk2QyST6fX3Dq41LDXDTK8I0hgsEQfr+P2dlZ
      M4UYDAbvypjnq6ZXg91WESNJEprSSpcnwUt/5zfMnotSOBwOHA4HbnfRaHRdx+fzEY/HTZe2
      1BB8Ph+xWMyMb0RNIJvNFmU1bxLySq/f5XKZtOrmbb/IRHgL45MXScVmsSkhLDYHFJK07HyD
      oMPJtSuriM5cYqt2DIu0xA0AMLkjmqbh9/vLjvrSB6coCqlUatHCvWKHEf7k44LOrmJboWEY
      xONxcze1WCwkk0kcDseiVRXuZfRUGWwu6lsCuN3uBSvXwtCy2Swul4tAIFD2+lQqZbq1gvdT
      utALhQKem+re1dxcp9NpusJ2ux2po9Nkm3o8HtNbSKfTdPeuJzzqI3P5OIp9iVSCF4JoZBFj
      eoT/V43spijKXe2Afr//sVr8pRC5fuHGKYqCx+MhnU4zN1dd36cSVqv1vlsTzwzMEo1GF9Uj
      kcvlzKquLMsm4S0QKBqR3W6nubkZj8eDx+MxTw6Xy0Uymaya4i6t+UiSZP6c0+nE5ytWukvT
      qFarlcLwMbNtc8kbgIDH4yGfz+N2u81AqdIIRDFtMRDZkqWUAl4sRL5f7PyCRyQCWI/HY1IL
      FoLL5SoGkuGwufPe7amQl9y8d+iUefIsJGYlMj3JZJJ0Os3MzIwZ3DocDnPklqBOiF0/m81W
      zWaV8rsqOV42m80k4ImMl5hvEU3myahLQBXibiDeXCi6O7qum+Xx0grnYiB2BeGHCh2dxyUY
      FspvItVZCZvNhs/nI5VKUSgU5qV3zM3OMHHirwnFz9EvLyPdsI3uzXswDMMkpZkwtCLXpwRi
      mX82EmdmJkJdXagsc1QNIq0tqBniOXi93ts2I0mSqK+vx+Fw3BaYlxpaJS9IxAa6ruN2u0mn
      02ZiwG63s/HVv8eV/RF6peHHxwCgnD7rcrluI4sZNxtbKt0aVVXNnlOR85ZlGYfDYRrD3Nwc
      iqKYqcOlagyFQoFYLGYugMpFU7qDK4pCoVAgHo+bgw2huHiunzuCMvBD1skxJDe0cZ1LszIu
      1ytIkmSeMC6XC4vFwt4tq9mlVvr4xs1Mi2S2moq4CubXCxVGKwhxC9FUhMqdpmlmQqR0wyvt
      4BMfy7JsZgGtVquZWRKxiM1mw7v5Vzh87uO7qwNUigo9SqiqyvT0tHlNcCuHXVdXV8YLmp2d
      JZvN4vP5qgbJhlFUJsjn86aBCEOar5D0qCCCyUyVaTdQTO9WFghFlqhIe9AZOvpDuuM/Q7aU
      L7xw2o715X9HqL4BKD7vdDpNPp9HlmXTJakGcepommbGIPMV4HRdL9uQFEVZ8AQWBqJpGrOz
      s2XPVrg84mt2ux2/319WA1FV1cyWifdPGNJdnQBLZfFD8Q0PBoPEYrEyX1fseCJfXCgUSKfT
      qKpappdZCVmWzWNTVVXC4TChUAi3272kusNEMLfQ9ytTm6LL7UrfeWyffoMeb6Yqnz6lWmjx
      +szPLRaLGVjfiSUrXBrxt8SgPrhltMJXz+fzZgVeluU7up93cnGFgYjCZuX7I65pdnbWfL6B
      QIBkMnn3BrCU4HQ6kWXZLLjk83l0XSeVSpk7ZOnExPkC3tJFJVJmHR0d5uuX2n2rqmrSBiqv
      rbTRpzJdKFslVniy8zaT6Fbnogpo1ZBOp0mn07S1tZm7bywWM4NQm81mbkqiuOlyue5qfrLI
      4pSmwUWcIhQ85rt+0XBVGtfYbLbHKwaoBjGk2+l0ks/nTV9UdBWJhSCOXSgu8spdp/KNe5jM
      UEPNcfijQ0QTGTY8+yJKYZpj566wqmcTWnSI4ck5ZqJpfu0rb/C37x3g8sn3eaVdJbzqizR1
      beTQ+x+x4eUX8egZjh49gWaxs/eFFzh7/Oe0dm2kRVGZyTvJTQ8iW/QSSsCt+8+qwOovmkYv
      dlVd181AutKoSlOQpVNErVarGV+VdoEJNDc333PSofSEE/97vd5FNTO53W6TUi1JUnEDWcpc
      oPtFLpdjdnbWbK72er1m8/Xy5cvNHelRQy/kyemgpyb54PQAemyaHbv3UFffiFO2oWbn+JsD
      x2h1q6Q9zaT/6vdobPPT5pG5FPgF9JyHhl3P0mDTkawOZq6d4Fh/Erkwx1TfAQqqzrMdDnob
      wC7pyBajgjMjccW5g1Uvf82szoogO5FImBmayp4LEXDrum5Km9jtdkKhELIsMzc3Z25Gwihk
      Wb4v5q1ooxTXabVa75rQODY2BhQ3wsemDnAvcDgcNDc309jYyPLly8nn82ZhrUi5VufNQNxN
      P+79wmKXiQxf4UcfnGTf3i1MDk8zER7l++/+BIBPPznMpt3PM1PQ2di7loPTjXz3qp/RpB1P
      /Ap2qbgLyw4n184f5cCZUTqyp7H2fZMWI4yenmXkxigXkl5udH2dy54XuWSsYSjjo8+ykctS
      L4WmLSbTslq/tPi6aFsszTYVCgWzECfSnILIKKgpfr//9tTqPUAkJuZrg10MGhoazJjwsXeB
      7gSRE4biERiNRk1K9XxEsP6BQU6fPc9XfumtssD5TvTqe4Wamubjc8P86i+/jUWSaGj1s7qn
      lysDwxhahoEZnW31bqQmP32DU6xYt5ENz73GyMh1mkI+MjemscTjzMxMM5zxsNU/zVZpEGNT
      A4f6Y3TbNUYTCpp7C1t6NkHPJqB4Qjbd9MFF720wGLxtUVVSEwSmp6cJhULkcrmy7JqgZXR0
      dJTxfQS3536MQLgusVjMjO3u5XeYzTdPsgtUDclkknA4TEtLy21B5NDwCH/yzsdYjAL//Dde
      NYNjj8dj0nIFKatUnex+oWYTHDx4iKwKXeu30d3i5dDHx9iy+3m8UopI3klToGjEfac/wV6/
      Cnd6lNOjKk32OJcHx5AsVrL5Aj/7+Bjr7dfZsCqEZe0vo1tlxo++w2rXFI61b7L6hV+rmgYW
      qUtRZYfizp5Kpcy6isjHiwKiqqomUbGUjq5pGtFolPb2diwWi0k/NwzD1Fy6HxiGwdRUcWSq
      oD7czbPIZDKoqlqsjTxtBiACtpGREVpbi/TdYlYlyTsHTnBtVqLBluC3f/mled9USSrKLD7q
      9OjMzAzJZJJkMomiKHzjB4eJEcSSj0MhxT/+0h48HoXT3/n3tDlTuPb+Lo2ty817EIGk4OiL
      wpfIpNlsNpxOJ5FIxHRfRK1EZHYEP7+S46+qKqlUClmWyzSBFsrU3A1EfCGu5W6MStR8fD7f
      kx0DVIPIPYvFLyqT3/zBAQYiBpJkYSbnoL//GqlU+RCN0oLMjRs3SCTuf07t/SAYDJrc+enp
      aVK5YlHQcPixOH1mZdai1DNbcBFsaDZ/VgSxwqeXZZl8Pk88HieZTOJ0Os1+4UAggGEYJsHM
      brebZLZq7ozgKAkm5vT0tFmIe1Abht/vN4mRd/scHA6HyTx94mOAqZF+Tpy7iobMF197kdOH
      P8BS38nODSv48Mc/JZHP0bv9BVLTQwyOqmRzBj2bn+Wvjo8xO7if5oDM1m1baXRpDE3MUdfS
      TtCWoe/aGC+99jpTZ8+wc9duMAyzk+phwWKx0NTUVKQCGwYuh40kgGHgs2v4/b5ilqT9GbLZ
      TkKhkCk1KDI8YhcVVINqxUKhWFdJqRA5/Ewmg9vtLguaAdMdcrvduFyuqi2s94rSeGMxu3+R
      Ph4z5SEVRWFoaGjpNcU/aFgdCmvX9nDj6mlCrasIBgNMTk+yYlkHK1d3E3LmuTScRFaCRNN5
      VIsPfzAAFjt2fxuq7CUxHcZamKOlYzWdK1dw9uhJ7PHLTKQcRCMRnIqXVKLIz8nncg9NW0i4
      HYJOkJqbxGWDrasCrGwNsHxZC3WhECvXbqJr3TaT/yQo0JX1EE3TsNvtaJpmGkqhUDALjMKX
      L1VoFi6USCoYhmGmmguFgsnXr6QnPCgIA1iMYV04dojxj/83OWTq21Y9HSeAU7bw4+9/h4ae
      HdQHvBSSonNJYujqpxw7fZE1m59nNjLBxOgorWt33fy2hXxilJGhEd7at43dz67h1PEjnHrn
      v7JruUbfeA5vUy8Z3cWpE0d5bvcuUqkUAwf+J2te/x2Wt3c8tHsUmZG3vvgFZHnh4FxwpQQ9
      IRqNArf0dxKJBJqmmT3Uot8ailk0YQjj4+Pm53V1dWUU7Vwuh9frNRe84Po8SkiSxLpnX+Rq
      IUr2xP/icjZL+/o9T74BHN7/AxrX7WJlgw+1kGNmJkIsOkdidpKU5GPvni38lz/5P+SUegxn
      A7LNQjY2gW73MNR3nhWru5gbucBgo0yosZUrhThbOhrIZjWkxmZOnTnHzOwlViWPYdhcbLRd
      5/LpD2hb9g8fusyiw1G5yAwO//g7KL2v4ssM0dc/TH17D3u2rCU7F+bP3tnPlrVd5K4eIBtY
      w8hMBqe/nu29y/n5x6fI5vJs2bGDC6eO07Z6M0Z6mq7eDaaeUDAYNE8LRVFMlqeIs0Qc8CBd
      n/uBYRhI9Ws4eewQr1z8Bu8dPfTkB8GtnWuZG7nGtcFhcpkUwxOzNAQCxDUHChl+9MFZCoEO
      tFya1qY6DF0lOj2F7HDS1ujludx+XrCdxDn4HsbR/8bX99RhBZ5pc9A9+i2+onzCV9dk2Oge
      Z5M8gM1icOPqOaamJh9pgAwwfeMSyTxMxDJcuDbKW7/4NtP9F8kaBh8dOUkqfAHLxW+z2XqJ
      wQ+/ze4XX8CZipK2utj74sus6whw/MQF2nt3MXDpCFNzGRLJNIlEwqz2plKp27rBRJ49GAw+
      MrHhanC73bjsFgaMVkZzHl4NXnnyT4CJ2WIqbl1PFx6vl507d5nfKwQU5g5dxeKyIzsDkJ2j
      y5NAWrkWrDaCHevZ4x+kya0Bk9B1iykZ8siACq5yOoWqS7RYI3zyrf/I8pXdyE1rWLnuWTNj
      8TBw/sRhNHcjo4M32LOxi2Nx6GoN8t57+5kMR/ns3HFCqzZhHPgG61YUl4CdLJJWwI2OISv0
      nTzEVMHLay/0cvjnR5E9jeSycc6eOM4zG9fhuCm6JbJQlRDZoqWG7nWb2XjhLNble4lf/tMn
      3wB279o5r/KBpmkkIpMYjhYseoEdPU28sOMZ3v/oBJOxJPFMGu0uGRGy1WB7Q5p4Pot3boRM
      5Gd8dO4jlm/aR6hlJYrHQyAY+lyV6Dbs2IuaTTB14wo/PXiYQWkNW9/cQuOyAkd0K26rjaFr
      5wnHdfpm8nyWbMbwOBkem6E/mWf5zGfcSCvs3dyJJHt5fs82TvUNk0lpqNkcsl02Wy+BsmwS
      QGNj4yP3+ReCEmrCsCuMKxuevkJYKQzD4Bvf/B594Tx/98U1LGtrMQ0lk8nw19//Pr/VcBz7
      fa7VqYyNeqfKTNaOIUmk6zaz6pXfxhesAyjranrQULNJEqodWYtzqX+E9Rs34bwpijMxMc7l
      v/0LIsFN7Ni4hquX+gi1rSLoNDh/qR+Q6FyzDqeRw6J4SU6Pkbd5cduLgW1pyrRQKFAoFAiF
      QmWyNEsNF08f4eyl6/iDrWzduOLpNgBd1zl77jyT01E29K42H9r44BUsfd8lRJSgrPKgn6Vh
      wLi1nXTjdnr3vo3LfUvs6WHDMAz6+/vNFOhCTUMCyWTS5P6UvlbTtCW/+1fiiQ+CF4IkSXR3
      dbJ5fU9ZLjzf/yFdjmlCjge/+It/F9r0YbrCf8W188cfaaedJEksW7bMzNqI6nc+nzflCSsx
      Hw9qvnhgKeOpNwCPx1NWSMlk0niyIw/p74Oennkof2shOJ1Os/XT4XCQSqVMiZFKlQfhrgkl
      uFLa9L3IqjxqPPFB8J0gjCCfz6NpGh6Pl9GmfcgT+7FK0OQqoOkwnpaRs7OcGUnQ1uSnt0Fm
      /9kwNtnB3mdCnL48Q0oz2NnbRMhhYS6W5thgjFxWpbuzkexcnMmUxpbV9YTDUbI2B2tag0wZ
      zXe+yIfwHogRRqKpBYqLvdIAxPQWXdeJxWLIslzmNj1uBvBUnwACgtwlgtDu7a+Q3/UvuKyu
      pD/lpy/4BrPrvs7Bz1K8trGZ66OzxOIpXH4/L62rR7FZ2fNME3vaXZy8URyVGPC7+eLGZgIu
      K42KzvCcxL5uH8evx5jNQmpO54SxmdXrNqA/4nqBMIBKCCpzPB4vEyYW+jrCEASxLJfLEQ6H
      7yjItZRQMwBuUQmEL26xWKhvbGbL2/8U14u/z6odb9CxYhV6XQ/fOx1hJFFAdjpxGnn2nxhh
      ImtwfSzK9z6dpbflVkIhn8uTwE6d00Eum+RHZ6fpaHCTyamMNWzFFuzk/Kmfc/x8/yO8+1tS
      JdUguP6irVT0XQMmTaJQKJhjXuer+i70Nx4lnnoXSEDIc1QGfiKjITscvPDV3yUdm+L9d/6C
      G6kEvR02htUcM4kczfU+fj3k4OBADHu7m4agizP9EbasbkZNp9G8Xr7U7Wb/pQTdz36R+oZn
      8bhlmletZmBo8lHdNlBMYQqRqkqU6vwDZtuk+FgM4SjVT6oMnIXukqZppmDVUkHtBLgJoS5Q
      Ok+rsvfUome5OjTFl37n35Bt2Ez/jQhS0E9vSGZoNMrJsRwv9fg4O5zAArS1BGh1W7ApCrsa
      rBwZSvHqxnqc3iC9G7fy7O49jF0fYteOLY/03gU7tNrOLcSrBIS8iKBAJJPJsoC4EoIdmkwm
      TUnHpYSnug5QDUINLZ1Om/qj1fQ3B84fQx/6mF55BIf17h7qQGAfW97+Zw/qku8b8XiceDxe
      NYUp9EcF9Vns5MbN/gfBKhWTdhRFMQfdaZpGPB43F74QNl5KRbKaC1QBwWB0Op2Ew2HzNKhs
      9ujcsJN4Rw9jR/6YVda7c2HsofYHfdn3DMMwzF1cLPLSJnjRculwOLDZbGUDL1KplDmKSag5
      l6aU8/l8WRZpKQoQ1wxgHthsNurq6giHwwBl/q2pbWmzk5I8wOINYDIj09q7+/O45HuCJEmE
      QiGzL0BAqE/X19ebWZ7KQpfYFBRFIRgMmkaTi4f57o9P8atffoUPf/JDNJvChm27ycUnudA/
      Rs+GbXR3NKPl4hw48BEFPYtVacdvmSWaKhDLWdnR3cjl8ThvfOFFLpy/wObNm/g8TKcWAyyA
      atKIwkVyu92oagFPfuqufmfa14U/EHyg13m/cDgcVSnNIg4SnWSiQCYgSIZ+v/8Wj8nQ+ejw
      aWx6Dj07x0xaZsPmrSyrd3L6/BAbNqyno60RABUHr7/1Fp0NftrXdPPcvtd5fksn9S3LGZ6Y
      pdvj4Nz5s6RUC5nc55NarRnAAhAqCblcjnQ6TTabNWVCis30CnO6Qjy/uPJ/LG/Fv/3XltxQ
      DpEGLt3dxa5f+hqPx0MymWRmetpUjZAkqWzKzOhnZwmt3IDbZiGVk9i+qYuxgXOcPX+J0Uic
      eHSKH737twCEx8cwtByXwxl6lwUAg5+fuMzeHc/QGHTRNzVJZCrM1NgYhw4f+VzuvWYAC0DT
      NGRZNn1gXddNgxCyIPXPf52rTV9GmycO1g0YSHm5bN3IbPdXae9c+3BvYpEorQAD5gjaUmRS
      SSLHvon8yX9g6OCfm8Wz0lMhldUYu3aOk6dPcWVgAN2i0NpYh+4I0BaQaV+xErQ84aFBGpZ1
      MHjxOO3PbMMqSSSnBjF87Sh2Kxu27WVlYx3rn1mDEmoE7fbJlQ8CtSzQAkilUuZkSlmWzQct
      ODIiKEwlEwwd+R7bpTNlmpuzmofZZW/QvnkfDY1Nj+guFg8xvgiKmaHSWcPZTJqxj/+c9fQB
      MJmVKTz3h4Tq6gkGg7cZy2R4EodL5sr508wVnLy6bw9qOsbRU+fZtms3nxz8kJe+8CrRqUmC
      Tc3YJEhEp5HcQTwOGxg6k1PTNDU2cvXip9SvWEud98Gv05oBLIBUKsXU1BQ+n89URiiFmM2r
      KArnjx9k3cxf47EVjSRacGDZ92+X7I5fDcLgDcNgZPgG6ZlhGtq7mb7wM5xOmTWxD00D70+4
      UF7+13St7p6380soxzmdziXn9gkszataIhD6OaV69EL0SeiIiupxY0cPkQkFjy0OQNTSwIYV
      3Y/y8u8aQteomOeH1OBJPFMn2MgAehZEnKsbMBnYiS88TM/a3nl/n81mW3CqzFJAzQDmgcj2
      VM68KuXue73eokTIjWtY+t5hhSNu/ryYQvg4wWazMTs5hkV2o2sFtjgHcEs3CXA3byerSTgs
      BltzhxjNepdcXv9uUTOAeZDP50mn07f5tpWTytPJGJ7Lf8ly5608elyVWfbCw5dFuScYWX78
      vb/BUPw8v+9FLh7Zz9Vzx9m2OoAraIBhMDwZZ04t1kX2T7ZRl/iU7Rt6mM47uTw4zoqQncm0
      hRUtdY/6bu4aNQNYANXmEJf+bxgGE+EwiuRGN6JYpGK743TdLjav2fRY7I7q7A1o28ybu7uA
      PFu+8FW61EucuzqAFGpAV3V0m5WZ6Qz57BQ+Vx2rnAX67Dto79zGSN9FYj47vTv2zis+sJTx
      GGxRjwbVBj6XKiBLkoSqqnR2r6Xl9X/JxcAbpFUrY441dL/yW0t+IajZGPvf3c+M6sUau8p3
      v/WXDE7mqPdZ+PENHzt7QgBYbFZW1LuwAF11FtSR01xV1uFwdTD22Vli6ShDYxP85Pv/j8FI
      9cmVSxm1LNA8SCaTTE5OlhHhKim/Ikaw2+3ous6pd/+MHW99jaaKRjSTAAAC6klEQVSWtkd1
      2XeNeGSCgt1P5OpR4p6VXD3+CZ0tNnrGv0M0kcPnc2BD49CFKJu7G4mu/U0kLNi6XqC3Wean
      B49h0TN0t3kJO3vYsSr0qG/prlBzgapASIffaRcXg7VzuRxWq5Utr/8mjc2tD+kqHwxcipeL
      xz/BcDews7Oe8GU35wfDjE3A4EiKPXs3c2JUQ6t30rXrTeIzs3hauljf6iEbm2Dd5q34LElO
      nr/Onj1Li+KxGNROgCrQNI1IJFI2bxjKTwCBUgW0xyLoXQQMwyAyM4XLreB237r/pe7W3Que
      jCf2gJHJZEx6cCmqNXOI6SpPyuKH4kKvb2hCUTy3pX6fNNRcoCrIZrMUCoXbGsV1XS9bCEIF
      uYbHFzUDqAJJkqpmgaBoBGLerc1mW5JNHjUsHjUDqEDpFPL5+CticHQNjz9qT7ECpRPQKyH6
      AJ4kf/9pR80AKmAYRpkaRClcLteixGNreHxQ28oqIBrCqykklHY+1fBkoGYAFRApv0qBLKvV
      akqC1/DkoGYAFdA0jVwuVxYHlEon1vBkoRYDlEBIgWiaVqZv4/P5qopj1fD4o3YClEB0e0F5
      2T+dTtf8/ycUNQOogK7r5PP5sj5XMf+qhicPNQMogaqqZqN7qQEoilImEFvDw4MQ1/28RHVr
      BlCC0maXUldoKQ17fhrxeQ7cqBlACSRJwm63Fwfl5YtCTIFAoCrtoVIst4bPB5Ikfa7Fx5oB
      lECM/lEUxXSFqsEwDHMqSs0IHm/UDKAEkiRhs9lMQViA2dnZqq+zWq1lqdIaHk/UDKACsixj
      tVqx2+14vd6y4XClEJNkani8UXuCFbBYLHi9XlMhTVVVYrHYvIZwr1iqQ+OeNtQMoApkWcbv
      95u7fCwWMycjPig8yW2GjxNqTfELoHSXFinSGp4s1LhAC0AEuzU8uai5QDU81agZQA1PNWoG
      UMNTjZoB1PBUo2YANTzVqBlADU81agZQw1MNW63TqYanGf8flR8w7x0xKWwAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Carte générale' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diagramme Coût' width='192'>
      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
      zTmbm3wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagramme Duration_ProjectType' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diagramme coûts_ProjectType' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Ecart Cout_country' width='192'>
      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
      D+DyUvNPnp5J1beMT5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Coût_ProjectType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Coût_region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Coûts_ProjectType' width='192'>
      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
      kwAIW/tfQbdBsXoPulQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAWR0lEQVR4nO3dWXMb2Znm8X9mYgcIECC47+Iq7lLJKofbnumOmLmf+7mcu/kWEzE3czGf
      YG76G3RER0d0dLjD4/K03Va5JIukuO/gApDEQgDEjswzF6RU7nKXuIGShXx/FRUiCeBFZpIP
      cBLn5DmaUkohhE3pn3sDhPicJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWmiYAlmXRiC4NpRSW
      ZTVgi8A0TanziWrdt07TBKBR/XlKqYbWkjqfptZ96zRNAIS4DwmAsDUJgLA1x+fegEb61Zs9
      TOthbcr35wC6/vDXBtM0MQzjVvcN+t38dKrvwc8p7qapAvB//uENpUr9c2/GvYz2RiQAn4E0
      gYStSQCErUkAhK1JAIStSQCErUkAhK1JAIStPUoA7jOgTCanEJ/DrQJQzyX4v9++QwGbG5s/
      er/NzQ0AtjbWKNfuNqT43bslAAoX55ylL//s9uTxDqlCHaiRSmXvVFuIH3OrnmBVL2NVS5xm
      imSzOcr5JMvrByjNYHZqmOW3K/jCbWyuLVMzdTSzzOq7ZUxL48WLeTRlsbmyxEWhzszCAkt/
      +A1eb4Bw7xja5SnpQoXLUhWAerVMyXQCkDo94jB+jjfYTv5wjbwrx0+eTZBJZ8ic7JFHRykn
      z+eePt4REk3t1k2groEnJGK7KOBk/4jxheeMRDQOM2U0TyvTkxP0Dwww/XQMh8PD1MwsYadO
      BUCZ1E2FWbzgPF/GH4qyMDdJNpMjU6ywMD9PyO/6s+es1+poms5J/ISu7l4mpmYIeAxKpQqm
      ZTA1M4dTqzbuaAjbuXUANMNJd6uLePqSYKuP48MTjpIlIn4HwWAQTQOnBulsnh82fqxikoIW
      Ihz0wQ/a+vVymVTqnMtS7foniuJlnstCkfhpkr6eTgxdw+12k02nqJl/Ul27514Lce1WTSBH
      sJvhgAOvc4S/8keJtoXhLI7eNkNrwIPf0wLAzMwM8WSWgcFh3A6d/rERXIDm72K44wTDPYU/
      4KPDPwoON6NDbpxalEQqx+z0VTMmEO7AV4iTyV3ydHKc81yZ53PT+L1uaicnmJaTkdEBNBRO
      YGRk7LGOjbCBWwVAc7jxXn8djUau/u3s+XC793rEr8Pto7/X9+HnHt/115pGe1fv9wWdVz/3
      eQ3ATX+v/8NNhtPD4PDwh+/7/MEPX/f09V8//vvN9vm+fz4h7kr6AYStfZYA1MpFCuW7nbyW
      S0VM6SoQDfZZArC9vsK79S0A8tkL9vd2yWYv2D04QgH5TJLDkzOw6lwWCsQTZ5QLRSwgnzln
      L3ZCvVZmd3uLTL70OXZBNIlPHwBlUdO9BI0aZVOxsrRMOOTl9eImnmqSg0SK1d0THKUzdo/P
      +fU3v8HSXaSO45RKGdYPzmlr8VGt1QlFomysvfvkuyCaxycPQOF8n7OLIhfpNMfnWfzBVkLB
      FqLRdgJ+D6XCJReZNGf5CoZZo39kkt6OVgAqhTyt0U6C4VaSRzGO4wlyBXkHEPf3ya8JTmTr
      /M0vfoJuVdjYiePz+wAdv8+D4dIJ+TrozSepYxAIBqhdlgHw+H20tPWQWFpiOXNOpNVNvVjA
      55VPgcT9ffIAjIyNX31heJgc//7jzpGhqz9kP9Cz8NWHn7ddfepK7+gIALMLzz/c1tv/uNsq
      mp98DCpsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE1TTTIdg2manF0Uf3jB2Z0pZaEU
      DZkevW7WcRi362t0OnTaW/3/7m31eh2H4+F9ln9pdRpZ6751mmp69K5IAE172HWS7xfbu+28
      /h/TyD8U8TikCSRsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbK2pemn+9h/fUqvfbVr2
      H1IoUDy4Qw3AUha69vDXmGatEwl6+S8/H39wnYdoqgD80x92vtiFsu1oqCv02QMgTSBhaxIA
      YWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWtfVACsepXt7V3M5pjJRfwF
      eITBcIq3//rP6NFZ5sY6qVWrmErDZSjS+RKRYIBKtYbL7cbQdUqZI/7ljzHCPovo8By9YTem
      ArfLhWWZVGt13LpJqgDZk3WM8DD59Bmulnbcukm1buFxuxu/G8IWGh4Aq1rAEX5C7TKBVQnw
      7Zt3hNs6mOhv4zR1gcMsc5rKUKzpPJuZAGBo9Cn9oSLrx1m0QomLVIqOsTlONpbwhaIM9wWI
      n0IpncGthUEl8TlDrKwt0RJqZXhsvLmGtYpPpuFNoORJjGQqxVn8hILmoa3Fw2U2z/tByul0
      inK5SvYiff0Txd7WKjsnBSZHoiSTGerVIslMEpevi6eTY7gNHU036Ozq5smTQQwNqpcZ/J39
      TE6O4374HFbCphocAMVZrs4vfvaSv/nFV+xtH2IqqFcK1CwNTdMoFYug6d/PvKbpPBmfYvrp
      OE7dolyuYRgGDkcLZvmUt0srVEyFrmto+tVFKpqm4w5GKZ/FWFxaoWI2di+EfTTV3KD/9X/+
      nVwQ8wUZ6grxv//7f/6sc4N+UZ8CCdFoEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIA
      YWsSAGFrEgBha001itjlMDDNphjaZAtOx+cfxttUg+F0XW/KdYKbtU4ja8lgOCHuQQIgbE0C
      IGxNAiBsTQIgbE0CIGxNAiBsTQIgbK2peoKLldqDayhLoZRCNx4+14pZNzEcD1u3uJnrNLLW
      fes0VQD+2//6e5kWRdyJNIGErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCE
      rUkAhK1JAIStfTQAyqyQOE+jlMXG5iYKSCQSP3r/s0SCu4yhTCYOWVxcZGV9i3pjBhcKcScf
      HQ2q6QZHB/tE/QPs7xzRMzTK8ckJIb+LjZ0D2nuGCOhl9o7P6O4f4PXvfkfXxFOeDg+wtbVF
      INxJu99BMneB4W4hlzrDrNcZnJyl1evkNJVlemYWh6FTSJ9R9EWo5xK4vS0kkmmqloOoT3F8
      mqZveJxKJk7msog3GGWgs4W19W1aIl0M93d9quMlmszHm0CaA7cBR7EEUwsTpOIxDHcr6xvb
      jE1OEY/tEo/H8QYjhFuC9PQPMDP9lNjOBj3D4xTOj0ilzkmVDPraAlQ0D7Nzw8S24lf16yWW
      l5dY3dilmE1zWbPIps4oFvNsxFKMDXYQi18wNzfL/tY6uYtLRqemyacS7Gxu0D08TjpxhAyA
      Fvd14zlAJOBhJ1Ohrz3MwcYG0e5OzEqBra0t3P4gw2NTtPs1Flc20DUwTQvMGjvbWyiXFwMn
      AwM96Bo4HA50Q0d7Pxmdw8vs7BxTE08wNLBMi3K5DEBv/wAOQ0dZ1tX/aNf/gaUAs8rO9jYO
      l5emmNpOfBY3BqCrv4+ejg40h5fuwX46gl5mFp5jKBN/IEDp8oKjRJrhoUHGxofZWttkcHKW
      gFPD7Q0QirbhdznAcNHVHgE8dHa1AtARCbLybpmV9S0C3f2kDzZR7lb8/iBdET9oTkYGO1hZ
      WWNscopapcDqu3f0DD5h9Ok8LU7wBAJ8/hkmxZfqi5ob9Hj/gM6hwX/3xEUWyhb38UVdEtk7
      NPi5N0E0GekHELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELb2RY0F+hjT
      NPn7325SMx94ZY1SKHjwesNwteawrj/8NaZZ6zSy1n3rNFUAZKHsL6tOI2vJQtlC3IMEQNia
      BEDYmgRA2JoEQNiaBEDYmgRA2JoEQNjaF3VR/E3WY0ks62H9euq6J1hvQE+waZoN6VBr1jqN
      rHXfOk0VgP/xt9/ItCjiTqQJJGxNAiBsTQIgbE0CIGztVgEoF/IcHcc/Ota+WCjwowOrleL0
      9OzqfskY+4k0sViMWOyY+o88SKk6xWLlNpsnxL3dGIB66YLXy1t4XAblao3M2Qmxk3OwaqST
      52xsblOplPnVL/+JlY0dCoUc2UyKdK7I4d4WB8dnKBSnZ+cA7MWz+KoJCspDS4sfTSliu1vE
      4ucopTiJ7XJwfEoyvsUvf/kbEqkshWyK7f0jlIJ8Psfx0RH5XI6j2C5n6dyjHyTRvG4MQGI/
      xpPpKaLtHXjqWbYTl2iXCY7PUyyuHtDd5mX/OENXdy8To0Oc7a+xvJPA73XgDYTJnuxxUaoB
      oMwylu5GVxaJ4yNixwksy8QXDJM62CFzmeLotEjI7yYUbae3d4iOkJOltQMi7hpbsVO+/Zdf
      UTO8HKyv4gi2c3Sw/egHSTSvGwPg87vJ50sAlAs5MukUycsKujJpa+/A4/GCdXU1lm4YGE4P
      szNTUEiyHUtQKVaoWFdNp9TJMdGePjTdYHxqhvmZSWq5U3YPT6kUy1jOID3tHlY3trAsDd3Q
      0etlUpkMh6cZHIZGR98wQ91tON1+wq0tOB2yOoC4vxsDEO4bpXq+x+LbRaredrqCLjTdhc/n
      I+BzoxlOfD43HdEg79a2cPkCOHQNw+VDM8sohwuXoRPw+znLFmlv9eJwujnYXGFxcRXL6YV6
      Gc3pxrAqpC8ucXu8GI4g1M6IX2qM9rUBOn6/j0AgAIAvEECHD98LcR+f7Jpgs3LJZizJ07Gh
      x6kvC2SIe/hkQyEMd4CnY/JqLf6ySD+AsLU7B2DpzSsWFxc5SqQasgGv/t83lE0FyuK3//wr
      ypikUpkPt2+vrVC97n5IH+2TuCiwsrLakOcW4u5NIKeX+dk5APZ39xh8MsjWxjYer4tcOkm0
      d5jTwwPqSmNqZpJ3b5cxDI2ekadUUoekskV6hifoirxvDpU4PE7S6y2QzJvUgFwuh89hsrpz
      yEXmgv6xcRbfLnJ5kWPwWTumaVLMJVnbPMDTEmZ64knjjoiwlTsHIHN+wuKior1nkMv8JXD1
      B1uvQNvABEYhQbh/jE5Pns3tE9yBNmafDrK0vET6/IKhkUG211fIRwKEOgfwhjop5845zFsM
      dYUAxWW+wE4uw8KzZ+ysLJE93CI0PEdv/ojq9Xbsb27iCXaRONhnbOKJLJUq7uXOTaBwew9z
      c3N0R0OYZp1K6ZJsoQwOL21BPx6vl2zmgvR5Gn9rgHq9TuHiDMMbxuNxEwy1MjQ8zNjkNB3h
      FtAMfEaVbE3HZXy/OQ7NIlcok83lcfk8ZFMZ8tks7wdj+AI+XB4fo2MjciIj7u3O7wAhn4vl
      5WUinb2MjQ6wf5RkYX4Gl8PAYWi4on10VWMUVDtPOlv49eYGJy1epseHqfRG2N47Ymh0/EO9
      ocEhPE6NtroDw6zgRWdwqJ+WgI/tzU36RycJtkfoqOxRdXcSDbgJDg3SEvCzt7OF3hLFAZiN
      PCrCNh63H8CqkUjm6eqIPNpTvCf9AOI+Hrf1oDs/yR+/EPf1CAGw2F57x+LiIsdnmR+9VzKZ
      5IeDq2M721SuL2rfWl0kFk9+uC2XSVF74MznQvzQI/QEW5RqOvPzMwCkTo84TqQZGBlHFVMc
      JlL0Dw7x22++YXh6ntmJETRNQ9WLnJzEKDpa6WkxWd3e5/lXHZycHJMrVOkMBUBXHB/skCko
      RoY62d7ZJ9jWzWBPe+N3Q9jCozSB0qdHLC4ukkhlcbu9uJwaK2ub7B/EiHT2EPD56RsYZHpy
      lGTiiMP4GaeHhwzP/5TyRZxgpJPh4WH621tYWt2kr6+XdDzBZfaUVMXF5NgQDocTn8fD2trK
      Y+yCsIlHCUCks4/5+Xm62lpY39ylf3AYt1NjZv4ZlFKs7xyicTUHTzjaRVc0Qvw8RXxvi0wq
      SbH2/Xl5d/8QAa8LAGVZOBxOdMNgb32dlo4eIiEZXyTu7xGaQBqaWWJxcZFo9wAdbS3s7R/Q
      Go6QPD0hlS3RNzwIRZ3V9R1mJ0fQMGnvHaavt5vLzDnlcoVoNAq6k/ZwEIBQe5RAuAtvcp3V
      tTw9vV3E9vdwe1savwvCNppqiST5GFTclXSiCluTAAhbkwAIW5MACFtrqpPgt9unmA2YHh0U
      mtaIxZtNdP3hA7WbtU4ja923TlMFQBbK/rLqNLKWLJQtxD1IAIStSQCErTXVOUAjduV9jYee
      S8DV+YSuN+JkujnrNLLWfes01RphhmE05CQYaMgv5XOf4P2l12lkrfvWaZp3gEa9cjfyHUAp
      JXU+Ua371mmaAAhxH03VBILvP8fXdYO7vCC8P4d435fwft3Zu7yqKKU+1FCWhWm9709Qd6r3
      p3Usy8SyrjrmdF3DMk00w7jVOsZX22B96NP407V0Lcu8rnlzU0+pq+3XDQMNhWlaoGk4DAPL
      NFGahnGHOu+fVykTpbjuwLIwTetWx0gphWWaoGnouoFlmf/md36XY91UAbDMKr//3e9xOQy6
      Jubpi9z2YhnFq9/+mlBbFx29g2QONylaOnXNw4u5yduVqFdYWV2jaBm8nJ/m9at/xeFy4msf
      QM8nyNehrly8WJjio78Wy2RrY42zXJmff/2Ct3/4Pc5AK+FoF0bxjKNMhWpN8bOvn328DoqN
      1SVqSqOKh6BW5LKuYWpuxjo9rMQyWPUaL79+icv4WCXF3uYqxZpFvmzRF9KJ5y1CrWEG2ty8
      WT1AM6vMvfwZAdfHQ1DMJtk9PCWbOmfqxUvW3/4Rh6YYmH3B6cYiyuHEGWhnemzgo3XqpRxr
      OzHKl1n6xhfYXX5FuL2Lzr4hkvtrlDGwdD/PZsdvOEZN9jFoPZ/A1zXBVy9nSeyf3P6BVg3L
      clCvW7hdDnIVi/n5eVQ1f/saDjfTM3P4HEDlAuXvYv7ZArmzUzKlOgtzCzhrRW68WkE3GH86
      Q8jnBBSWZWHV67hcLo5TBb56tkBINynfuEEakzNXV+U5DAcXJZNnCws4agXWD1N8/ZPnDET8
      pAs3rcOm8WRimoHuKLpuUK3V0FG4nC7i8VMmZuaZG+vhMP7jEyC85w+10dbqx+HyUM+dEh54
      yk++nuZwfZea08/Cs68oXpzdWMfpC9EdbUU3nLhdOkpZ1E0Lt8tJvgYL88+gnPuzSRf+jFLN
      9Q6g6QaaUmBdvUXfltKc/NV//A9YtTLfLa1iaBo85MxI19E+FNDQri4AvXtJBV/99OegLF59
      +xqX00Bd17nN3u2sLVE2Qsw+HeTN6zcfHmtoGtb1d/otCp3sb5DIK14sTH+4//K3rzCCAVoA
      Sym0WxRSaARbI4SSp2SLdXAqsIDrZuKPr7L4gzpK4Q+2EmlJk82X+flf/yfMao4/vtu+Otbq
      dsf6Ir7TXAFwBDqppV/xbVJjZPb5rR9n1Sqsrq1Sr1tEO/sxSue8efMGT8vtZ5uoVwqsbWxx
      dHxCpLMPVy3F6+9SdAyOo+XjvH7zBlcgjPOmbTFrbK6vcnh4REu4g3L2jHLVxB9upyeg+O67
      N+hOL56bt4itnRjd/QMcHJ/SHvLw+vUb3IEIk50evn31HYbh4IXffUMdk43NXSKdPWzvH+HX
      SiRzJcqGh2cDvbxeegvAVy9vnqA4fXrEYSJNrWzxZKyPneW3vDpSTD5/SXxzidev/0Cka+jG
      OpeZM7Zjcaxale5wjbeLi6h6hbbuEbT8Ca/fvMbT2n7jfLGtPaPyKZCwt6Y6BxDiriQAwtYk
      AMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtb+P74LDpCc0rASAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ecart duration_ProjectType' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Feuille 20' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 21' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Livraison_region' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Livrason_country' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table de duration' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
