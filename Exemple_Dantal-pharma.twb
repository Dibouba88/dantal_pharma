<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[F11]' value='[cleaned_BigPharma-ProjectData.csv].[F11]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
      </column>
      <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
      </column>
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calcul 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Actual_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calcul 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Planned_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100+[Var_Deliverables]* 100' />
      </column>
      <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Planned_Cost]- [Actual_Cost]' />
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Planned_Duration]- [Actual_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ Cost2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt;  [Parameters].[Paramètre 2] THEN&#13;&#10; &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;&quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
      </column>
      <column aggregation='Count' caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
      </column>
      <column caption='Categ Deliverable' datatype='string' datatype-customized='true' name='[Calculation_2063774573782769665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables] &lt; [Parameters].[Paramètre 1] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Categ Cost2 (copie)' datatype='string' default-role='measure' default-type='quantitative' name='[Categ Cost2 (copie)_1109292929746456580]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF 1 &lt;  [Parameters].[Paramètre 2] THEN&#13;&#10; &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;&quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Attribute' name='[attr:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Avg' name='[avg:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cum:cnt:Actual_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[cum:sum:Planned_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='None' name='[none:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2063774573782769665]' derivation='None' name='[none:Calculation_2063774573782769665:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual_Cost]' derivation='Stdev' name='[std:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Stdev' name='[std:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Stdev' name='[std:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.847589' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.152411' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;rouge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vert&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2063774573782769665:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Calculation_1726004602423439360' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_1109292929463463937' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Categ Cost2 (copie)_1109292929746456580' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Calculation_1109292929877172230' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1109292929876938757' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_1109292929462259712' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Categ Deliverable (copie)_1109292929463627778' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
          <range granularity='0.05' max='0.0' min='-0.15' />
        </column>
        <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <range granularity='5' max='30' min='-10' />
        </column>
        <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
          <calculation class='tableau' formula='85.0' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                    <column datatype='string' name='F11' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <range granularity='0.05' max='0.0' min='-0.15' />
      </column>
      <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
        <range granularity='5' max='30' min='-10' />
      </column>
      <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
        <calculation class='tableau' formula='85.0' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
      <column alias='Var Cost2' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;1&quot;'>
        <calculation class='tableau' formula='&quot;1&quot;' />
        <aliases>
          <alias key='&quot;1&quot;' value='Var Cost2' />
          <alias key='&quot;2&quot;' value='Var deadline2' />
          <alias key='&quot;3&quot;' value='Var Delivrables2' />
        </aliases>
        <members>
          <member alias='Var Cost2' value='&quot;1&quot;' />
          <member alias='Var deadline2' value='&quot;2&quot;' />
          <member alias='Var Delivrables2' value='&quot;3&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[Paramètre 2]' palette='Indicateur clé de performance' type='shape'>
            <map to='KPI/01.png'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='29524580.761088483' min='-21797503.283543896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='21241815.303664804' min='-8307262.7398131508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte Livrable'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
              <calculation class='tableau' formula='85.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100+[Var_Deliverables]* 100' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='Avg' name='[avg:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='21826300.539520733' min='-19153184.252250321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='16329456.743621644' min='-5864865.6716618836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929462259712:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cost2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt;  [Parameters].[Paramètre 2] THEN&#13;&#10; &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;&quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dépassement&quot;</bucket>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Var Cost2' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;1&quot;'>
              <calculation class='tableau' formula='&quot;1&quot;' />
              <aliases>
                <alias key='&quot;1&quot;' value='Var Cost2' />
                <alias key='&quot;2&quot;' value='Var deadline2' />
                <alias key='&quot;3&quot;' value='Var Delivrables2' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Paramètre 4]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <size column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Ecart Cout'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
            </column>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Planned_Cost]- [Actual_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='565' />
                <format attr='maxwidth' value='565' />
                <format attr='minheight' value='613' />
                <format attr='maxheight' value='613' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk] + [federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk])</cols>
      </table>
      <simple-id uuid='{E758928F-CA90-474A-BD87-8225A85D3413}' />
    </worksheet>
    <worksheet name='Ecart Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
            </column>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Planned_Cost]- [Actual_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual Duration (classe)]' derivation='None' name='[none:Actual Duration (classe):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk] + [federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk])</cols>
      </table>
      <simple-id uuid='{31F5F1BE-8838-4194-9268-D2588863C3BB}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk])</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
    <worksheet name='Table de duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
  </worksheets>
  <windows source-height='44'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:F11:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='403'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Table de duration'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='283'>
            <card size='37' type='pages' />
            <card size='128' type='filters' />
            <card size='384' type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' size='50' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='66'>
            <card type='columns' />
          </strip>
          <strip size='60'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' name='Carte Livrable'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_2063774573782769665:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[min:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
    <window class='worksheet' maximized='true' name='Ecart Cout'>
      <cards>
        <edge name='left'>
          <strip size='246'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='188'>
            <card pane-specification-id='3' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[io:Ensemble Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38670E7D-862A-4F62-AC6C-885237391965}' />
    </window>
    <window class='worksheet' name='Ecart Duration'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card pane-specification-id='5' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC9D0A7-3618-46CF-901E-8333BB434D13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Carte Livrable' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      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
      JYGfbx7BlwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Cout' width='192'>
      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
      E/j/AS/mGYwbYPXHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration' width='192'>
      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
      OZlEWEbGI/IXjRdgr+mgDNgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
      gf8PLcThi6lE7twAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table de duration' width='192'>
      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
      Kkkly/bYY7u73d0zdM/SMT0bDAFDDAQdDAMxLAEEBAQDAQQQAcQAMUzQNEwD3fRMz/Rit21Z
      VtuyZO1b7XtVVmXlXrnvy134kWVZaqlkyS6XSrKeP1JkZt089+Y995zzfe95v27UehVZVmlp
      68bnMiGaPXS5BOJFlb6eLuqlAm29B2h1mre9PjejQE+CQbvD4xYFKhaL2GyPbr3im1OgarX6
      SLv8PuHhIMsyjcbueKl+EnykPEC9nKeiGXFajTQqBXJ1Ea/z0fWGuV8qlQpm8855kj4OPKxM
      sNqosry6BpKRgYF+MvEN6qKFTp9n6xMam9Ewit6Gz+vadgp0x2Q3cP0Uv/sP/gn//J/9Uy7O
      bdz1j+JLlzk/11xt18v5D61Yng1c47d/9x/wr/7V75OTHywLqilVJq5cZHIpCJrG1QtnmJiY
      IPYADtP3psz3/vhVGhoo1Szf+u4r204HlxeX7/r6xMQ4AJVClnL9fm1RQK5k+OFrbz1xh/4I
      pNbmSNX1uF0OsqEF5kJZwvNXWY42bVFy0RUmVuIsXH2PVHn73+SOKJBcr9LaNUi3uYKianzz
      G9/gz//GV/jf3/oxdkOOzc08oyODyNYs/+0P/yc/98IAUykPb3z7v6IKeoydY3zxkJM/e+1t
      XAPH+Z2/9BVUpY6zrYsjx0ZpJFb4d3/0J+QFO1/7xaf5g2+9zsGnXuCZToHvvHEeR/sgf++3
      f/ODRa5oZGR0mIVwFg0oFEu0uny4dkwJqdHrd7ASTGOT43hbW1DkOgtzc6RyFZ55epTzZ8/i
      7T6ICIRW5lBt7STXZlEFHa2dPayurKAz2GgxaEg+I9fOncPhdqKztGMhR7ooU64rvPjc8due
      RLFInKNDnaxvFlE3V2jbd5i1uUkGB7pZXgtRkyV6XBorKZVGtcLzTw8zPjGP1e3FopXIVmSM
      1hZGDvQ/dhqjD6MhGigkgszkkuxvtyDp9HR2d7CwtsY+/1FiG6scOPwztOTHGd/I4D3gvetx
      7hru8Po66OpsIxlP3tStqJqGVpf55b/6Owx1OPjWH/4+Rz77JfQ0d+bY2nr4+3/3d5EraWoy
      PP/SS+QTHxg3ub2+5sq8Vmfk2LMY1CpGm5sWpw2DXs+lK4v8o3/xL2nXl8ndYgolCMLNH1cQ
      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
    </thumbnail>
  </thumbnails>
</workbook>
