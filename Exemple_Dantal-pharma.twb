<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <range granularity='0.05' max='0.0' min='-0.15' />
      </column>
      <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range granularity='5' max='30' min='-10' />
      </column>
      <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
        <calculation class='tableau' formula='100.0' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
      <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
        <calculation class='tableau' formula='&quot;delivrables&quot;' />
        <aliases>
          <alias key='&quot;cost&quot;' value='Cost' />
          <alias key='&quot;delivrables&quot;' value='Delivrables' />
          <alias key='&quot;duration&quot;' value='Duration' />
        </aliases>
        <members>
          <member alias='Cost' value='&quot;cost&quot;' />
          <member alias='Duration' value='&quot;duration&quot;' />
          <member alias='Delivrables' value='&quot;delivrables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[F11]' value='[cleaned_BigPharma-ProjectData.csv].[F11]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
      </column>
      <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
      </column>
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calcul 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Actual_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calcul 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Planned_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
      </column>
      <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
      </column>
      <column caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
      </column>
      <column caption='Categ Deliverable' datatype='string' datatype-customized='true' name='[Calculation_2063774573782769665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables] &lt; [Parameters].[Paramètre 1] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
      </column>
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Attribute' name='[attr:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Avg' name='[avg:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Count' name='[cnt:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cum:cnt:Actual_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[cum:sum:Planned_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='None' name='[none:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2063774573782769665]' derivation='None' name='[none:Calculation_2063774573782769665:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual_Cost]' derivation='Stdev' name='[std:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Stdev' name='[std:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Stdev' name='[std:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.718447' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.281553' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2063774573782769665:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Var Cost2 (copie)_860187577584152576:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>11.044025157232705</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>91.741935483870961</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>92.67307692307692</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>21.734397677793904</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>96.25</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13.101590997283663</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8.7202819816323878</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>92.365384615384613</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11.439756415832971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>93.299999999999997</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7.8207217694994187</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11.291812973572352</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>92.861538461538458</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>10.893166472626714</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Calculation_1726004602423439360' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_860187577585688577' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_1109292929463463937' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Var Cost2 (copie)_860187577584152576' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Categ Cost2 (copie)_1109292929746456580' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Calculation_1109292929877172230' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1109292929876938757' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_1109292929462259712' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Categ Deliverable (copie)_1109292929463627778' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
          <range granularity='0.05' max='0.0' min='-0.15' />
        </column>
        <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
          <calculation class='tableau' formula='20' />
          <range granularity='5' max='30' min='-10' />
        </column>
        <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
          <calculation class='tableau' formula='100.0' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
        <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
          <calculation class='tableau' formula='&quot;delivrables&quot;' />
          <aliases>
            <alias key='&quot;cost&quot;' value='Cost' />
            <alias key='&quot;delivrables&quot;' value='Delivrables' />
            <alias key='&quot;duration&quot;' value='Duration' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='date' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                    <column datatype='string' name='F11' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='29524580.761088483' min='-21797503.283543896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='21241815.303664804' min='-8307262.7398131508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte Livrable'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='21826300.539520733' min='-19153184.252250321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='16329456.743621644' min='-5864865.6716618836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deadline2 (copie)_860187577585688577]' derivation='User' name='[usr:Categ Deadline2 (copie)_860187577585688577:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte générale'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;</run>
            <run fontcolor='#ffffff'>Sheet Name</run>
            <run fontcolor='#ffffff'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='18131898.886724941' min='-16034705.107065933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20295568.112543508' min='-19340045.560288582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6751B8A-A9E5-4812-B726-82F6460F57DF}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Paramètre 4]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <size column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Diagramme Coût'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{705E5BED-2E1B-45F3-AB31-154FCEF7B3C4}' />
    </worksheet>
    <worksheet name='Diagramme Duration_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1C3D987F-EFAA-44F7-ABA7-20DCD4B87DEB}' />
    </worksheet>
    <worksheet name='Diagramme coûts_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</rows>
        <cols>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4B55B6F5-5242-467A-809B-F274D1A3EDB7}' />
    </worksheet>
    <worksheet name='Ecart Cout_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a90c38</color>
                <color>#ad1a43</color>
                <color>#b12a50</color>
                <color>#b63b5d</color>
                <color>#ba4c6b</color>
                <color>#be5e79</color>
                <color>#c37087</color>
                <color>#c78497</color>
                <color>#cb98a6</color>
                <color>#d0adb6</color>
                <color>#d4c2c7</color>
                <color>#d9d9d9</color>
                <color>#d2ebfa</color>
                <color>#bdddf0</color>
                <color>#a8cde6</color>
                <color>#93c0df</color>
                <color>#81b1d5</color>
                <color>#70a2c8</color>
                <color>#6192bc</color>
                <color>#5484b1</color>
                <color>#4776a3</color>
                <color>#3a6795</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{E758928F-CA90-474A-BD87-8225A85D3413}' />
    </worksheet>
    <worksheet name='Ecart Coût_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{103B419C-8D6F-4B94-B868-2E57430B1B34}' />
    </worksheet>
    <worksheet name='Ecart Coût_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{79EC9968-1FAC-4251-B1BC-BFB0CF02F19A}' />
    </worksheet>
    <worksheet name='Ecart Coûts_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{36139FBA-FA7F-4FDA-9511-B38FF008FA34}' />
    </worksheet>
    <worksheet name='Ecart Duration_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</cols>
      </table>
      <simple-id uuid='{31F5F1BE-8838-4194-9268-D2588863C3BB}' />
    </worksheet>
    <worksheet name='Ecart Duration_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</cols>
      </table>
      <simple-id uuid='{540C7657-28D5-47CE-8275-77F6301429C2}' />
    </worksheet>
    <worksheet name='Ecart duration_ProjectType'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1726004602423439360]' derivation='Quarter' name='[qr:Calculation_1726004602423439360:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[qr:Calculation_1726004602423439360:ok]' member='1' />
              <groupfilter function='member' level='[qr:Calculation_1726004602423439360:ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]'>
            <groupfilter function='member' level='[yr:Start Date:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#c90000</color>
                <color>#ca1212</color>
                <color>#cb2525</color>
                <color>#cd3838</color>
                <color>#ce4b4b</color>
                <color>#d05e5e</color>
                <color>#d17272</color>
                <color>#d38686</color>
                <color>#d49a9a</color>
                <color>#d6afaf</color>
                <color>#d7c3c3</color>
                <color>#d9d9d9</color>
                <color>#a9cee6</color>
                <color>#96c2e1</color>
                <color>#88b6d9</color>
                <color>#7aabd0</color>
                <color>#6d9fc6</color>
                <color>#6192bc</color>
                <color>#5787b3</color>
                <color>#4c7ca9</color>
                <color>#42709e</color>
                <color>#386592</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{29BD973D-2E58-4740-AD01-E210427A015E}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='292' />
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
    <worksheet name='Livraison_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{213CBA80-5D07-4420-BA36-823EF4945780}' />
    </worksheet>
    <worksheet name='Livrason_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]'>
            <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Initiation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='member' level='[none:Project Type:nk]' member='&quot;IT -  CRM Implementation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Asia Pacific&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Affiliate&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]'>
            <groupfilter function='member' level='[qr:Start Date:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]'>
            <groupfilter function='member' level='[yr:Start Date:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{AA552FCC-9DA3-473C-A44D-DC024437AED5}' />
    </worksheet>
    <worksheet name='Table de duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:F11:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='403'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Table de duration'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card size='16' type='pages' />
            <card size='56' type='filters' />
            <card size='170' type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' size='22' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='40'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='130'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' name='Carte Livrable'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_2063774573782769665:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[min:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
    <window class='worksheet' name='Ecart Cout_country'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[io:Ensemble Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38670E7D-862A-4F62-AC6C-885237391965}' />
    </window>
    <window class='worksheet' name='Ecart Duration_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC9D0A7-3618-46CF-901E-8333BB434D13}' />
    </window>
    <window class='worksheet' name='Carte générale'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD5A2839-5CE1-4952-AA8D-ECCF1B8CADA5}' />
    </window>
    <window class='worksheet' name='Ecart Coût_region'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A30560F3-7483-4E67-AA44-AA502394BF72}' />
    </window>
    <window class='worksheet' name='Ecart Duration_region'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49F9EC7D-966E-4F93-A671-EC0437DE0BC7}' />
    </window>
    <window class='worksheet' name='Diagramme coûts_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75140326-8619-41B9-88FE-FE42D5542493}' />
    </window>
    <window class='worksheet' name='Ecart Coûts_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{149D4F5C-5A19-4FD9-918D-9A47EBD88C9E}' />
    </window>
    <window class='worksheet' name='Diagramme Duration_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='142'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]&#10;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' type='color' />
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B9B3028-B764-4E42-BE78-8C2372C1734B}' />
    </window>
    <window class='worksheet' name='Ecart duration_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='142'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Start Date:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1726004602423439360:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC165193-E602-45FE-9144-9D97A953A61A}' />
    </window>
    <window class='worksheet' name='Ecart Coût_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{836AB390-525F-4874-85CD-88DD0DC85E71}' />
    </window>
    <window class='worksheet' name='Diagramme Coût'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='46' type='filters' />
            <card size='135' type='marks' />
            <card size='204' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{DF3E3057-1BD1-4EBC-BBD0-74DD3D63E1F5}' />
    </window>
    <window class='worksheet' name='Livraison_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E362096-A2DD-48B5-871F-F4F46862F47F}' />
    </window>
    <window class='worksheet' maximized='true' name='Livrason_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='113' type='filters' />
            <card size='70' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A14218B4-BCDE-4E17-A8C9-1320A6895807}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte Livrable' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5gd53Xn+at0c+gbOkegA9DIgSQIgpkSsyzZkizRssdJ9o68Th/msWfH
      chh7Zuy1Z1fe8Vr2WpKVbEmmRUkUJeYAECByTg2g0Tmnm2PF/XBRF93oBtAAEZrh/wFP4966
      VW9VnfO+5z3nf84RUqmUpSgKH+LaYJom46ND+AMh+nrO0drewdhQP4rDQSAYIhStvqHXU1WV
      YrGIy+UCQNd1RFFEVdU5xzkcDiRJQtM0RFEsj1XXdbxeb/mzD1GCkM/nLfuhfoirI5fNMDk+
      SjZfRNvxV6B4GZea8IgqcmYIt2SQIIjcch/17Wupb1qOLMtIknTN17IsC13XKRQKaJpW/lyS
      JNxuN5lMZs7xTqcTURTJ5/MLni8QCCCK4odKMAsfKsA1YHSojxN7t1Mx9iaDeQ+uQCXbXKeJ
      qwr9hSCbg9PEVZmQQ0c1Bfq1aoqtTxMbH2TNpi0s79yAIAiLupZlWZimSTKZBEAURQRBwDAM
      oKQE9t+LhX0Oj8fDh6t+CfLtHsB7BZl0ip4zJ2FwF3kBHq2eYl/awVjRS6M7S9bIopkCEaeO
      ZcGZbAirsp0VA1/HsGCiW4fODYu+nmVZiKJIKBRCVVVM0ywLcC6Xu2bhh5IpBJBOp/F4PHw4
      8cGHa+EVYBgGkxPjWJbF5NgIyRMvUucusDGSRRBgvWeU4gU5bPHmcUpW+bft7jhr8zvxyAZ+
      xYCRAxzdu51isbioa4uiSKFQIJfLYVkW+XyebDZLoVC4IYKr6/q7Psf7AR8qwBWgaSoHnv1r
      eo7tIT16lrsqJmn25rGNGLds0ebLzvudIIBXsZBnPd1qJUvt6b/n3J4XrnjNfD5ftuEFQSgr
      jG2y6LpOLpd7V/cliiIej+ddneP9gg9NoAVgWRaaqnLsrR/S6ZnCcfBv2THTRLuvirXeCaTF
      mfFz4HeYaKYAglK+hmVZqKqKruu4XC4kScI0TYrFIrIsoyhK2dOjKMqcjfBicOl+Q5ZlPB5P
      2ZT6EB8qwILoPryd6eEeRsfGyRdk1gezRJkhb/rZNRliW2V8zuy+WAwpK1h9z5Pouk42my3b
      8YIgoCgKhmEgyzLFYrFsp/v9flKp1DWZLIIg4Pf7EUWxvJewPzcMA8uyyn9fj3fq/YQPFWAW
      hgb7ObP3VQKTu6mU83h0kSMJN6sDAg/VJLGsJDPOa/eemBYMCw00Pfo7CIJQ9vDMhiAIqKqK
      1+sln89jmia5XA6fz4csy4ue/RVFweVyleMGtrBLkkQgECCbzSJJEl6vF9M0P9AKkEwkPlQA
      G9lslt4Xv0SDNUGlR8NxYUO7zHdx0yoIEHVeXRCTqohLshAFizNpP5nQOu54/JcIRStJJpNY
      ljVHqG1bX9O0eYGtXC6H2+2+JgXIZDJY1sUNuX09wzDQdb0s9LIsl02xdDqNw+FAURQkSfpA
      mEjnj73zoQLYiMdjzDiXoapuRuJj+GSdVRV5riQHpgXiAt97ZZM3xyvICEHa736SOq+LcLSy
      PBNrmjZPoC9n4th7gsUin8/PEX5ZlnE4HAiCUI4pQMnDZZpm2eQyDKO8Aff7/e/7OMFg7zl8
      fv+HXqBkPMb+t36Kz+fjwaefIS8HaQ8UafUXSt+rC5sIZ1I+BjKOBb8TBKj3mVRXuKns/jZm
      YhBgQdMHSkI+W2gvxbXY/wudR9M0stmL3ipRFCkWi2QyGdLp9DwFKxQKi77eexGjw4McfOt5
      zh4/+KECFIt5siMnOf/8X+L2BQh6nBT1kvlyulDDqUyE0ZzCmUTJ925acGjGR1aXaPGp885n
      WfDmRAS/WORu1xniNfez+sGfR9f1cjDrVkLX9XmrjaIo5f2BPa7ZcDgWVuz3KmZPCpqmMT02
      QCGfwxVp/GCbQJlMmqMvfR1/+hwhZ5HYzDSRppWcGB9CKziwEJDVOAlRovmCsAtAUgyz1jNO
      3hDxyHOFxwLujcZwShY94go2PvpLIAikUykURcHpdF6zO/NGwul0ks1mF1wpRFHE5XLhdDpv
      w8huDorFAplMhkgkCkBv1zGmeo6RL+rM9Bz+YCtAIZ9HSQ+yMpBBBPq63qbjnk9gnH+DOuM8
      b6eW81DVFHFVYTTvIiBr4PDgqN/IyenzhIrjbAjMzDmnKJQCZBNGBS1P/h6yopBKpYDS7HO7
      I7CGYVyWRuFwON439IiDb7+MJSrkh44yFCvw9Od+i2BFiMmxYYYH+4gKaTJF8YOtAO/seIPR
      QhUtrgQRp46j71VmOrbR8vE/4uzel/Hqp0moMj1WM2NFic6qCM7W+0nv+hFrHb00BOabQHld
      wEJE2vo7hCuryWQyc0yMK9n6twKXKqDT6URRFCzLel+YPsODfXRv/w75XB6hdh2O5Bjr5BmK
      uRSGP0BNy0pMQUTOjHDv/Z/84LJBVbXIzu//A2vyO7EQ8MgmhmnRk3aRbHyMZSs3EojWkkgk
      CIfDzExNkBk9i9W/g4g+il8xFgyGHZ1xI0U7uPtzXywHvJYyZFlGEITbkisw2yWr6/oN8Txp
      msbRQwcQRJGTr36Tutpq1j/1v1FVXUN/Tzc7Xn+Rux94FLVYJHfqhQ/eCpBMJAhWVJBOp4nH
      pjmp+llfkQZK5ssyX4E3BrrwO0UmDv8Yp5Yg4W8gnUywSTyBIAELOIYMCwazLgR3BS0P/QqS
      JF2T+/J2wPb1C4Jwy/3+dqDP3nfYOQ8OhwNZlucdWywWcbvdVz2voijcsWUrP/6XL4Mgse7J
      36SquobR4UGOvfBlnnzmD9E0lX0//hKyJH6wVoDpqUl6v/9HRB/9QxRJpPfl/0WxkOeuiqmy
      P9+yLGaKMj20krccbJK78EgGh9hIgzlAvRybd17TKm2Oj8T9FGq28Nhnv4AgCJimiaZpmKZ5
      2SSV2wVJkspcI6fTecsUwDYBVVUtr46iKM4xExVFwe/3z/vNtYwxl80yPDRIW8eKMh2kkM/j
      crtJxGMMdJ8mWtf0wVoB/IEAetMDFLIpKlvaCEk5gp74nICWIJQ4/ePpCfJKE4YJsgJt6inO
      ao1EhTgO0SoHyAwL3oo14rKytPuyGKu3lF+ULVy6ri9JBbBJdzdzAjRNE1VVEUURRVHI5/Po
      uo7H4yl7my7dl1xqil2Pcnq8XjpWds75zH2BARsKRwhtua90rWs+83sYTqeLzR/5FC1tK/EH
      AhhrnuF0KoAolPz3syGIEqrk5XixCYCwokIxyf6ZIPZcNZBxYFoCW/wjuOrX4/zIn7Ji7aZ5
      112KtAJVVfH7/fh8vpt+nXw+jyRJqKqKIAjlfGabkj179rcZq7cK7+sVYGRogKmBLhpXbCRS
      WUpSdzovznaBijATDjcvJSrRNIMVjlFWBvMIgsBKb4x67SAnHR1MFxSiLo2toWmgFOntSrjY
      k2pgmb+RmuUruOeu+3AtYKNalrVkI6u3ihZtWVaZn2Tb8el0mmAwWE7it/dLbrf7lk4Y79sV
      wLIshnc/S1P3P9Hzw79gfGRonv97+cp13Pfr/ycr7niEkFIkVhQpmgKWBRlNJK678TVtYP9M
      AMsC1RQQBNBM6E270FQVMzmCy+2ZJ/x2lFXTtCW5GZ6dX3wz4XA4EEWxzD2yr2n/bZtgfr+f
      QCBwyzlI7ysFmO1jFwSByIaneTu3Eoc6Q/8PvsiZ4wcvpBfm0DQNQRAo5HNYJ77LA6FhtlVn
      cUkWEwUHh2NBduU6iE+No4c62B6r5WgyBJT2Cy7JZH0ojVDRRE1Dy7xxpFIp4vE46XT6Vj6C
      ReNWCZsoinMo1/ZqaFkWyWQSTdPKm9TbYSq+LxTANE36zhzl2PP/zxw6cdOyVlq2fpKCqbDS
      n8bc/w8MdJ/i9Gvf4tS//Smx6UlC4QjDvs0MZl1YFhSMEl9/2rmMe73d3KO/xTbpIIlMkXWB
      BFB6aHdGM9wRirMx/xZdJ4/MyfBKJBLljd9StP8lSbpleQCzN7g2/dqGoii3PTL+nlcAXdfZ
      9e//i+Qbf0PVzDucO7Sj/F0qESe+8x+QBAsBaHSmSE0O4vRVsEw/w+BL/xdTo4Pc9+RnGBYa
      yBsi2yfCnIh7qY34qJQzHJ52E3JoPNUYxymVNmuCAAGHyWRe5qS1is1bHwBKdm0ymUTX9dvi
      W18sbOG/FVFpSZLKXiaXyzVng2v/fTu5UdIXv/jFP7s08PBegmEY6EoQq3YT077VLF99R9ke
      d7ncaEqQAaueSakeJTdOrqhT0fkwo93HqbVGOJ2L0rluE6olMzY2zrRvNa5IIz6vh+6RGFNF
      J03e/IUEl7nXHir6kas7aV17N0A5sLNUZ34bdo4A3HwPlX1+O+JsE/FEUcTtdiOKIrlcDlmW
      b0vBrveu5ANdB3eQi08gWyoM7iJVcGCuLrkhLctCEEVW3PEQy9drDPX3MHM8j2PiEP6KKOek
      GmRBYVnbCgBW3/Uw6oZ7uftCNlRfTzf1q+7m/BtfxydPsm/Kx12VGUQBDBPOaA3objf1q+9B
      kiQsyypHNN8LuJWcJDvZP5G4YEJeiAnYq6RpmhQKhXLC/q3Ee9IEsj0sDSs2YSDh6H2RBmkS
      JdRI+ALttVgscmjnqxeSUAzGDv0Eb/sDBB/7UyLRKGse/zyp4Gpi+7/D/p/8M4ZhkIpPU8jn
      mJ6aRHv9T0gf+FeyYpDRnIIliKQuJMdIIuS8y7j31/6K1pVrAcoV12aH62/XrLYYJBKJW2p6
      SJKE3+8vR53t52In7tvFv2413lMrgGVZTIyPMT01yfSJV7nz419g88Of4GCiHyvbQ3VTR/lY
      h8PB6NlDNHespbKmjm2f/U9zzlVb30CsupHiRA5nIIooivTt/B6SCBs+8fucdbYRzfSQyq9i
      r1rHE5VD7Jys4J7KBKYlUN3ctOAY3W53ebMny/I8NuhSgKZpuFyuW+pyFEURXdfLQbDZOQeB
      QGAOMe5W4j2lAKODPWRe+TOclo7P1YIFTE9Nserx30CW5Dm+eFEUaV93J8d2vcwjn/zVBW1d
      OdpK6+ZHcLvdpZWiai0VHpFMOkXS10Gt2s1TweMYpgBYeJwyb0zW0LxyA9vu/ZkFz6nrOqqq
      lr1Rt5v+vBBsk8M2RW7VKmULuNPpLP8tCEK5ePDt2De9Z8hwhUKe7me/SIPRhwmcMZaz8hN/
      yPhwH6vW31kuN9Lf10Nzy/Ly0jq79IddMlwURV584UeEB36MXNlOaPVHaF1zJ5ZlMTo8SOzN
      L9HM0JyEeNUARSwR33blOoi2buTux35+3kvL5XLviX2AzVGy6wfdCliWRTabLecgLAW8Z1aA
      wy9+nRVGP6cyYSxDxVVdQTabRctdDDTlshl6Xvo7Kp75E0LhCJZlcWz3a6zYuI1MOsXbLz6L
      7A5QVddEOFqJMSizuniQE7uGyMbGicXjnDh2lIiUJlApopoiQYfBQMbBZF6hwaey3K+y0dnD
      eL5+wXG63W6cTieFQmFJRoBtDs7tSH4RBOGWMk8XgyWvALquc/zlr9MY20HCkNCjqymmY1Rv
      /DmmXvufiKt+lnQ6RSAQ5MzOH9LpHCU+PkAoHCmVAhk9zyt9PYQCPiikqE4fxB0T8D/2J8Q6
      n+Lkye8zpUH7+W8ynfARjbThr93CeT2OWiyQGO6ieuNT+LQ0hVAdgye+SrxyK+sf/sUFX6T9
      2eyAnP2ZJEm3PfBjmma5YcbtMDuWysxvY8krQDwep7frCP2E8Tsh2r4V0TIZ3fcccipGzYmv
      cPbMT1nz2b9g2V1P0vfvb5Pv7cKSHFTXNeIJ1zK6/xXyoWW48xOYEtS5C2T0PGu3PsphR4gH
      165j6Pt/wHDWItjUxmMf+7l5L0oQBAb6eimE/zPebBZ/oOKyY7Z93EA53dA2wwzDIJfL3VZF
      yOVy5UpxH3QseQWIRCLc/dn/zLlz5wh6ZPLn3kSq30x8egK/KVDlUvHqg+x56Xusve8pRIcH
      pfclurreJN6+gfb7P8fRk2dxz/TSEU5jAQVTIpXJ40+nyWYy+Hx+zOWPsj7/HJnJ7cSm76O6
      th5BEEglk/Qf24FZSKGaIm13Pkq2p/uKYxYE4bIce1mW8fl8JfPtNkZA7ZXgg1waMZV8D5RG
      FEWRhsYm6uobKBYKdOXjWA4XRVWjM2RyPuWgLaBSE3uH/tcGyYphNgaGWW7mGXEHKebSPP6J
      zzB+/hj7ugdYpx/AUi1ee/Ul6kMuVrnGiE2tRzB1lgVUpvIxdj/7JYIVFRgVy6kY20GbaxpJ
      gLwhcnz4OBs/9YfvynSw7fDZldpuNezqEB9UBVBVleMvfe294wWajSNv/4TM8R8j6HnOFyJU
      u1RkdDYGSyVKRECzBIY6vkD82Ats/uwXCUei7HnrZeq7v0pvPojn7t9AOv4t2pRxzocewdIK
      dGTfAS4mx2imgDIr+wsgprmQH/mvNCxrf1f3YLMhb1eMwOVylSkb76c6QIvB9NQkx1//Lk2p
      3Ut/BVgIG+57iljnXcxMT+KOT6GdfZkqc5QxI4q08imKpozDobBu031kV22gIhQGYM3mrQxX
      BKlWPNQ3LWPnsUoazQmEYgq5fjNjx/dT5dI4nXCxNlwoF8hNqBKWBSGnwYlUBWuNdy+0dgnz
      dDp9W5TANM33TQ2ga0WhUEAcP0xVWFvaK4BlWUxNTjI5dB6fx0nLqjvmfK/rOoee/Uui6ROk
      fCtoevS3y5lfV0I8HiOZSJBMJlATo1TWNlLT1M6xA7tg9BCjepim+NuMFVwkhTCt1V6Kooeg
      MYnVdD8bHvjYDfOeZDKZeRWhbzZs6nYwGFxyXplbgXfefImKM9/EKxtLWwHeee15qvu+S0RR
      KVgyQ9GP4Aw3oogWK+9+vFTktVAgkYhRWVWzqICOZVmMDA9TU1uDJMkkEzFik2M0LGtHlpVy
      PX1d1xEFAeGCmWCTtm60zZzNZm95vMBWXr/fP68EyfsdqlrkJ//05zzo7WIk51zaJlBVYyvO
      gRL5zItO28zLpMYlvIrFWUNl5b0fx+lyUV1TN++3uq6TSacJVlSUo8Q9Z07S29PN0PEdbH3y
      F6lvaef8s/+FBnmGk+80YHkiuFY9zep1G1HVImN9ZwhGa6mqbShTBwr5PN4bmEjudDpvqQLY
      1IwPovBrmsbhN55jg1Ly4vW4Ni1tBdANyOgiAbk0K8sihJ2lnNJg93cZrGmjqW31PHNkaHCQ
      sWOv4R/bQeze32P5qpLb9PSLX6bTG2NF1GSo/yiaYeA1U3hkkzYGGcqpNDYvZ2J0kMmX/4qI
      Oclg06cZG6yB08+RlKvRU2MEgmEkb4j2j34en8+/0NCXHGy2ql2n1DCMD5z5Y1kWI/3dLHMY
      jOWdrH7oiaVNhy6MHKfOlZ8n4AVD4IS2nJH9z3Pu0PbyrGb7trsPvsbQ2ASiqaJdKAOuuDzo
      oXYQBAqiD91djaoZ1LlLs69lgbr8MdweD2Nv/iPN0jiTShPDsQLxXf9EizBMJHOagmbRYZxk
      eXInXa9/612T3W5V8oxhGBSLRXw+H+Fw+APn+QGYGDxPVB/BtAQmI9toXbFq6a4ApmmSHTsD
      ULbLAaY1Lyeylax2D1Kp5dl3SiLZf5TaTU9x+sheVm3aSjDbwybHGbYnW3hi1SaGB/vpf/Or
      eKvuxD22m96swPlje1je2kbRFBjTAmBZNK+7l/GxEaKF8xgy5KIbSZ08QFgpuUIb3HnOWG0M
      F7PExCipoW4y6TT+dxlRdTgc5QpyNwuyLJc59y6Xa0nxcW4FCoU8E/ueZYN/mjMpDx2Pf7xE
      jLzdA7sc8rkcFYWBOZ9lNZHzFQ9xl2+IKmeegiHgTp1nRWYnXS/+PUr8HCOv/i1ZOYIANPhB
      URyEwhECQo6O0e/iV0w2VCRY6xzAW7WM6aKDXN0DNH76fxIOR4j3HcUjlWgKsgitQY21kRK7
      UzUFNEcFydWfx+sQqHbkOLf/lXdFaxAEgUKhcNOpETY944Mm+DYM3UDJjyEIINWup6a2tG9c
      sgrQc3IftY4McKGGjQV9kY9SGa1EFkozpVu2WB+IIQiw1jXCJvk0VWKMjC5jAV4jQSaTxucP
      EH3495gOrMM2WFwyNLd30ptyULlsDeFItJSZlJ5GFkESYGZ8iL58kIxWekyjOYWpkQF2vfAt
      TvVPl8oknn2Ok8cOX7cpdKsCUbquY1kWHo/nA6cElmVx7vQxvFa6VAa+orbszVuyClC9bDXD
      NU+iWaUhFg2RSOf9FHp2YFGy2c1ZMudVTEQBgrJKIZ9DNQWiUpLR8ycAqG9qYdXTv8cwDZxJ
      OEnJVcQmRonpbmTXRa+ObFzk8gf1CVpdcSyrJDA1bo2P1Y7xWGOaiFOjwmEQcuic2f0Cw0OD
      150HYBjGTRfKUj2k/G3lH90uqKoKh75CVCnVZzXyFyn0S1cBqmtY8+ivMOhYxYzhZzTyAE3N
      zUS3/So7Miv48Wj1gg3sFNHiXvkgLsnCKVlkRrrK33l9PoyOj6E33EPnz/0X+o/v4mfqJ0nv
      /xbFYqHk63cEmCnKaCZ0yMOkpBAu6eKKE3ZqtPiKbKvJIQgwU5AYHJnkK3/3N5z83h+TSV07
      v8fhcMwpFnszoChKuVDtUkvRvNlQFIVU05M8PxgpFUKePEoulwOuoSyKvcRnMhmKxeIcLvnN
      mr1EUUT31uJse5C2LY+jKA6KRRV3/0tsDk7hke2y2XN/ZzeuMC3IRDZQtWxNORZQ1bCM+pV3
      ks/lkI9/gwpFQ80lMZvux+cPIPqr2H9uir60i1Z3jEZ5BuUKsS+XZFHjVqlzqwzGVKayJg0t
      7dfkY7eT5x0Ox5zygTcSLpernAegKMqSiwGoqso7O9/m7R3bkSSJE3tfp7aprVxO5d1AEASq
      G5Zx+HQvQX2CWkeaMT1MtKFtcQpgN1K2w/a2S82eTWb7k9/tYAcHBkr9Wy9EdYPhSnwVkfJ5
      nU4HQz1nGYyp5DyNpCKbyaQS+MT8vLo9ggB6fIjDoyYtbSs5feokoXC4NF4L+o5sp8aRRRYs
      JoUqqpo6ECUJ8/QP2eAaQLcElEvWSMsqcYNcUskzpIgQcpo4RYvhrML42AjZ/gPgiRKK1iz6
      vm16tCiK5bKNNwqWZZXzcG3//1JSgCOHDvD9730bdfw0anKC0f6zpEbOkjq7nZTpoqqu+V0/
      D0VRaO3oZDIn0p+E02e7aWhff3UFUFWVVCpVbqtpw7IsDMNAVVUKhQL5fL7MabnWTCO72sPk
      xDj9506Qnh6hpnE5PT3nCYfDc46VZJlA81qSmowoSqAXGNSi5BOTVLrne1I8okowdZpTfRM4
      I01EK6uQJIlkIo5y/gW8ko4swrGeKTwNa4hEIog1a3mzK8F4SsdJEZ9scibhpGiKKCIcytSS
      lwJEpXR59XHLFklVYGUgRzaTpWskTUv7Spyuq5f6tp+lZVnl53wjFcCuweNwOPB6vUsiABaL
      xdj59nYmxsfY+dbrqMkJHoqMkNUkNvuGaXDnsbQC+cQEodYtN4S453K7qW9fx/JND9Ox8V5E
      UbpyHEDTNBKJRLmR8+XK/dlLtr0y2A/btjX9fn+5K7mtbIZhkM1mEUWB7sNvM3HoBSZdrax1
      DGCMO5lqX8eLz36DZ37tCwyf3kdV22bqGpsB6O86TPvQt1HEkkIuB8TQ5e8jrYmMDZxDD3Ug
      r11PT9cx8gWNtHcVoeJhJMHCV9lIIV/axFbXNfL4Z36DmZlp9r3xArumY7hlC9lVA6ZBpBrG
      xDDOeIZWz0Wbf224SEqT6J5QWCWf5Pi+Hdz72M9d9cVYlkUul8PhcJQZojcSdjmSQqGA1+u9
      7UEw0zR5e/ubnDiwi6ATWhxJVtbnqHWreJUYfaGHkfw1DB16CaV6PdqBvUSCXtbdee8NmRjs
      nmiGYVxeAWyvwWx71GYRLnTC2cdAaeWw/z5+5CDa3i+jRlZzz2f+E4Ig8NPn/pVY71Hqoz7W
      i6ewJCdbXLsRBVANgUMvfIXljknObv8eq3K7SPT+gBMrfoHG1Vvo3LSNI7278aW78QgFwo75
      bMoT6QirvDNIIuydDlC7/n6aWldgmibn3vkhgfwg76Rb0O76NZynvkuT/zQ//d44H/nUr7N8
      +XKCFSF8/gApuY/68Cg7JoJUb3oUl8uF2+UikElxZmaIqNFFUCptqJySRVTUqXbr7JvwcOey
      7KJmc9v+v5mkO+C2JcPPRiqVZN+bP+Hg7j00e3K0+TU6K/K4pZKcjeoR2rd+DFEUmRwZQOl9
      keoZgwPZZgxBoaW1nYqKitLqfxWM9pwiPtTFins/saDJJ4riwiaQXdvmcg2VrwS77MjsEH8y
      HqM+votGhunpOU/PjEH6xAs8Vj1BozSJIkLYqZfNCUmEekZpdOeo0gZLvXdFDf/MESa7djNZ
      dJB21OJcvo24bxWVyUPl66d1hT5lDcayj3Iu7aWYyxCUChSUMIbs5cjuN2lI7WdlIEsxsIxA
      zTLE8UM0ujJ4JJPjAwmEvjeJrNiGLMscOH6OVmGAZl+R/pTE/U98imP7d7Fm011kslmGYnmi
      zJRzBwShVD79VDrImju2UVvfdFUFsFMonU5nuaHGjSxVIooifr+/rGS3C6dPneTFH/+QgaFh
      Pl4zSIuvyMlcNVakgypjBNUUmJSbiLTfVYrcHvgBD9WmCDgMAqSRRvaQO/0Ko+OT+BtWX1WZ
      z73xDcyRgzia78br9TE+Nsrg0CCVlVXlEjjz1ELTNGKx2HW5ymabSPZqYVlWOcVKFKApe4Ri
      z1G8PgeyeHnlunRDCyXFqLGmMc59lagpovUr9Aee4FgqQt5y4o42EezcinbubSrP/wsFqRXv
      fb/Lsuoahvq6aVzeQVvHCo7t9TN5/nX8jQFq6hoZPxUGclQ68gyoGZappzh/5iRVtY1EsycR
      fDCdlwlUlSgEjW0rcbvctK/ZzDnJyY6jCZ6oHi2POeLU8YlFxqfii352thl0I2MCdpDNzv66
      ndB1nVd++jypqRG8ismkLAAid/lHGCjWcDDwFC5vgHB9B5ZlkYjHWR9MlH9f787DoggAACAA
      SURBVLXjFxrmzOuc/9EIrR//P/B6fWUP34G976BYBRpaV1NZXUvNlk/j9ngxTYPtL/0AoecV
      ah/5HU5uf458cgr32O75K4AgCGiadlVX3Gxhnz3b20Jv7xssyyKZmCEwtQ/nBc+JLJayq64X
      ogCyaHFaWENt51ZWfeSXCLVtQXVVMjEV4/DxU6iCk05lgNGCG29FlM61mzDN0riOvfYv1ClJ
      pr0rsWa6aSscRhTAIVoErBmG8x6Eus0c2L2dDeIpHKLFVEGh6fHfx+fzE5+ZIRKJcn77v6IN
      HyTmbiNp+miUp4CSKbQqmONg1wCnBuOEI2GCweBV7yubzZZn/+tVAlmWURQFl8uF1+u97bM+
      QD6f58WfPI/L42MqlqLBESPq0mmt0Kl0GTQJIySsAMvu/hm8F9i1kiwzNtRDpRCb5+YWBAgY
      0/Sf2EPKUUO4qrbEdvV6Kbz+F6R73sHd/iCBijCx0V6yb/wlNamDaLrBUPdJmtN7qVO7Ccrq
      wgpg+4yvFDW0tQ4W3hvM/iyVjJcV4IbBAs0SmZkcJz56nulTb6D0vsJAwsQr6TwW7sMrm1Tm
      z1EcOMBAXy/x4y8y3XOYOsZodGc5kfCyRdt5Ie9XQBTAp1g4BANr+SPkz77OclccQQC/YjJh
      hqhq6SQSrSytlDu+jF9W8bffT6ChE0YP4pZLK6csQqu/wOm+ceKDpwg2dF6RNGcYBul0uvzM
      rmcPIMty2dS5Ef7zGwXDMGhr72Cwvxdf7CibozmWBTQ8cmlCFARIZQsozfeUbXWHw4EQbifT
      u4eAMt+7JwhQIWZQB/cTUxoJVzeQjMdIdG2n2PxRwnVtHHjjOXynvkGlnMEhWoQdOo2u9Bw5
      XHBdFAQBn893xWXzSkJvz/4Xv7im57UoCAI0i2NsEo7SmXyNtZym1Ztho3WE0ekkBeNCXXoR
      wmKKZaldtBjddGjHaHKlkAUTvz5FXJ3vsg0oBuPvfJvlyvjFfYlgkRs4WD7G6XRSaP4Izrt+
      nbsfeoL21RvICHNzA9yyxWdak5ipcb77ra9x5MjlOUOLcTZcDba7c6nB5XKRy+XoPboDp5Hm
      ZM8YRePC5GnoHBtMI5sFNF2bQ22PjXRT6ShiWDCeX9jeDytFMgOl55qMTSEpDlrW349pmVSO
      vEjUceVko8tKuCAIhEKhBRmECwn5HJv/JsDeWF8NtR6NeneBrH7lGVQU4JHQANULxA4EATY6
      evBLKnld4OCUh1G9gqptvzzrGIGtH/tV2jfeD8D5Xc/RqFy0+XO6wPmkA8uCR+oz1Om97Hzu
      H+k5e3rB8dhti67X/LFdz0sR+VyOF775t/xC0wgjwyPc31HBCwdGAYvdXdOcGEwTVoqkY5PA
      Ra+ilRzGIVlIApxT6zhtLCetz41hGBYgu9F1jWUdqzFkH+Ov/A29P/iv1Lqunms9bxNsFzAt
      FosEAgHcbnc54GV/f6ngzzaHbiRm7zNm7zeupGiSAPdWp8vtjK4VdtNs04ITyp2guDkzPk7d
      lk/T0rpiwd+cPbidutGfIMx6mvGizB5jI9OJXnxWmica03y7L4DnMhXlrqcbug3b5r+a2WT3
      VbAVzb5msVhE0zR8Pt9NWUHGx8fJzIwyIMhIpsXp0SwpXScWyyD4vASzGfKGiNt3MX1VEASC
      7fcws38XEafGHd5BeiJPkm99honeAzimjiJrSXJVdxJqvZtj3/ljdG89YXWCaldx0SXf5hxm
      R31t2z8Wi80RtssJ3lWFX7g+K8i+3uyZfzHKttAG+9JYxYKlzU3YGaum1V+k0ZFAtjT6JzWc
      gUqq65vnjc2Gwx9Gt0Tg4nVHcwrN7R24g5tJ7f8Wh6bcKOFm6uoWLqprC6VdrGqxgmgHdRaz
      OhYKBTKZTJkKoWkauq6XPX521eYbrQTxsV4+1pSkKybzC9uqSOR0hmI5TgwkSVoSO7qzuFa0
      0FbMzbm2Lxhm0ggQYQaPbLJs+iUSzavZ/PEvkM/lyOdzxEb7MHb8D9rkDGb6HFxjjG+OAtg9
      W20FuNQVel3Cf4Mw2za83t9fTQlkEe6umOS4uZLzMy4qVzTTmttHxerH8Pnn2vf9vd1M7H0W
      Z6gWbfQ4tZc8htWhPDtHT/HoE3/Av585illM88u/+VuXHZ8oini9XpLJZLl/7uVg1xS6Vj6P
      oigEAgESiUQ5Ed82vQzDIJFIEI1Gb6gC6LrO+MgA9bKJS4aB8RTd0wU2t1fSFFTIaCLaigf5
      2Od/E4fDwczMTFn+MukkISFVPlfBEHF6g4yOjuD3+QlHovS/8RValVLeyPWEDuc8wdkRSVvg
      HA7HnFniZmC2C3UhmKZ5Q8yshTbts68PpY3rFrroq+7AEHXWeEYp9nyDU+kRVj7yH3C5S9ye
      md3fpNPoYnpIYiDtxB2e+3w8skVH/iQ/+vaXeehnniGVSuFyze8kPxt2U2l75bucIDqdzusi
      s9lEOxv2qmM/ixtdLdqyLHZs344ytJMeQWZFSMUjh2htuHhMXJX5xGefKfcrmC1nkiRRtBxA
      acxhh8bp/rMgiFjnfoqj82lijhbqUwdwydcnG/PWTUVRiEajVFZWEo1GqaiouKmbW2DOC7/c
      C7gV1weYKshMF2QCd34OzFJ02kIgOPoWe199rrwX8nQ8xGHWM9b6y+TaP8mr49F5513mV+nI
      72Pnjh2sXNm5qIiw3XDvZkAUxTl7hdn3ba8ON1IBstks2ZMv0OZNoxsWOX2+mea8MCnYTfRm
      e8MqQhEyFavKpSoFwDuxm0C4ErVuK/U932Dt1HPvyr0+bxqxW9bARaGTZblMcrv05VzpgV3r
      i7yd7YQKhkBf2oW6/AlaNz2IgMVo31nqPCK9zvXodasxz77E0T1VbL73IzjCTbQ93EZjUwuW
      ZXFqeSsvvPBlHquZwgJOpoKs8KWoc6u8dOoA01MfJVpZecUx2JHbq0WD3w1PyLIsfD4fhUKh
      zNfy+Xw3NGBmWRaHDh6gt+soQjbJjCBT4bKIOPVZx0BcdzLV9BQtgSCxWGzO6mQrp6ZfVAhB
      gBajm/FDXyboqsctm0jvcsiXXUftaHA6nb5qwvbVlWDp+aYvhVO0yIt+7nz4Z/H5fBiGwYO/
      +mcc+uk/s+rhz+J0OCluvIdQJIqqqgx3n6D1QktWQRBYvWYt6emPM9X1Deo8GnHdxcuZFtZL
      Z6iqjOJYJAPzaq1W7b5e1wt7FbAV7WaYPb0953n1R//KPeEpqsMGkxlor7wo3LoJffkA3vt+
      l7vXbCSTySwYdBVFkcqNH2N0bz/1SgwoSVKtIwPm2RsiVgu6DuzKxfF4HE3TLmuPLuSztmME
      s225myX+s68tCMJ1+9AtC96K1RHZ+kt4vV6gNMv6fD7u+/Rvkxg4yenv/RGmcbHDYWP7mpIt
      almcP9+Nqha56/5HOep+kBPyJh6IjNMZKqLf8dt4wg1zOqRfCXb1hsuthjeql6690t9oj8+R
      I0d47ltfZp1vmg3hPHVulUuHO1NUyKz8HJ3rNgMlU2mh8QmCgL8iQlwIcbOMgwVXgGw2O2fW
      X8jXfyn/xx707P+XOwHeRCKWvWm0acTXg2OJAPX3/hJr79gyTyBEUUR0B6l94PNU1dZzfNeL
      OD1B0l2vUp0/wx6jlGCTCVbS8uj/zmd/5T+i6zpde19BGthPZqqfhz/66KLNFpuKUiwWy5v/
      2bgd9fxN01yU0h07epSv/u1f0O6aYVQqMCH62DGQpaCJrLmnpkwWnDKCbLv/oauez7Ishk7v
      p5W+eXygG4V5d2UHS2YHoC6dWa80a9gbudkBjZvFRLTH9W6EXzcFXCs+yuY77rzsfbWu3kzz
      yg0IgkC4oYPatjUQXUlQ0VjtGmGlMkhL7jCHfvz/YVkWiqKw7r6n2fzMn9K86i6OHthzTTPt
      7BZLSwGLfX+DA73cWRGnJSrjlgQGx/Ns6qxiZWuUpHZx8tT9TeV95pUcH9Njg1QO/hCPcvP2
      hvPuTBAE3G53KVngEvvwcknwtlvOti9n/9YOZAk32BCyz32puXWtSBguWjY+vOiZtXFZO26X
      m8mp6TnLsihAh3aMfd/5b+x7ZwdQmq2Xt7by4KNPXfO4nE5nmf5h006Wcud5gFQiznBaJGn4
      cUrQ1hFlcihG90QWcU6Aa240fCFzLzYzhXrwG9Q48ze1fOScpzl79p9HaLuASxXC5XLNabfj
      9XrLHCJbERSHk341TF/+xjVls/NoT/VOs7cviWlZ9I0keO3EJDP5xVOtk6GNVNXUXtO1JVmm
      sXXFnOi2ZVkE5SKd+lGUwhRHDuwtm5Fvvv7qNVd6EASBYDBIIBDA5/NhJ7YvFbLbQrLh8gaZ
      UZ0k4jHiBQvJNEhrJhGrQGCWsR2e3MWOH30DXdcxDKOc7ysIQpnWMT42TqagUbzxBTLmYEEu
      kCRJVFRUYBjGnGT3hWZ+u9dVMBickw0WCATKSuT1elGb/5qBU/tId30NwdIZMatZ4Rh7V4Mf
      H5omJrqJqBkOjsg0ex3cF3bywrFxPrWlblHCYrkqFi1UlmUxMNBPc3MLhuKnaAi4ZwVgLMui
      oAvkixrb7rwbgJmpCaxzLzG6Zg2Nzcuu6f7s2d4W/KWQzG5joWdWU1PDiuX1PLN8BuECn6qh
      aRmYBoJwkZgWdqgkx95keupxqmtq8HudbH/tJSZnUqzdso3c6DmOdZ0jN24SXe6g0XvzGo/P
      WQHshyxJUlm4L7fsCoJQ/j4YDJZda7PNJnsFcLvdBAIBOjbdz0DVU5z3bMW/7bcYUq+Qyb4I
      uDwKgyNxxjMaw4k8aBr/vnuEuhr/omMKkiRfU/yhubkFXdconn0d1wIBGLds0X/uZNmzcf7s
      Kdb5Jtnz6g+vO85hxweWgvlzOcsAoLaujoIplzesY3knp4oN6NZcZUmrIsfU5YTCYQRBYHK4
      m9FJlfXWAY595QtEBp+nUeuhOnPypgo/LKIwlqIoZUH3eDwYhlH2CtjKshgClb05rmxaQaCh
      E7fHQ8bTjDl2HLd4feX63G4n7TU+ZMvA5fHQGPWyYVkFh3rjrKpfnLmlxgY5dfwINSvvQb7K
      DGtv2BKJONkTzxMSs/O8E6YF6WyeyaFuYnkwD32NOneRXHKaQmQ10ej8iPFSx2zWqM1TWuh9
      e71e1IF9VIvTTOlepPv/kNqWFQTGd+F3lPZpU3mJU6EnefRTv4aslKqEdJ08yY6X/g0jNQpW
      gWq/h+1npvi5zRV4Ly3MdINxVQWwTRpb2O0gjc1AtMudLAb2CuN0OlFVFbe/gr6pPFXF89fn
      5jIN3jk7Q8qSubPZx8Fz05wZz7KyKUTEs7gx+WQdvzFDLLiOcPTq/cVM08TtdiM1bGb63B78
      4twZShCgzqPiUSeQxw7QdGEG00yBYwMJmjrW3/ayJNcKXdfRNI1UKoUkSeW8g4VctJG2O+hN
      uwjd+VnqWzpAVDh3bC8N7lLlDNUU8W/+LGqxgGFa+Hx+JicnaF+9jp5JjVDjCroO7cYRiNLo
      VQl5bq7Zt+jSiFCiS+fzeUKhkumSzWavKzAjCAK5XK60rPuriJ97h+ACaW9XhSjSUuWjOeJG
      FAQaK7201fgWLfw2FMHiZCpIZnoYS3Lh81+eE5PNZtFUFVlxcL5/mBpjcMHjnJKFR77onQo4
      DOLxBHLdeiLRK1MiliLsnAF743q5DXlv11H6p4rI/moOvfY9dry9k8qmDhr18wBkdJlEaCOD
      Z47Quf7O0oTo8uBxu1i+9g5WrrsTpX49zngXNa4CQffNrWC3KMm1k2QymQwVFRXlWTwUCl0X
      K9Gm85qmic/nZ6bqQTKadNOifYvBmtiPaer5GvkX/4DD3/1zspmFi1Ml4nF27NiOoigooYYF
      j7kcvLLB6a4zN2K4txSzk2fsOMfCE0SW7t4UTz7xCF/50n8lc/ZtKhxZgu1bKRoCpgUTeZlg
      RYQHnvoMbrebYrHI2OgwqXQGs5jFNE0616yjsmUNDRU3v3njVRVA13VyuVw5Q8xe/uwN7vXC
      6XTiv1ADtH3r0wws/1WS2u3pWi4IF8urRxxFWotHOfvClxjsOTsvxpDJpDl79iyGrmNNn7um
      69R5NDLDJ4jFZm7k8G8JZgv85d+7C4eU4OXXduGWY2yoE0klkuzftR3VFDkVfIyKB36XtvZ2
      fBcaDfb2dCPv+h843vlvWNv/nIFX/57h3i4KxQL7JlwMpOU5ZfBvNK5oAtmlDmdvhG8U7Aix
      XRBWR0Lvfwe/cpMdv4saG4T0cYq9O+gfizMx1EM8lSFcWUtlZRWdnasYOPwaDVOvlcszLgZu
      2aLCnOaN7iLhaOUNpx/fDJimSbFYRJblsgOkUCiU4zxzIRKpqWdZbYDDB4+jCw76x6ao8Cm4
      lt1HoGUjazbcUVYgwzB4++238cRPU+PWCTkNQtYMA2eOc5d/hGqPTqIoIsAcd/O14GoMhstK
      dD6fL9etv1mwo86maXL66D7uU25tw+grQRAgKGsEpl4GoLenCnXFeizTZM+3/oQt/hHk63gp
      lS6dB9RXGX5+D8cbHuepT/z8klUCy7KYmpoim81SUVFRplHn83lyudyCOcTpqSG6xzJ0rN/K
      4L4fUXQ1khHCyFXtdKxcRSI2Te+ufycRj1EMdZLvepmMW6Qr7qCeGb5zssiaOgUj5GZHV4yJ
      rMC6jjrC12kNXZq/finmKYAd0b1VXJT9bz7PZLKIKXk4m3RR6dJnVQG7ObiW7DL7/bopoGsa
      Pr+fcPNq5MTwdV1bFEo5y6KQIj91lN7zG1je1rEklSCTyZSpLHbqpE3XtifI2R4ty7KobVmJ
      4BxFVuOs7nCQJYfL2cfIOwO8fmYPrcWjtDnSGBbkJo9gVFkYFnSnnHznZJGn7qhhsHeAuObl
      wbXVjI/M8MqIRr1PIeK6fuvgcu98ngLc6mBLZXMnw7vf4P7HP8nXvnKaDcWB61KAaxPqK6dg
      LgRTK7DnrZdYtWkrkjuIFZ/fmONaEHSYdKjdnPvxf6f2C/94U1fa64XNwXG73WWTxy7eJQgC
      xWJxTiLNvr17SB3/MVpyglZflrBHxymVePyNQTgznaDuQsNB6UKxMS54OVVTg3qZM73DTKWK
      rBREzvRNM5gT2FjnYrrAHAW4nne40G8WJMPdSqxctRZXRQ0ej5fPfu4X2TMd5Ad9wWvyCF1P
      vvC13me1W4PMGB6vF2ekmZzx7jfsAYcB5sWSM0sJNi8M5jI2ZyeuFIvFskLoukbXgTdxZYeR
      rSK1Hm1OqqIkANblSYt5Q6C20su9K8JEvG5c+RRnsxIPrQghXOgHN5SWyuNZCJd+bo/7Su/6
      tsfWBUHgZ3720yAIrFixkru2PUiNR7+mMiqzhf/STc9CN3897FFFtFiR38f0SB9nj+7BKb67
      zbpuwozqRPXWL0kFsOHz+YhEIiiKQi6Xm/PsbN4YwBuvv06T2oWqG6yomF+NTRK54pKZ00RG
      805+dKpIoLaJnnyQfB7+eV8ay9Rp8mvEVZmicWUhv/T/pgVd2QgnstWM5p3zJtYl0SdHluVy
      J5jWZc28etCLiEWLX6XGc20BsitVU7j0uGtFUCowvvfv2GAWWUR5+stCN+F04BG89WtRd32H
      fD5//Se7SbDZqLPhcDhQFGVWvSaBwfOnefWVF+mwziMUYvykK8+vbPHiMkzePpegptLP+nov
      kwUHE2IDk4VBKp3aPF1o8GnEFZmtDX4sSyOniyyLVlIwBOq8eikV0mtwZMrJ3TXFq5qflmWh
      mgInpM00ffTTKIqDdDLOnt3fpZ5REr4VaNZVOsTcDkiSRKPfYjSncCLu5hPNCSrdV69UfSsS
      8AUBapXU1Q+8gLiqMOnfgGoKGMUs/kAQS83iqF3NHXc/zclXv4lY0UQ4FFq04t5OaJpW7mZp
      WRaWqfH2iaOEx17HUVfP4f4kD61t5Nj5fvwSbFlTw56jYwSqm3Bu+23uiVQx1n+Ws8ffpN06
      R7VLRRBKKalJVcKnlFaXUlzGwqvMtfmr3AaaAUemHBgWNPl1Kt3mnFL69nvt1moZz0qseOrT
      +AMlRXa53Tge+TyYOu3BEAjC0lOANes3YVr/keTb/y+FmIPXZhp4snKo3IBiIdjJNlb5/xf/
      vfiJVT7G/sayYEZVaPTONUEsq3TcQj0KFgPLgpjuZqr541S1bqBYLNJ14C1MR4R7P/4ZFEUh
      NjONPrgfsgbPfvMfaWlp5sEnP3VbUh4XC3ujPj4+xsmdL+AQDO4uvs4exWRTNMcxU2Yg58NQ
      wXAI+BwiYUkACdy+AKIoUr+8k/rlnex//YeMjL2NWzLRTJBEgWZ/yXS60kRQ7zOo9xnoZolY
      t3vMyb11pd/NntSKzY+yoqUTv38uKfLSVW3JKQDAug2bGAn/MbmXv8ZoRmB67e+gaSoIAtYl
      YUFBuJLnSrjiUmlZFunYBJnpQ1Ro41Q781jArukogeV3EUiepFVcmOtzJYxrfnr991A7sgur
      //vEzCiPfO6vyGYyZeXb+coPudOVZJXfpGDs5Y2uESY330vtZUonLgX0dZ8h1rUd0VdJ1fRO
      GpwZJKmk8KIgUu3L81DzJF8fVRAMmMrqjOsWG5nh0I5nad32SdRsnJd+8F1azDO01Sm80RVn
      MC3z9MaLzRBnChImElGnetn3J4slk2goM1+EC7qAJcoEggvXYZ1znut+GjcZ9U3LCDzzh4yP
      jxEIBNF1fU4Vs0sT9C+tqLaQR+DSv0s9eVdhGPcTn57g1OQgkqmx9oE7qAiFGR/axOHd/8om
      V9+ix62ZAmeSbu6WXkc1LA6ma5DrNuD3B/B6fZimSSadRpg6xYjoxsyZyILFRLLI6VMnqald
      XCLP7UAymcScPkfVxOv4nBpYFrtOTZMrGBwZzvHw6kr2nouxvr0Oj2Dy5skYd7RVcS7ppf6h
      x/H5fOza8SYhl875M0lEVz2PrIkyMJnmrfRKsmEvsmghtt6DP1jBqX3fZrXSv6ASWBacijnw
      yfMdGg7JQhvYw3RVA9HqK2f7Cfl83roRLShvBkzTZGJioizYs/OMZ6cYzt75X63C3BwPwYV8
      YluZ7I4qtq1bLBY5feIotSf+75LPehE4PONBj6xCcgVYnX0LSYDj0U+x6b4nMC2LXCZNsKIC
      j7eU5nim6zQnDu3FKKRpbqjl3qeeWbIKAJBIJDj42rOsS/wESbjYD8KenBJFkdGihxa/xuFs
      PQlPO9Ggm847H0KRZXa/+n3SR55D1rK0dTbhTKf53ngb/+H3/4jqgKv8/gqFAlND56g7+1WK
      hkCFU0cRS6ZpWpPoMVvomS7yidrhcmP0OVFf4FyxlurH/4DghZXAZrLOxpJWAMuymJ6entd/
      eHb7JVjY3Xm5BH5gzkpiK8Hsc9jRcKfTSS6Xo+vFL7NBPoMiXF0JpgoSua1fRNU0qg7/FUGH
      yYFUDeeEFTTW1ZCPDVPd0sn9H3lyTmJ/LpstFci9QBJbykjGYxz+7p+yyTM85x1YlsXBSReC
      ADldJK/D2ohK2GWxI1ZLk9/kxGCStgqVgd4hIg21GP5ltG/7OAf7Mzx27+ayAuTzec5s/x5O
      PY3RdB9q14uEiJPytrL60V8hl0mRfeuvafNf9KDNpT3A+bSbyFN/TsvyVgByuRyZTGbOvSxZ
      E8jGbO/IbKG/kvDP/t4+ZiHMLvliC+LsosBerxdZlln11G9xrusI0eEXqRUm5vjCTYsy1bdo
      igy6NtARiZLP5+kpRPFZAgM5D1XCKSpGjjOkLeeBNRvmjEGSpCu2T1pqCIbC5CIb0LLDKOJc
      03JTZZG9Ey62VOeRhJKtPibWo/qa6Ro9QUegyO7uFJFIE2GnSddQL+nuCe67554572x6ahI9
      Pcmap79A4/IO3jILhPv/jeGCyckj+wlnTtPhvbz7eKjgQ13/yzS1lPKwdV0vV8S2rFILYNM0
      3xsKsJCLcLa5cznMdo9ezSSavQrY+c6maZLJZJAkmdV33EePFsea+CEAhgkpTWY0cAdC07aS
      IMsyHXX1SJJEOBxGfeR3mek5zEb9FVLBtUQ7t/Eb67YsqeT260VUSi1Yl1MULJySSQ43gqFT
      IWq4vf7/v70vDY7rutL73tqv9wX7ShAgCa7iIpEirV1UJGtC25JjeRvZNeWq2KmJXeOkMpVl
      kkpVMpUqT2VqKpXJj2TG9tQkZY/H40W2Ndo3SjZFkSIp7qS4gAABEGig9+73+q350TgXrxvd
      WAiQbFD9VbG4NV53v3fPvWf5znfw5FNfwy9+9H0UI8BXv/I80qkkcgf/B57ZnMYR9RKKha3w
      K00ASq7pmr612LrtvzFO2r7HnsaRvz+N7TueQnPXAK6fkjF1eRitXGmSpNsFBoBc16PY9/B+
      cBwH0zSRyWRYZVvXdfh8PghCHdYB3CgFqbVrAIvpQ14KP8jtNjmOw8r+oiiWdpCRD2GKDs5w
      22A1rYcn0o416zaXXYcUNWRZRiwWw7tn34b33q9jx54n6qKpfSmwLAtXzp+CkZmEAxtKrLck
      DekLgE9fKysGJgwvDNsuzeSKbQD/yFegmxam3v6v8OEashNX8enPP4+zr/wAQxdOYu3G7YhL
      MfBcCgP6KaSz++H1+ljPMc/zZf3TiqLggef/hN3DpkefRXzwPlx66c/hN+KIiWoZ9YIb+xDJ
      5LOIxWJltA6g/OSvawOYT5Z9sdXeWlSIWkoXlX/meR6maeLK6SMIGHGcVFuQ7dqETz34JJuk
      6T5l/H5/Wbvgp5791ooL0N4uDF+9hMJbf4YunwoeJRfPAWDYAgoZDkctGeB4rA0ZyO/+I3Sv
      HcDo5XN4YOt9ME0TJ098CFXcgHudMxg/9ENs+8ZfQjrwLfzyFz+HLfrhdH8Kx7RNCI0fhAST
      MUs5jkNsRjHCjcpn1tLRg9Dvfw+TN8Zw5eoF2FffgVCYQK8njRCXBT/jnomiiEgkgkwmUyY3
      qetVxqTWEyzLYvIiC5GaqoEsn1r43Ndw64lW7v60O9DABss0MTn8McI7Sbz8NwAAIABJREFU
      P4/W7U+ip2+ANYcQ3BIwbhfnVqqa3Wp4fQGcOvQaEqM38MbFFC6PTKGn1Yezl8YxEZ8GL1jY
      2CLhktGB/vsPoKW1Da1dayBKEq6eOQIrP40t+7+CZMFGLHMS49cuw5K9MFQBBT2PoSO/hmzl
      8ebBw0DHZkDNwOYEDB17Hfr0EKRwB+AAyakJZM69hhtn3kX6+jlkda40T2zmnmfTSWRT02jZ
      uh+hjY/jaopHyEliPKmiY2Abe6aqqkLTNJimCV3XV0cMQFgKVYB2ZMuyMDU1BY4rTVDUNI0F
      t4ZhlJHQWma0++k9isUi48LzsoxNex6veiJxXEllORAIQFGUVbvYq0EURTR7HVzXDMQCAiKG
      jZMJE3vXhvHayUlEA34MtX0W+/Y/y+gGQOn+J8avgreKiEZjCD7ydZwJbgCO/xDh5HEcPxHE
      E1/9Fg5ns+jzG7inOwD+yovIZNZi+FITnPg5JNMb8N7hP8O2QBwjI+Pg7Rwe3tSE5HQObw/r
      6NqwFc3RJnCwES5cwTpBw+mRPeje9xw6tj0Knn8MLaKIQqEAn88H6kP3+/1IpVJM3aOunVKe
      55cs4e1epIIgIBgMIhwOQ5IkhMPhsiYO6nKiweCV16lEpSgU7SwkIlYvu/188wWWgrHrw2iT
      svC09GBvXxDgJQxEJLx4choP7uhBYPBJPPSZ55FJTuHYB4dQKJSkTziOg8KbkO3S30VRwj27
      H0Tzp/8EV81OfPpLzyM1NQqvpwMRxcFAyEKu+yl07n0OoY51CEsGtplH8XTTZTSlLyGo6Lin
      icd7Hydx6EoKB7YGMXbuKPr1kxgwz6JZ1iAJQFP+HIYvnZlp2fSB52dHQLlPARJ1AOqADj0f
      SGy3MsKvhcodmuNKA799Ph/T2AyHwxAEgRmF1+tFMBhk13fXBizLYsUTMpDKrJQsy6zBu15A
      nzWZTGJ4+NqSdUkJ40PnIXIWBKOAo1dT4MJBtAkmHNvBBxfiuF4MYHJiAoo/jA2btpR1EVqB
      TvgGPgVgdjNp6egB33M/hs+fgAEFX/vuf8G5XBjvjxZx8PWXkC1o2LJ1K6a5ZrR6dIQkC+GI
      DyNjSZyeKCKhqhAdCZIkQuTnTtEJcBq8oWYm32MYRlk8JoolIS53yruuXSA6tmhO8UI8/mpB
      bLX/rzSkaobjRjU5QKpM14tkoRtEWnMcG7FYE2zbxujodfT2rlnSdfo334excz+BpBTx6e3t
      7N+/+EAvhgtetD70BFraO6rGZ/c99BT7czI+jmsfvIj49DQ0MYp/+rVvQ1FK86f9fXvQ4jEg
      aj6cPX4EsUcegyn4YTocJM6B4vXgwO4eJKbSmHQ8uD6WhG5Y4ASlTK4FAIKSiXEtje6BdQBQ
      pmIIgAm55XI52LZd/2lQoPShfT4fdF1fsitUrQ5Q7RRZyCBqFd0cx6lrvz8WK+XVHceB3+df
      8s8rXi+y0XtQDHuRLbwNmbMwVZRQ5P2IPvGv0dbZw65PmwQtumKxCEEQSmoiHh+EQBOEkbPY
      //XvsGmZgiDg2S9+Fa/91Tm0da5DtGsDLl+5gp4te/Hq0VE82paEYfE4dCGBppCAHb0BhEQZ
      Pzqh4r71XbiSk1DkA7BCvdDlGHhJgZqd1XMSBAHpdJrNQHMcB5lMhk0Bsm27vqkQBNu2y8Y1
      LRXVdij3dehkqcwS0e+1DIAaeeqZwky4mX4D9z364JUfI9o1iNbu/pIQsqJA13UUCgUmj+9G
      NptFKBRiWlIcxyEej6OlpWXO50inUrh2bQj9A+uQzWagqho+vngBXREZjmOjrX8rRt77MZTW
      9Wga2IV3X/k5dj30NDyKB7LsYYGu4zjQNA2GYSBYMdeZdn+KBchoV4UBACUeRyaTuene32oG
      4P5FN4b+r/J1dA33dXw+HxP3utuRy+VgWRYcx2HN8JQpq7bBZLNZlnWhGGk+I5yensbbr70M
      jgPu2bUba/rWlqWT6UQRRRFjo6MQZ6bd02ejwYaWZSGTyZTx/t0xAGHVGQBVZvP5PLvxi0El
      +9MdUFcaAM3oreX+uEEP9pOw+C3LQjKZZO4NiZm5F6i7fqKqKkRRhCzLiEQii75HpmmWAtMq
      mT96RiNDV3Dq7Z/h/s98A0Bp8YuiyPSldF1HsVhkATldJ5VKsRNCkiTW57xqnh7l8iORCAuM
      aUeaD9UWtHvXqmYQle9bGVzTZ7gbFr9t25iaildNMDiOA13X2QBrCihpxCoV/0RRZFPnqS5C
      LlEmk0GhUKj5nMoyMqI4r9R+IZfBkYMvI7ZuNybHR/H2y7+E4vWVLXZRFKFpGlsb9L40oyIQ
      CJQZZd0HwZUgQ6BRThQcy7LMfDvifdAOVS3IXYhBWg08z7NhIHcLOI6DLMlVjVnXdaTTabaQ
      iBZiGEbZjl8JWZZRKBRgGAZUVYXP54NhGGzGhPtEzuVyME2TDVjJ5/Nl1XTDMGAYBgrxi3jp
      /Ws4+PIreGr3Sbxz5hL4cDu6N+/F2q6WMvcmFoshn8+XZehI18gt5FX3XKBakCQJsVgMhmEg
      EAggmUyWzZol7k0ul4Pf71+whrDY4NDr9d5Vix8offdQRZ8swe1q0u5aKBQWpWnq9XoxPT2N
      SCTCTgTLKuXuaZKQbdtss9I0DSPDw8i+/ecQPD44LVuhtG2Afv4fIRppJKV2nD4yDl5LY8DR
      8I7ViZ2bH4ak+JjbQwxP27bZKSWKYlnjk5v+DqzCE4Dg8/mQTCZLTSR+f9U+AZ7nmbCrpmll
      swwqX0dHsSRJrA/ANE1mWDebgVqtoPvh/ns2m2V6oJT9CQQCzPfmuNkRW2QglRkyTdOYH16J
      TCqBtXICMj8NZ2oE9tRLEDjA4YGJsxdwf8yLS3kJH6eAnq5mHDjwe/jVK6/j8wcOwDRNFni7
      Mz5+v5/l/d3/Tsawag1AEASEQiGk02l2rFb6saIowjAMaJoGv9+PfD7PHiA9rGAwWLZDkU8L
      gFWKHcdBKpWCpmmrQtF5KUhMTyMYCoLnBWTSaeTzeXR1d7MquKqqbBFTxRwoZXlyuRy7L0CJ
      WpJOp9HZ2Qmfr+Sb17pXboU5QjAcRdoQ0SKUdIPcpnNF7INx4wJS/q2IPvoFeKbiePXV19G/
      fhsAMD4WdXwZhsE+B8dxTMGOsOpPAFrAQCl7EA6Hy5oe6Ma7y/OSJKFYLEJRFCiKUraYqUxe
      671oeruu66tuxNF8yGazuHbtKjyeUmW1u6e3rOZiWRZCVbrVWltb0dzcjEwmg5aWFrZxkMtz
      M+AFAWPxHI5MJdDTHsa2Dh+Moo6XTqfw0BYFp1sfxRe//K/A16i78DzP8v9UjCNdUzf50V3r
      WdVpDI7jWPM6BajzVXw9Hg8zkPl2p2qg7AS11d0t6O7pwc5d92Hjps0Y3LiJZU8oI6NpWtXv
      TGnjaDQKRVHY/VnMwMRaME0TR6+ksH9LE85fjaOoG/jtuTiSGRVNQg5r129CU3PzogqP5NZq
      mgaOK6ncBYNByLIMRVFYbHhXGEA4HIaqqvB4PKzMXauZxufzsYk3SwFlMOq1d+JmQYuJ4iXL
      spDL5ZDNZpHNZhGJROA4DpNKXwrcXViLAc/zaAtKePVUHNfzBqYTeciREKIeAaLAQx79LQoz
      WaLFQlVVVl/wer2sW4+k3le1ARDI1zdNE6FQCH6/vywecMcHPM8jEAgwQ1kKiDp9N8K2baZR
      SvFVKBSC1+uFLMusGFbNd68FUtVYStFyQ18TPr29Df0xP9KqhUQyhxMjaQylDHTxkxg68RYk
      VxV4MZienmbGaNs2pqenWQB/V2xnPM+jqakJmqaxwd2pVArj4+PsqCY+iqqqCAQCGBsbwz33
      3LPoYtZCzfWrHaqqMp9/jnbOjGsTCoWgqiprKl/oXng8Hhi6jnOnT2DN2nVQvD4Wg9W677Zh
      4p3zCTy8pRVRRcAmADt7wuiMecABUE/8FNbep1nASxSJ+SBJEuLxOEKhEBv7ZZpmab0s5SbV
      M3ieL6sItra2QlGUWfmLmR2DUmPVSFnVQNVQ+h0Aa6i4GyrBwOwsOABs9JEbHMexwqPP52Mp
      R7/fP+/ii98YRfLI32G9dQETF6K4ij7se+abKBQK7HlVPgPR58f9g6XkRnbmsAmFA8gZABwg
      JGg4feQdbN/7OEtMLET0o0JpOp1m38OyLBQKhbvHAIDy3ZlkTaj44m5gEUUR0Wi06k2j3gMA
      zN0hSXByBSzLQiKRKEv13Qzbsl6QSCSYAbibxt1wL3RRFBEMBpHP58u6qwjFYhFDx15H8+gr
      2OIpACLQJyYgaAbUQgHBUIjVWNyGEAgEkN/zHUwJNU4HuyTJLogSC9SBxZ3ORM0GUCaOdVMG
      sFrcAfdDc39m0zSRy+XK8tr0munpadZJ5O5GI1CbpiAISCQSUFUVoVCI6ZMS6v3euBEMBhd0
      Iyq/Dy1YVVWRyWQYMbCQy2H87f+NQescxIpscZcni3NnDmJw3wGWt6fThNil3X0Di/LvLcti
      00vJkBa653SKMx6QKN6cARARqt4fMvX/VmZ8qJKpKAqbe+zmklPGoNb3o7iiubmZBdi6rmNi
      YgLBYJBlo+r9/hDIVZwvWK3VjUf0kPGxMSQ+PoRw8iMMiuNVm21tB+Ck8llooigiFAoxhulS
      s2yUzKg2ZIQYxPRsBUFgRgOUvvdNGcBqSQUKgoCmpibk83lGznJTJpLJJBRFgSAILP1HabPO
      zs55r03cEirGUVqNruduxVsNhiAIwrxpy4W4VF6fF20Tr6Njnok+lsOBV6pLQEqStKQMUyaT
      Yfl8r9fLgnOqQxB1g1xemm5DBc9VoQy3EqCglwpmuVyOGQL5oZU3zF1QqwX3JsDzPGRZRltb
      G3vP1QRdL+LyxxcgSRLaO7vL/o84M2TUldRwMgxdzUNZYGi4ZvHwhpqW/XnpuVH/BvHBhoeH
      Wexn23YZZV0QBBiGwTapVUuHvhmQH0/HNdF06chVVRWpVIo1Yqiqilwuxx6wx+NZVIVztS18
      AEhNXseP//b72IFj8Cki/ja1Cc292/DAo/vAW7PKC4ZhMM4/gXxqQ9cxNXQaW2UTdFBU3gvL
      BkZbn8SG3rVlP08oFArzxiHkglG9wuv1sqo1MVUjkQgj4lW+P0lVzsk6LeFe3RWglBj5/gCY
      UZBiGImpOo5TSpWJInp7e1eN67d42Hj5pbew3TeGUx+N4dH+ANbbJ9HUcR9kjoPgSvVSQsBx
      HIyNXIN2/mXEEyn0ezOQrSwGJBu86/a4FzfHcfgY67B272fLXFByI4vFInsu7t4D92vdtQmi
      PwuCgFwuh5aWFiZ/QvEp/ZIkibk/1Taou+2J3hSobkDZIcMwkM1mYVkWq4TSEXo3KDvPgkNz
      VMFrFwK4OMrD8scgF8dx+lc/whcG9yBYEcMU8jlcOPo2+hKvod9TRMrDYyQrYVvMQMYU8WHg
      acgCD2nkLYQkG2HJwJDRAgE28l07auoT6brOenrpvWq9lnZ8YvUCYM32FMfIssyaahZ0ZW/q
      vt2FoGpnNBoFUOoqoj5YqiLPt/gNXcepw29i7ZbdiETnHrX1CQ4PPfVZeINBCLaBri2DkHkb
      OHEQF4dGsb49zPhPjm3j0on3sDv3G4gKMHojjeNjBUzZQYzlmnBmuIh1jwTxqUcfhm/P0ygU
      8pjK5zHQ0cnqMalUCk1N1WMA0umpFWxTc1OhUGDPw834vXbtGtasWTNvlRmY2w14d5QybwFE
      UWQ9BPPN8U1NT+LDl/8vDv/oT6EVdXB8SYuGKpT0q3KqTb1gavQKUqqDr3z7P2LNpl1IIoLo
      I9/EjnVdjG6g6zpGRq5hbfwlOADOqm146aqEzv7NKOYL6JemEZc7sGnbNgQ8IkRJQigcQfvM
      wD9qpazWm+04DnNl6N8rQX4/qfRVbkTUoklz5CgtTUoi7sLXnHrGalGFuBOgzBAVzapJIL7/
      07/Axvy7OOtswOBn/5g1j9OJQfUS4sDQ8VxvoJz55OQki3s8Hg+GLp4Bf/7n0IsqLL0I3ebg
      3f0HkBwLr771FibOvYl/80QnTgl7wAXbEdrwIDb3xMqubds2i6mo247ek6js5LtTBx8wO6rK
      tm34/X7E43FWe6FOPgLRVdzdgbTYKV1aDQ0XaB5wHMeqpPF4vGz3yGQyGD9/GF3pQ+AlQNRS
      SKeS8AdKDRlu7hAhn8+X0SzqyU2iIJSCyUymNBDc4gR081OIREqzeW0HuGDkEOkawM5d9+Lo
      8BEMJx3wu+6HnRiBwM8yb+n7kY9PmTdKQWuaxjJspmmiUCggEikNtKNqPGWGLMti1JRqtBNJ
      klg2T5KkUpFrRgfUnfCoRMMFWgBEAOvs7IQgCBAEAX6/H5Mjl8Gd+QnCUqnws0aKY+Tqx0x/
      xg2365PP5zE2NlbWxF9PiEajLN1pWRb0+BUEZia2izxgOhxkbwABvw+GI2JwoAuOtwltIQ86
      Nu3Guo7ZBntqeqcsjyiKSM+0XdIkTlqkiqIwWgMZozstSqoS1UD3l64BlCjQxA6eL3vXOAEW
      AXogbgRCEfikAt49m8DW/hiK2QLOHvsejlgy1j32JTRFmtHauw7BcLTs54iOnclkWIWS3qMe
      TgS33CM1yJgOBxElA46bQcQ6+yF5A9i1cweOjhxGMRLDnu33ljXN2LbNFrPH42En4nw91UQ6
      JKlDNyhVXZI+L7mQtWIq0zSZq+XOFlX9vjd1lz7hSCQSyBQ0HDx2A49vb8aLR8fw5X2d+GLU
      wZvHb2Bn+lcoJjzQ2/89gPIjO5dJIRUfQ0//IIaGhli1slgsoqWlZVE8+1sNWZbR3NyMXC6H
      LQ8ewJl/OIpmP1CUW1D0++Dks2hqbkYsFkPfH32PGa8sy0gkEmyxkxYPwV1Jpp5dcrlIb4ia
      8SmGche2ZFlGLper2hBD70k925IkLUq5r2EANwEKzgomj0s3ckjrJQ6LqRVRlGT4OQsWTBSM
      Egnv0scXwBXisDM30Jz5CCmxFdaadewhUsN2MpnE4bdexINPPjOv33o7QPGP16sg/dgfon/D
      Rni9vnl/hgyHqAjZbLYsDiLiIO3kwWAQuq6z++kmIGqaBlVVywpb1PFHhTBJkhh9nX6emuIp
      2dCoA9wChEMhXDxyAc/ta0cqp2F4WoPACzhyNYPdG1ohywJ8PIeJbBJAL2KxZhRP/QADgQIE
      D5CRByEIAjRNQyaTwfT0FAKBICavnUfryAuYnnoQHQuQ8W4XRFHClu27lvD62QwPLXSiS/t8
      PqTT6dmG9JkBKNVA/57P51lGik4J4vvQ/DfbtpmrQ0HvYvhcQMMAlgzbtnH88Dvouf4PiCey
      OHMjj61rmwDY8AS8aPcKODjmhSLYGM8dQsfaTcgnb0AWRNBM6UDuMoYunII5dhxmcgTbfBOY
      1mX0iBZCiokPXvprNH3t393xU2A5yMSH8bPfvIGR62O4lz+J14YVDOx4GPsfe2DRzE+qEQCz
      an/uoYlUD3D3YlC/92LdyIYBzMBxHNwYH0OsqXle3Z8LJz9A5OwPcSUrQZKbsW1dFO1+CxwH
      7FobQcHkkCryONCnImecxejL30O3OI2Qf5Ym3CdPQRv6KyiCA8ywg7vEkrtk2MDF69NYf/06
      +vr6Vm3b5YXzp5C/cQF9N94FeqJ4ut/GtewoTDkE27YWJW1CNRWSM0kmk2wOQDXcjG7r6ry7
      twCWZeGl37yAjy9emJO/J5imicKpF9CuaNjZUsRgRMew3YkT9lbYM8/EwzvoCxngOSAk29jk
      nUBImsuRV4TqD9GwOWzxxXHll3+Kd37xfXz0zgsYH72+4HioeoPf64M1fAi6ZaBTtjB07TrG
      ChZ8QinLsxhxMWpkKhaLrL+iluFQI9JS0TgBZiAIAr7+jW9CnwmuqkHTNOSnrqMY4iDzDgqW
      hNiWx9E6sAMfvfqX6HTGwMGB49z8YvWJDu5tUTGhGgglX4YnY+Pc8Z/i6o6vY92mexCNNdWk
      /NYTpsYm0N2zFsrkOXyY4LGmqwUJLYfRRA5rmxYnSkYbUSwWY8FtOp1mMQFl16LR6JKFzggN
      KsQS4DgOfvb//g/2aq9iWNwAacOT6OzbAKDElDRNE6PXLsP66MfY274yo0pL7wv8djKIgZCO
      pNQFWfFBbB5A/75nEAxH5nzGejAMxzbxwe/ew+R7fw2ufz/kYAsi7X2I+OVFazIlEgkmeSPL
      MjMIqiLT7K9aAgeLQcMAlgDTNPHWr/8OgZFXEXr8jxGJznJebNvG0MVTyFw+jG7tLPpCS1NF
      WypsBxgXetHy1L9Fc2sHWwCmadZV38LkjVEk0yUymm3bbA4AsPA8BlVVwXEcY3i6lb0Nw0Cx
      WMSaNWuWRVFvGMASYNs2JicnkZiaRDhaTuu9fPQ1DE79Gh6eeDC35zNNFhXcsKLY/Nx/RlNL
      2+150yViamqKTWenzrzF7NhEfyB3b7FdXktBIwheAjiuNB4p1txadtM1VYUycQSKYIPjbt/i
      B4BWj4at3nGMXzx2+950iQiHw/B6vfD5fGUqHVTsqhXgV84BrsRKUMsbBrAEEK/F7/eXpSfT
      6SSa7Pgd+1w8B5ha5o69/0Ig94XkZGg0EnH7ab5AJeh1tNlUDkFZiopEzc+27Ct8wkDsULdP
      2tbeiSuBvShaHPImzxrDHQfQLQ5L2aiKugXVKO2IhmEhp5mwF7hA2pAQ67vnpr7P7UDlbC6v
      1wu/31/WG1AJ0zQZqS2XyyGfz5eNOiLUap1c9Gdb1k9/QkEye24jGPjUMzjX9kW8b+2EZnHI
      GTzOSLvwQfQ5JPXFDdLOJLJ44fg4Xjw8gqFUER9dmcLRj+N49Wyi5s9oFo/c4JfR079xRb7b
      rQAFsu6/VyryVTa+E1WC6OeiKCKbzTLtIjKCRCKxrBpJ/aQLVhm8Xm+pKWZ8HIIgIBgMon39
      Tviae/DRxHpEYzH09m1ELJtB4cYLiGHhnSqd0tDVGcGgXMShsRz2tnpx9FoGsebqlAjbAca6
      n8H2B5+pi9TnfJivok3SNKqqljUKVU50pJ5gdzFsuY1FjRPgJkGnQCwWYzuXbdsIhGPo27gD
      zV0D4HkeoXAEhU3P44x4L5K6NK871L22GUFdw4lRDRG/B9GIH9t7w5hIz+1J1i0OH5nrsemR
      L9Q9XYKkCWuBWkcDgQBT4bBtG6lUigXMtPO7A2q/3896CKqBKNfzoXECLAOBQIBp5bv7Uemm
      01HfNbgLzoaduHF9CENDx7Au8w6C0twTgbNMTORMFBwBezsUvHM6DhMOosG5NOS0IWLT574L
      Ram//uJK0LA9t5KcG5qmlQkRkzGQcBndU4/HA1VVF0USpKk2hmEwFYlqaBjAMkD+qTtTQc0d
      iqLMyVq0d/fBF4ph/M2jCEpVsjaihH+yvZ39df+O9rmvmYEFHuIqZItWW4iUHaoU06JxVjT8
      jqjRRIMGqneFkcEUCgUWNDcM4BaAHpLH42HyIUThrUzdEQKBAC5znTAzwMZghlGklwqRs2HU
      IO3VGxZahO7Nw41MJsP+jfRXi8VimaJ35exnTdNYz7FbvLgWGgawTFCzdzgchmEYyGQyrC2P
      jny3EfA8j52f+zbGhq8geep/oUm+uamTqhBBe6j6hPd6QzabRT6fL5MroQVN9QEiuVE8UCwW
      y5paSBiLuseo46uS+0+KfgS6Xi00DGCFQD2rgUAA09PTbMerdRJ09vbj8seb0WQfX/J7OQ5g
      tWytS32havD7/XOKVjRphwyDFnY+n2cBbuWJQDu+3+9fdMfXQjSfhgGsMBRFQSQSQb7KOE/L
      sqBpGnieh6oWEMhdAeZvs60K2wGE1o11n/0hkMSJe2cmiRnTNMsUIEikuBKU619o8ZOcCwns
      krt0/eKH+N3JEeQLOr70zx7Hi79+HaK4ygdl1ytInq/yIWmaxgY6KB4FnHNzjNERdKN/+4Mr
      8VFvC2h4yGJ2bFKCqJSjdNcGal2HNEgJ5GIBwLULI3joqd/Dvn4Jb3xwDrwvgv7e9sYJcCvg
      FpaiHZ/K+ARRFJEwvAhrRcQ85qIJdIbNgdv8zBzdnHpHIBBg6hcEanmsBA0jjE9OltThZhpg
      OI4rS5lWgugSwCxvi7DrkYfw7nuvIzc5BrvZB1kQUbT4hgGsNMjXVxQF6XQaoVAIuVyODXQg
      X1eSZXQ++V2k1Tzy7/8Fev21C0WOA5xMh2ErUSid23DvvQ/frq+zYiB3xD2myjTNqnGM4ziY
      OH8IwWv/CIPjMd6+Hxv2PAmg9qwyYC4vyG0AlqFBt2zogT48fd8gXnj1ECxNaPQDrDQsy0I6
      nWYNG7SbAaUHS0c7iUZxHIcTr/8Eg4VDaPKUpzUdBxhHG7JtD2Dwgc8gXNH9tdpAEyVpEZO2
      T+XUmUvHD2LD+N/DK5YM5azWid7P/AdGqqvVAVYoFJBOpwGUTlgS0p0PjRNghUEBWD6fZ9MP
      CVQ3sG2bTS1UFAUDe55G6pXDaKro6R72bseap74zp/lmtaJysmh84gZ4zkFH9xrcGB1BU2s7
      Ri8cQ8/YL+GVZrNmQnEaQGnTmE/qUFEUJpuykCQioWEAtwhUwgfKh8kBs/RgynZwPIdE64NY
      q77OCmMTqoSOp7911yx+oHRPKDYCSm5J4uoxyB4PpKP/E5NQEOMLiHlmayNZQ8BE86PYGAzO
      metcCZ7n0dzcDGDx89oaWaAVBgV27oyEm+NCv0gSMJfLIZ/LQiom4H5kDnhY9vI7nuoJ7ntA
      CCQ+gvC7/45ebx4bvNPo8Mwl/vFGDh++8bNFLeqlqmU0DGAFQT5+Lpcr4wIBsw+GHo7f7y9p
      Y6pZ6Ed+gO32sbJMUMHxIBCsPlN3taK0+DmcOfxGSd8zl8JAIIdOpTDntXmTR9HiEJQs7HN+
      i+aO3lvymRou0ArCsiyW5ais/FYWrUoyfznoR/8GG6SxssWfMwUEH/gXi5YPWU2QRAn+sYNI
      jL+JHicNSdRhWeUuS8aUMT7wNZjTQ9haeBsjkYew5RZlvhoGsILk3pFPAAAD/klEQVQgie45
      c6iq/N1xHAxfuoAoN1PZnXmJA+BGeDd2bru/7ptcbgb+QACejU9jzdW/gZrN4efHkoBtY8em
      NgxdnYRmcyh6o+jwj6Av/yGui20YeOKfQ7xF0zkbLtAKg0b7uOGeZ+XWx+/bsBn+B/8lzgYf
      R9oslezjTjPWPPT7q4bmcDNYd99+XNcjKOQNdHZEcWBHC86NpmA4Hnx2Tze8ehr79DcQEVQE
      9vwBAjOqcLcCjRNghSEIAoaGhhCNRsHzPLLZLCRJYlr2wGzPQFNTE7zeCAIPPYdrpzqRuvRL
      tH/uP6G5vfsOf4tbi0AgAC3Ujy5hCt5LU3j/igNZFGBoZil5YFooWDzUXX+IdVvvv6WfpWEA
      KwjHceDxeNDS0gKgVPjxer2szY9oEQDYUAdgpmwf60Zx/bNo6ei5Y5//dsFxHHBGARwcpHUH
      yYKFfdtacfHSBH72wSS41kHo+76LdVt233I3sFEJXiFQ8YuqwB6Phwk7VRaAALDhEFQZluWS
      ZuZiZMPvBpw+dgjm0R+A88bAtwxCiPTAMnUo0S50rlkHf5WRtLcCDQNYIdi2jenpaTYBxQ13
      h5gbpHtfqyPqbkcul4XHoyxL23O5uHsjrdsMTdNgmuYc4Sag9jRD97STT9riB4BAIHhHFz/Q
      MIAVQz6fh2maVRUIyCgqjaDWydDA7UMjCF5BcBxXU6qvsiosSdKSZlk1cGvQMIAVgiAIMAyj
      ZhBL0wtDoRALihuL/86j4QKtABzHYWM75xNtkmWZMSIbi78+0DgBVgCkalBrYdNAiJsZ4tbA
      rUXDAFYAtm0zPctqkGW51Nv6CcnxryY0XKAVAPn+tdwaTdNW3ZjTTwoaBrACoDlWtVSKg8Fg
      XQ2ua2AWDQNYAZimyQSdKhXQJEliBtJA/aGxLS0TjuPANE0Ui0XG+yEoirJgH2sDdxaNE2CZ
      ME2TURpI7o/QcH3qHw0DWCZIFNfd9ELIZDJVdS4bqB80DGAFQEWwyjRnsVhccERPA3cWDQNY
      JlRVZZKHle6Oz+dbdRqenzQ0DGCZoF2/kgbBcdyi1ckauHNoGMAyUW0ABi3+RuW3/tEwgGWC
      9Ow5jmPS30R1roVaDTIN3H40DGCZIG6/1+uFqqowTbNmTwAwOzLUPTOrgTuHhgEsEzzPM4nv
      YDAInudRKBSQy+Wqvl4QBHg8HsYQbeDOomEAywRNiSQqtKIoUBSl5mR0monbiA/qAw0DWAGQ
      C0R/FgSBNcnfajen4UYtDw0DWAFwHMeG31FdoFgsIh6PMyr0rVqohmE0qNbLQIOoskLgeR7h
      cBi6rqNQKMCyLOYe3Upff74WzAYWBpfJZJw7rc1yN4JSnXezyO3dgP8P0a1VbtQJ90EAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Carte générale' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diagramme Coût' width='192'>
      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
      RHE7xsn79wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diagramme Duration_ProjectType' width='192'>
      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
      T8cwOxo50dXA5OIqFi3L7PQMXYNj/ObVlvu68tJoxXDsc7kcQFtHhl7e5y47AFZXIw4lxPzS
      KppupZBNk9IUVHVv46Jp2q1/4v+jU9HlomnGC4D22dSb96vsACjoaLpONpOld+g4wTWNUwNd
      XLk+w+OPnsJsNu97akQjFsNVcmpExWy8QzqTqbzpJcuvBVLMDAyN3nrYdHLv53OPniq7aSGq
      zXhfGUL8BgmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMLTyA6DrBDfWmJmdJ1soEd4Ng64T
      CGxXoHtCVFfZZ4K1QorVnQTj/a3MLS5jKeUppcMkqa1E/4SoqvJrgVQ7WnKXiakw7QPjBBYm
      mAqrfOPp/q98n2DDVTPq+r6Wy35ph3kOwirZ77p1J2UHoJCJYXY1c2qwjcn5DZyeJvobHcwt
      bzDa3wnszX6mqvd+q6M0TWBFKMq+lst+aWYzuYq1djTsd926k7KXvsXRQHdzikXfNmMnhsim
      EtTVeyhuB9ExXoGnOFrK3wVSFLwdXXg/myLSbt27F1hLy+G9M6AQf0mGQYWhSQCEoUkAhKFJ
      AIShSQCEoUkAhKFJAIShlX0eoFTIsjC/SFGHxtZO3DYVt9tFOBKloaG+En0UomrK3gKYLXZG
      To7R2eQkmS2y5lsjGlxnO5quRP+EqKo7bwF0nTfffJNvv/Qy6j7qGZb9u5x+tI8rvhtci8Q4
      /9TXpBjuXqQYrmxVLYZLbs3xwx/t0N/VzvlnnsXjsNz+eTs+ahqPYVbA6Wmiy62yvBFioLMZ
      kGK4O5JiuLJVtRju2Vf/Ntl8CRQTNdY7Tz+XLloY7Nmr/fG2eGn2NrG25pdiOHHo3fUY4NqF
      j3jvvff4vd/9IZHMnTcz3rZ2VNPeqt7sbQYUurqOycovDr27bgEGT5yiPVsksbNOOi+zO4uH
      z10DkEomCCeyPPni36Cr3vag+iTEA3PXAMxcu8jkdomhemjtHqC99vYHwUIcVXc5BtDZDEYZ
      7msnuBsDow1RCkO4fQB0jWQyxd/6/vdpqLHxzCt/kxa3fPuLh8/td4GKWT768H3Sub2Rn9Wb
      8/T39VJ3h/MAQhxVt98CWBy8+J1X6G5ysO7341tbo1iSUSDx8LnrMcD7F6c5dfZROj1mCvqd
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagramme coûts_ProjectType' width='192'>
      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
      hkwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Cout_country' width='192'>
      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
      D+DyUvNPnp5J1beMT5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Coût_ProjectType' width='192'>
      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
      /xe9fZweclOjlgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ecart Coût_region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Coûts_ProjectType' width='192'>
      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
      kwAIW/tfQbdBsXoPulQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_region' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart duration_ProjectType' width='192'>
      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
      JADC0v4Xqa/74VtH5VQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Livraison_region' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Livrason_country' width='192'>
      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
      5UkQdsj/A8FiaPYfHaXhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table de duration' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
