<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
      </column>
      <column caption='Categ Cost' datatype='string' default-role='measure' default-type='ordinal' name='[Calculation_1471269746390384641]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746261286912] &gt;= 15 THEN        &#13;&#10; &apos;Rouge&apos;&#13;&#10;ELSEIF [Calculation_1471269746261286912] &lt;= 0 THEN  &#13;&#10;   &apos;Vert&apos;&#13;&#10;ELSE&#13;&#10;    &apos;Jaune&apos;&#13;&#10;END' />
      </column>
      <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' name='[Calculation_1471269747387523077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ Cotal2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &gt;=  15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747387523077] &lt;=  0 THEN&#13;&#10;&quot;Vert&quot;&#13;&#10;ELSE&#13;&#10;   &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Categ Deadline' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1471269747397005321]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746399682562] &gt;=15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF[Calculation_1471269746399682562]&lt;= 0 THEN&#13;&#10; &quot;Vert&quot;&#13;&#10;ELSE&#13;&#10; &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='Max' name='[max:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='None' name='[none:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;rouge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vert&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central/Eastern Europe-Middle East-Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='27592303.636221975' min='-35383488.506571695' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20269987.398014411' min='-18683542.601729188' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' name='[Calculation_1471269747387523077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cotal2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &gt;=  15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747387523077] &lt;=  0 THEN&#13;&#10;&quot;Vert&quot;&#13;&#10;ELSE&#13;&#10;   &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='None' name='[none:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' included-values='in-range-or-null'>
            <min>-15.0</min>
            <max>58.5</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Feuille 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{15115406-5DBA-449C-A2B8-54B450912461}' />
    </worksheet>
    <worksheet name='Feuille 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
            </column>
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='Sum' name='[sum:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='Sum' name='[sum:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='User' name='[usr:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='248' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk])</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' maximized='true' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='269'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Feuille 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A840D49-B220-4B45-8788-5EDC2C5370F6}' />
    </window>
    <window class='worksheet' name='Feuille 5'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 5' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9aXBc6X7e9ztb741GN/YdBEiCBDkckkNyOOu147JTSqkkK3bJVmK7KilV
      5YPiRCrF3/XVdmzLtiqyFFVZ1rWspKT4KiX5yvFdZoYbAIIAQWJfGr2g931fzpoPDXKGQ85K
      EuC94lPFmlOn0e/7njPnPf3+n//zf17BsiyL13iNv6QQj3sAr/Eax4nXE+AYUKvVjnsIr3GI
      1xPgGGAYxhd+lo2s8zvf/d4T5xqlOHP3tr/wO/G1G/xoKQhAJrrNv/6Xv8nHd9ee+bf5g01W
      dhJPnf+LP/4D/vk//01u39/iT3//31H5OhfyeTTz/P4f/9nhmNP83m//Fn/8/Y+f+aeGVuLj
      T5af8YnJD/7LD7CA+Zs/pqaaX9rlH/7hH6AZX7yKV4sH/NGf/Yj/8O9/n1w8yP3d+BOfy1/a
      +mscOZbuPYBGnULbYvOT7zG3dsDJcT9/8dEDRPPvUNdt2IsHjF9/m//v//ojmkoPP3t1GM0w
      AYM/+d5/5n/4n34FGYPv//G/YzWU4ed/6R9w+3vfpekcZtyV4wf38/zqr/8a00Pdj/tNF9r8
      yq/+z/yb/+N3GVJk9EaB3/m336Vp6+Xnro7xvU8eIigefubKOH8xv4Fo7+ZvfmeG//tPf8Sl
      D/8buhoh7tzfxPSfAOAv/vR7/NX/9h8w0m1j6ZPv88P5Vd756z9PafsOwazKW+eH+O4f/gCH
      38f1C9OfuQMi5VSYfENjbSvEibEhfu8//ieGZ67hE0qkk1l+5hf/e5RanP/zD/6ESL7GX31n
      gz/8kz/n5MX3mekx+P4Pb3Ptb/xt9IN7LG8G8U5cxtZu066XqDYD/Nvf/k1K1Qbv/Ozfe/0L
      8ErBMlhaeYBZTXBzcZ31/Ty//mv/C3/l/av8V3/9Fzg/2UO52qBSLNBqtxg7eQ6znqKhPmrA
      BNmF2y6jiCaJmsA//OW/y+LcApIkYrcpnH/jIj/zC//dEw8/QKMQ41/9i99kdPoNAFRVZfLU
      eerFDM1anQ9/9hfpc7YpV5v8tZ//JXpo8KOP5rj6wQcc7K6xEc7zq7/yy3gdSqe9tkVfwIPD
      7mBpO8o/+ke/xtbiLSRJQlEUTr95kfc/+K8/9/B3cPXN09z+0V/gGZ5F03QuXLlOMrJNKZ3k
      r/3CL9HndbCycJdf+B9/hctnxlmYu8OZi2+Tju6jo3D9vbfYfrjCftrgH/7y38OudB5zrVmj
      0mghe/r45b//8wS3Vl5PgFcJtdQug7Mf8rO/+PfJ7DxguFvgn/2Lf0nZ8LK1+H02YxWWb/w5
      N5e2aBTT3JxbIF+pI4gCgiAACpdO9/CP/+k/4wfzazi1Ir/52/+O0+dP025ZJA7COHuGuP39
      P2I/VXqib0/vOP/rr/9v/K2f+QBRlKgXUtyeWyBXriMIIqIoIkqH/xVFRFHijQunWbg9h69v
      mG6lxW/93ndpap3l3fvvXeRf/9N/wnf/439mqs/DP/4n/zv9J8/RbmkUMwmqbQeJvdssrO4/
      dR9GZt7kkz//M65dv0h8f4vF5RWaqono8tHX5QDgxMkJ/v3v/BaboRSzZ8/ycGkBd3cvWw+X
      WVndwhDs2LQ0v/vdP0E3QZREBKFznyRJ6lyTzY/wiAZttVqY5pevt17jxaBWq+HxeI57GK/B
      Z2IAWZZ5nRI4GsiyjKIoxz2M1+BzE6ADi2QyxeDQEMIL7KhVKxNLZQn0DWKoTXp6exGFr9+D
      2qyhi3Zc9icfnM+265HaNEQf3a4vj+0tS6NW0/F6nd/qWp4Xj9bBz4tYaJuDVIULb13CbROZ
      +/g2b/2VDxDbdZaWVvANjnNyNMDSvRV8A2OcHA2weG+FnuETnD4x8gKupIOd9fvkKy0mT53D
      qqXZj2d5861reB0iK3cXMJ1+Lp8/xcq9RUxHN5dmp1lZXkJwBXjz3OkX+px9Exjt+tMxwM3/
      8v/yr/7Nd/liou7bIROJExgdJbqzQSydJrK/RyJToFUvs7GxQbHapJhNsrm1g2aYHIT2iCWz
      WBaYeovg5ioHuaf583wihm9wlIPddSrlIqWmQTwSZGc/iqG1iIRDbO+GUNUG4eA+u/tRLAs0
      TSWTSrCztUmlodKoFNjc3CJXrL7gK385MFpltiNZpk9O4VQkIlsPiafLaMD2w/tMnr9C/mCP
      9eX7jL9xhcJBkMXFJc68dZ1keBf9BY7lIJ5h+tQMgz0utvcTXH/rLPeXH1IIrkD/Gez1FOvr
      64h9U9hqaVY317H3n4RahmJDe4Ej+WYwTOHpCfDB3/ibnBr2v/DOLFMjFAzSMgRkwaJncIxC
      OokgigiWwfrGJqFQCH9PgEYuRkPqopJNolkWouzg5PQE4uGrolHJs7UXBsA0NML7QVqGiHx4
      NZIkkdjZIFetUmiYuCWNfLFATZWx6WWqbY1stkgykWJyepqD8B67+1FOnx4jHc+98Gt/GWg3
      KtTqLTKRLZY2dogVDcb7vAC0WgZulx3FJlCpGHg9dlx2yLag2yHjRET9iva/Cd544xzFTIy5
      5RUkwYHs8GHpFSrFBoGAl4BPJp6o4fN58HtE4vkGXV43XsVOXT2GCWBq3F9cpG6IT0+ATDJG
      sVgklc6/0D4F0cbMuXNcv34VWZJxO+1Iosje9h5jUydx2UXOnn+TeiZELF8jEtylqZo8Kypx
      dfVw5uQkAKJkY+bsOd5++yqKCGgVYgWNqbEBDANcbheSKGFZ4Ha7kCWRR6GOze7EptgQBRMQ
      MHUN8yckDnL6+nHb6LxATBMRlc3tbaKxNEPDAVYfPKTSEJk+2cPDpVWyDYFLoz7mV9YoW/Di
      Fn8GuVwBsJBEN1hl1lcW8fWfZPjUCTaXFlmPNLh2ZZLdBw/YiLe4dnaUnbWHhApl+jyOFzaS
      rw1R4dLVq1i57U9ZoEe4d/uHHGSq9A5P88HbF15Yn7ViEbvfjwKUSiV8Ph+lUgmbaBJLl+j2
      +5DNNtlyk+npKZKRfdrYmD4xhtmus7W7j2GJTJ86jcdpe9xuvVxE8fqxiaA1y7QEN/n4Ppag
      0D80iKZb2NCxJAnTlBDNJrLLS7PWxLJ0/H4/xWIRwWiTzmVoGz4unJt4Ydf9LJTLZXw+33O3
      o7YaVBoqPX4fgiDQbrVQHA5Ey6JUzGP3+HAqcufY7cNhkykV8ji93ThsLy4H2mrUqDZUenv8
      mLpKodKgN9CNIAjUKiUsyYHX7Tg8tuN1O6mWiwiKE4/rGCbAIXS19fQEeNEwTfMngl1KxcLk
      SnVOnJrBbX+5CfJqtYrX632pfbzG18NLnwCqqqLrLzLk+snH6zzAq4MjywQ3a2V2d3cplGtk
      c9lvtta2LHLpOInM03GJ1m7Q1p7krCqVClqrTkuzsAyVar31xOeP1JiVyreSfB0jLA6CW+xG
      EliGztrKEnPzd6m1VFaXF1lYvI9qWKjNCvNzc+yGE6j1EnNzdwhGU2iNMnN3brMXTT73SPKp
      GA82dgCIBre4fWeOpmYR3t3gztwiLd0AS2d5YY4HG7tYRpt7C3OsbgUxdZWlu/M83Nx7Zox3
      ZLBMpN/4jd/4jZfZh2EYmKZJej9Cz/QUsa11qqpGq1qhoYGCSnA/jGR30arkicaT+Lr9JKMh
      Ki0dr9uN3qpS1xVauQi6sxe3TXrcfikVpmy5qeXiJFMZ3D4/7VaDVPAhO8kGvb1edNWiXskR
      jaVwuezcuHETh8eHLILDJhM6ZJEEo0UikaTa0unyul8aP62qKjab7av/8PMwdTTdIpMvMNjf
      S1egD6dRIpLO09DcjHg18oaL5PYaJy9dI7r5kFQ6w4Wr77K7tkImk+LCtffYWXvA+MTEc11f
      q62TzSYZGe7nwVqQd6+eYfHeKqW6wbXzw9zfziEWwohj59HjOySLJfpPnKN4sEujUcAzdJZm
      Zh93zzB2+XgUOYbWPLpfAMvU2N/bo2VJyIJF39AY5Vymw2Jgsr29Syx2gK/bTyMfpyF6qGRT
      aJaF4vDipElBVfC7ZBrVIruh6BPtZ4tlJsYDxA5yZDJZAoEAkydP4ZA1crkqkiih1zJEsm2G
      R0cYG+onm80QCwfpHpqgkDwgX8jh8g/QKOaP9830RRAVAv6uzqEokQxvE8ybzE5NUClE2DnI
      0u22o2ngsEvIskXNEHDJIjZE6hY4ZRFJEJ87zxPoCRwmMlUknEi2bqxmGuwuFI8Xo1qnWtHw
      +Rx0uSBZ0fE6bbgFiUKrhdvlwGGzdX4pjhqmxoPlJarqM2jQlwVBVDh15gxX3rqILMk47Aqi
      KLC/F2Jk4gROm8j06bO0CzGSxQaJgwiG2Rme2igSTFa5fOE8sijg8vo5dWL8ifbtdkcnm212
      Hl1JktE17THlGY4lmJoax9INsKzHSzBBEDCNw0BdFHHa7YjiceUmvxyWoREKhUjEY2QzMZbW
      w/T7PZSKOUSHj26vnXKlzuCQl4f3V6nrCqf6PNx7uEZDlJnu6eLegzVUS3puHXwssk88HieT
      1zCNPA+X5+iZfhsqSVbuPqB/eozxmRFW55fZyxpcP93PwwcPSLRUzoyMsrm6QrJYx+/8Fr+E
      zwtR4c3Lb+GWjaMLguvlMnafDxkoVyp0eb1UKpWObDdbprvbh2S0yVVanDgxTjoWQcXG5Ngw
      ar3EXjSFJElMTk3jUD5dArXqFQzZhd6q4/U6qdUMLEuly+tmPxhiaHwUvQ3tep6WYeH19UK7
      TE2X8DptdHk9RML7uHz9uO0iNoebZr2K1+d7aUugbxsEW6ZBqVTGtCxcbjetRh3TAk9XN4ba
      QLdEvB43gmVRrZSxu70okki1Usbp7kKWhMNjL4osfXWHX4JKqYhmmDicbuyKQL2p0eV1Y2gq
      9bZGl8eDIECjVkVQ7DjtNuq1CpLixGGXqdeqiIoTp/34NFGGrr78CaBp2pdWQP1lxGsW6NXB
      S68IUxTltfLxc2i32zgcx5cAeo1P8dJZoEdoVArs7O0jKA5q1RIul/uwiOOrYZkGkeAeNdWi
      y+N64jO1WUe1JBTpi8OZSiGHIdm+9G+e2a9lUa3VsNvtnz1Jpdo5VyqVvtWD/O0ngEVoe41U
      RaPX52T57gKheIahwV4eLN5lL3xA78AwtCvMzS9S10W6bAZzC4u0DJkum8Gd+bs0DYXew2D6
      2yIbD7MZTjA80Mf6yl2CoSh2T4BkeIu1zSD9w8MoosHC7TukSw2GerwszM2RrbQZCHi4Oz9H
      ptRicKD32NSgR0KDPkJyL8zQ7Fli6w8ptVUalRJ11cKGxu5eENHuplnOEj5I4AsEOAjtUm7q
      +LweDK2J4umhENlA8g3jVD69ZYXUPmXLQykdJp5IU6+VqTQ0LK1BLBajpQvo9TI4vBRSUTKF
      Gj6nwHYwSqFQIJ9NIzm8NIppIoksPq+b8H6QdK6EXTL5+MZtfD19lLNJEtkCDhl+fOMWXf5e
      RMFEESx2dnZBdtKoFkjGE7RNCa/7i9U233oCmDomEulcDpdZpSYPMOKok2jIzJw8jU3Nk2nZ
      Seyucebae4Q3Vkik0rz17ofsri6TSKW48t532F5dZnxy8rkePNWwyGWTjI6MsnRvmZNnzzMU
      UHi4neK9S2MsrmcQc0GUqUsY8R2iuQLDp96kdLBLtZaje+wNWpkg7t4RHMdFg6pHSoOqbG9s
      0DRlFFFgaOwElXwGQerQoFtb28QOYh0aNHtAHQ+ldBzVspDtLorJfWJFDa9deEIN+gjFSp0x
      v4TmGqRWypHJZhmZmCKX7rgAaM0SmaKK1C6RyWTQ7QFazRpTJydJhkPsRzMMeGAvmqKhQ8Bp
      0RI8jI2PM9DTjSRJ5BMRqoadsbExhvsDpNNp9vaCTJ6aIR4OksxkGTsxTSH9tOvCC4Go4Pd1
      YoeuvhEqyW2C0RjNtkFoe5lIVebMRA+aBnabiCJZ1A0BpyQgWyJNBBySgCSIPG/tn9//qWL4
      +jvXMRpZ5u+uINidyG4PZr1Otarj67LjdVpkagYeh4ITkVK7jcvpwK4otI+JBr2/uEhFO1Ia
      tKMGvXbtMrIo4bApiIJIcCfI2Ikp7IrA9MwsWilOvNgknYghiDYEoN1o0D9+kjOjXaTKrSfU
      oI+g2OxIknSo7hQAAUngMQ0qCAL5bJKGJmBXBGx2G4rNjiLLCAJUS3my5RZdTht2uwNRkrCw
      sEwTQ22QLNYZG+7vlI2a1uPyUVGw0A0T07IQJQW7IiMKL+e2mrrK9vYW4dA+pZpGT28Phuhm
      ottkcTVKt0um3tIYHvFxb2GJqm5jZqCLO/eWaIoKp/t83FlcQkV+7uAvtLdFJBwhkUkTDR9Q
      Kldx+AaxynHu3rrH0KkJJmfHWb41z3bW4N0zgyzdu0e8qTI7NsHq8l3iheOjQS9dvYpH0l4+
      C/QIT9KgZbq8XVQqFWyiyUG6SE/Aj2i0yJSbnJyaJHUQpo2dE+PDGFqL/VAYm6ubidHBJ2KH
      dr2CfkiDuu0ibcGF3qqRSkTQTYWRiUnsgo5od1HOJCg3DSZH+mhaNiy1gc/noVxuIBhN4pky
      k5Pj6LqOIlogOylnY+DwodXyWJKDnr4B6oUkuuzBZRPxuBzs74foH5kEo43P5/tKtee3VYNa
      pkmtVsO0LJwuN7raQlTs2GWRarWGhYDL40ERBer1OjanC1kUaNRr2J1upM8cy98wHvo86rUK
      umFhszuRBZOWZuJxOzF1jaZq4HY5EQRoNesIkg27TaHZqHfGq0i0Gg0E2Y79BapSvylM4wgm
      wHGpQQuFAt1+/zcquzwqVCoVurqeLwh9jReD12rQY8DrPMCrgyMTwzUqBfZCESxRoV6t4HS5
      vjYNCmBZOslkFq/3yQenUSlQaZu47DbymQSW7MT2FayCZVns724i2NzPyERaVCrVJ6nPz6Bc
      Lj83h/+txXBYLN65QSyRw9vlYnXlAcHdTXD1kTvYZi8Sp6dvAKNV4u7iMnVNwKPo3F26T0OX
      8Co6C4tLNHXxuWlQy7K4+8mP8I1MEVxdZD8Sw+7xkwpvsbEdondoCFnQWZybJ11qMNDj4e7C
      ArlKi36/m8XFu2RKDQb7ejmuH2nLMo4uCC4ksozPzJCLBknmcoSCe8RSOZq1EltbW+TLNfLp
      OFvbO6iGSSS4SzSefhzExkP7BCMHT7VbyqQIRuNYlkFo8wHJUovEQYit3X10tcne3i7bu/uo
      aotSpU6lmCOTThE6SGIaGnvb20QTGQytxfbWJslkktu37xBL5cgX8qC3yBQq5DIp9vYjGIaO
      Wq+wt7fHXugA09DZ391mNxh54UYCT0Gvkcq1GD8xRZe3m6vXruG0O/ApDSLpGkNDI9hlkc2H
      G5y/ep1iMszyww0uXXuXXGyf5QdrvHX9PbLx0HOzQJnIDvl8naYBB4k0g8Pj9Hos4gWd629O
      8GA1RHz9Ab1nLmOrZ1l+uMbomUvo5Sw7O2sMTF9AaOaptI9vdWBp6tGqQXe3t2mZMookMDw+
      Sa2YQxBFREz29oKkUim8Xd00czHqgotSJoFqWWitCjXDTrer89Z8Qg0qiNhFi0oxh6u7F+gU
      xVeT+6SKdVTBQZfNolSpUCxVKefTKJ4AY+Pj+L0uJEkkuLvL3l6Q8enT9Pf3MzoywuhgL9ls
      FrQGyXyJvZ09hkeGyWaztOtlZE8PllYnGQ3h6Z9AVJvP/VB9JSQ3H3xwlWJ0nb1UGaNdoiV2
      YdMqtEUXzXyYrUgGXQeb0jEJaBoidklARqSFgF0SEAXh+cZqqqzuxhkMOGm127z73vvIZpW7
      iw8RFAeSy4XRaNCo63g9Ntx2yNVNXHYFByLldhunw45dVlCPUQ1aUZ/hCvGy8EgNevnyBWRR
      wibLCIJAKBhmeHwCmywwMXUKq5YiWW5TyGZQ7E4EoFoqoWkNYvE45XrrKTXo2HCA5bUwA30B
      MJokcy1GBgMYpoXNZntMSxqGQbX2qe1JORVC7BrE53IgyyJtTUfXDUzLxDQ7/xr1GqZp4e/t
      f8KTyGbrqFkRLAzDoNF8sujmZUBt1giFwhSrLZwOG/fvPeTiW2/g6BnDoebIVxq4HHaGR7q5
      N3+Pumnj9KCXucV7NEUbp/q6uXP3Hqpgez4a1LQYGR0im8tTKucJ7e2TzuZx+YewqgkWbi8x
      fGqC8TNj3L81z25O5/rMIPfvLZJoqpw9pEETxfrjl9qR4lAN6joKGvRRENysVlG8XmSgWqvi
      cXuo1WoookU8U6Qn0I1gtMmWW0xNjpFJRGlbdsZHBh7HCuVSGV/3k/Rhs1ZFdnko5XP4vU5a
      OKjl4liigs/fg2lZyBiINjvpWATR5qKvv592q4nbaScciuDpDtAb8BENh/D3j0C7Ql2XcYpa
      pzimO4CEgdfrpVqt4lAkdNGGoTZx2G0cRA/I5atcunbpaz1Y3z4IttBUFRMRm6JgmgaS1FF1
      Grp2SEvaECyLdruNbOvkRNR2G9lmRxQ4PLYhic//7jMNA0QJ09DQdRO73YZlGqi6id1mQxBA
      U9sgyiiyhKq2EUUZWRZRVRXh8PxxwTQ/I4eu1WovRbWp6/pPtRpUbzfYDx/g8fcx3B/4Wt9p
      Nps4ncfjSvcaT+LIEmGv8SlelC3Kazw/nqJBq4UUc3fv0903+EK9Y+qlHDvBEIagUKuWcLs9
      X18NalnUKwVapoxdefIn87Pt2owqZd2Oy/YVNKipUam0cDiOYf3Ji5FDW6bG8t0F9sJxhoaH
      ie1vEUkVGezrQW2UmJu7S7GhE/BIneO6SsAlcnv+LpWmxUDv87n/pQ6CbIQSjAz2s7fxgIfr
      2wQGxwhvPWB9M0jv0DCKoDF36zbJQo2hXg937syRKTUYCHiYn5sjVagzPNB3bDQoPMMVYmVl
      Baei8kf/z/dfaEf5eJbJ2Vny0T2S2Sy729tE4mkalQLr62tkClUyiSjrGxu0dZPgzib70QSW
      BZbRJhkNkSrWn2q3lMkwfnqWQmyPSrVCtWUQ3d9hfWsPXW2ytbXJ+uYO7VaNzfUNNreDmICu
      axyEg2xurJGvNCnlU6xvbJDKlp4e/CuIWj6O6Bnh3JiX9VCS7v5R2rWOa8bW6kPOXnmXRu6A
      taUHzFx9l1Yuzty9h1x+50PKqQjPa0jo6urD0uqASixd4zvvXeT+wm0SRYP33ppi5eE+B6vL
      DJy/hqOR4+7KKhPnrmBWsmxuPWT49GXkdoFy63iTpE9NgKtXrvDg/jrXr199oR09VoNaCjZJ
      YmLqJLViHkGUEIHdvV3S6TSeLj+NbISa5aKYjKFaJqLsYHJ8+PGb4klv0EcqU4VHZhGSJFOI
      7pOr1jBkD90OgUK5hOQI4JGaVFsauVyJcqXB6TNnScf2icYznD07SSHzkzEB3P4h2qUo28Eo
      LVXD1/Wp0ZauWdgVCUmCZsvCYZewyVDVBFyygIL43Oa4Xb5HiTQNUbAhyB5oFxBsDiSnC7PR
      pFE38RzSoPmGicsu4xBEqqqKw2FDkWXUY4wPq+nQ5yeAxe//7m8zMvMm7hdcxPVIDXr1ykUk
      UUSRJURBYD+4z+jkJIoEE1OnERtpkmWVcjGPy+NFeIZq/Slv0NlznWJ7AVDLpComw/0+DBPk
      Q3WmZYGiyE9ogyRJRhIlBMHqJLiaDbSfkIBdFEVcbhdN08aZiQFWVxbZ2dkhkS0xOj7I/K2b
      lNsyp2YGmf/4FtmWxJWpHn504xYVJJ63Hm1r7T472zuE43Uw8tz85IcMnn0fKjFufjTP6Mwk
      k+cmuPfRDbayOu+dHebu3B1iDZVzE5OsLNwilq/jPw4a9BCSy//5INhk9d4ixUabwMAY52dO
      vLDOvogGtUkW0WSB/r5AJ+tabDI9NU4mHqFl2ZkYHcRo19neC2MhMjl98glv0A4N6kURQW93
      El+lVARkF4EeP7rRoUERRUxTQrDayHYX7VYby/qU2rS0JslMCg0/58+MvbDrfhZeSBBsdfIP
      CCKiKDzWW4mShCQI6IaBKEqIAo+PBQEMQ0cU5ed2vtD1juPGoz4M0+xQspaFYVqH2xB1+kMQ
      kUQRQ9dBFJFEAUM3Do+Pd5euI1GD/iRsvZRLxciWGkydPPnSjZpee4O+OnitBj0GvFaDvjo4
      smqEeilPNJWlu6cfwVDpHxj42lp9yzRIxg9QBTsTI0NP0GbtRhVDcuGyf0qPlstlHDIYihen
      pFFtmnR5Pk08FUsl/N3dP3l8vGUS3Fqjbevm7OQQK8tLNHWBCxffYGdtlaZqcOHyVWS9zPKD
      bbr7RzjR72J5fZeegTEm+5wsrW4TGBhj9tTzWcBvrS5TrDYZP3WeZjZMMl/hzavvkAqukik2
      uXj1Gm5ZZ2H+HpLbz+XZSe4urmDzBrh4ZoLFe/dR3H4uX5g9NhrUaNeOTg6dCR8wODNDZm+b
      crtNtViirhoolsbefhhLslMvZYjGk3R1B4gGdyjVVbq7vBhqA0PxoBUO0Bw9T3iDltNRqrjJ
      xYKk0hmcXQHajTqZ8Dq7ySa9vR7UpkWtnCZykMDhdHDn9h0cHh8iJg6bzM7OLo22iaA3CEfj
      VJttun3eV88b1DKQFTvpXJ4ej0gkpzLug5LpZmZ6CqGZo2S4Se1tcfbqO8R21khk8lx55z32
      N9dIZbNcefd9gpurjD6nN2iXv4den53dSIxKqcX777zBvbtLVFUb71wcZ3kjjZCL4D51CVJB
      wrkS4zNvUovvU64V6Jl4AzUfxRkYwqEcTxwgSMrRq0GbloJNVpicPkmjXEKQREQBwqEQ+VwO
      t8dHMxelZjkophOololsd2PUshQ0Oz3uZ3uDNnWTU9NDpGI58vn8Z7xBdYrFWico08ocfMYb
      NJ/PEw3tM3ziFI1ChkK1wsDoBFqt+op6g8p43B3+RhAV1GqOUKqEy66ws7ZITvdyaqQb3QBF
      EZBEaJsiNlFARqCNgO1wT+HnlkMfBFnaiHP14ulDGtQFahlBsSM5nJitFs2mgcul4LJBqWni
      VCTsiNQ1DbtN6eiDjjE+FIRjUINeungeSRSQRBFBgHAowsjYGJIII+NTyGqeVG6h6VYAACAA
      SURBVEWnUa3S5etGQKBdzZIoW7x57gyi8GxvUEmUEESBR0+uLCuo7fbjeoJYMsPwUD+WaWJ9
      pqjdrkjU6i1U3UAUhENa9KjuyjeDqbW4f3+Zrc11kplCxxbe0CnnD1h8GEZvlCnV24yOBrjz
      yS3qlp2ZYR8f37xFS7IzMxjgoxu30EXHc659LT65eROHbJLKtjs06Mc/ZujsO1CNc+PjBcZO
      TzAxO8nSxzfYyum8c2aYxfk7xJoaZ8YneXD3FvFCE7/z+EzTGuXc0QXBrVodxeNGAur1Oi6X
      i0a9gSJZxNJF+nr9oLfIllqcmBghl4rTsmyMDvWhtWrsR+IgiE95g6qtOqbkQFdbuJ02mi0T
      y9JxuVwchPbpGx3B0gXURommIdDl7cbSqpSbFt1eBy6Xm+RBGKd/AKcMss1Bu9nE5Xl59ujf
      2hv0a/6vEuArf8G+STXeM0bCVw9FQBA+HbMgCJ85ftKt47hgWdbLnwA/7WrQb4PXNOirg5fO
      Asmy/JlNuF8DoNVqfWHN8WscLY7syawWMkSSWbp7BhDMNkNDw1+bBjV1lWBwH8nZxYmx4SfW
      6K16GUNy43Z88aWUsmnkrh4833DzO8uyKBSL9AQCnz1J/vBcqVSiu7v7G7X5PDD1NstLy9Sb
      bWYvvEFwe4daOd/ZFDsSpKWbXH77HaR2gXsrW/j6Rzg54Obe2jaB/nGmB1zcfbhFYGCMC2em
      nmssD5fnqdTanJi9RC25RzJX5s233ye5u0Km2OTy9Xfwyjq3bi8gu/1ce2OaOwtL2DwB3jo3
      xfzCPRS3n2uXLxwjDVo9Om/Q9H6UodmzZPY2KbXalAsFqi0dGyo7e0FM0UGtkCQcjdMV6GF/
      e4NCrU2g24dl6rh9vZTjOwi+oSe8QYvpMBU8pMJbJBIpCqUi5Vobo1UhehCj1jKgXUdwekhF
      90jlKvhdsLK5TzadIp9Lg+KhkosTjqXx+TxsbayRzhWxy3Dr9jy+nj7yyRixVBanTeKTW3fo
      8vdiGiqypbO5s4tuKdRKaeKxBA3Nwud1f+G9+NZyaAv6h0eRGmlKUj+XZk+SSiY4deYckxPj
      VNNhTHc/0Y2HnL/+AQfbq8Qyed5+/0P2Nx6SyGZ454PvsLvx8Lm9QfsHR7DTIlEoUcjV+M4H
      l7g7N09Nd/DBWye4t5qEXBjv2asIqT2CmSJTs5epxYOUqnn6py6h5iM4e4aPkQa1HYM3qGXD
      riicmjlDq1xEECUkUWB/P0ghX8Dl7aaZCVM1neQTB7RNE0mxkY3tcVBU8dqe7Q2qWSJTAy4c
      vSfQGhUK5SrTp85QL2eBzi4zqXwTq5Enlc7h7BlDkkTOzs6Qi0fYj6Tw23V2wgkUl48Bn422
      6D70BvUhyxLVQoqqYXvsDZrP5wmGopyZPU8+eUC+Uuf02bPUCi9nt3lBkti6P0/a6ObsiA+t
      kUWz9eJSRKJ7G+TqOooIhiEgyx0aVDU71KeEgIqAIgoIPD8NWkgdsBtN43LKHRpUcoJaRZBt
      SA4HVrtNq2XidCo4bVBpmzhsEjZBpK5/SoMep/jwiGnQjhr0rcsXkISOM4EgCIT2wwyPdmjQ
      4fET2NQ8qapJu1En0NuHKAg0qhX8Q5NMD7jJVtvP9AYVRBFBEBAe+XJaJpraQtMPPTwlBV1r
      4/D48TgkRFF4/B0EEcvUsRQXvV2uT88DpqGjtepkKk36/T4sy8IyDPRDNwObBNV6A80wEQTx
      8XW9DLTLSe6uRzAaJQrVNkv31rly5TztWoGDTAkBA1XVGZ/o49ZHn9DAyexYgB99/Amq4mR2
      uJcffvQJhuR6zrWvSjAYRRIFmi0J0Szw8Y9+wMj5DxBqcT764RwTZ6eYPD/FvR/9mK2cyXuz
      Yyzcukm8qXNucpr7858QK7SOVQ3aKGWPriSyVa+juD9HgzY6NGg8XaKvpxv0NplykxMTo+RS
      sQ4NOtiHZepEwxFsXj/D/T1PtPuIBjXUFg5FQBMcGGqTWHQfRAdjk5NIlo6o2KkXs5SaBmOD
      AdqmjKW3cbud1OstRFMlnikxMTGCphnIogWSnVoxjSm7MZtlsLnw+bppVnKoOHA7ZFxOO9FI
      hL7hicP23NTrddzuL14C/cRJMH6K8VOrBq1Uyni8Pl7F/e5e06CvDl46C6Tr+rGoQR0OJ7qm
      Hnm/XweapqGqr+bY/rLhyMRw1UKWYOSAtm5Rq5Zxe75+UTyAZaiEogn8n/MFqhUzFJoGHqed
      dCyEKXueKpx/qi3LYmdzDcnhfaY3aKFQ/ELbkuP0BrWMNvfuLhIKH9AzMEh0d4NYvkqfz8XC
      wjyhgxTDI8O0ylnu3luhVNdwS20Wlh5QbRqHxytUGsZzFsVbPFxaYGdvn+7+ESJbK2xu79DV
      O0J46z5b2/t09w9hE9rcuT1PIldmMOBibn6RVL7CgN/F/Pxdkrkyw4MDx0aDmmrj6CZANhJj
      cGaGQmiXUrtFKV+k1tKwHe4Ubwg2aoUU0VgCrz9AaGeLUq2N39eFIEBkf5dkrszYyNAT7efi
      UWKFOsP9frZWFjC6Rqhnoxwks/i7XGxubZPNF/F5XZSrLdr1IuVKlb1QhMGBfg7CYcqNNj6n
      xOb2Dqqqsry8gtPbTatRw20TSBRq1EtZoskcdkVEMjW29kIUylX8Pjc7W1tk8xUCvYGvxSp8
      2wmg1/OECjpjXo2a5GdooJ90IozbqtH0nmTM1SBZV0gHtzh37V3iuxskskWuvfMe4a11Urkc
      1959n/3tNUbHn0cNWmcvWOHtq6e5v7pBrWbw/rtvsnT3LnXDxXtvTXJ/LYWVj9B19i2kzD77
      2RJTsxepJ8IUawX6p95ELx7gOEY1qMURskCP1KANbDgUO6dnZlBrFQRJQhRFotEw5XJnP9tm
      NkrNtJNPxmibJu1aAVXy4j1MZD3pDSrgkKGQy+DpGQA62We1GCdZrGPv6qXHrVCu1ahU69RK
      eWzensfeoLIsEYsesBUMMTN7jpGRkcfeoIVi4VCfVCUcjnH61BTFYhGtWcM/NI6MRiISon9y
      BjvGS/cGNZGwGkUShSaKJOJ0dLLJXcOnaCU22A3HDl84ApLUoUE1s0N9ighoL4wGddPt1Xiw
      toNmtBEFGUFygF5HkBVExYapqqhtE4ddxq5ATbWwyRIKIi1dx6bIyJKEfoxqUFGSjl4NevHC
      7KeBqQDR8AH9g4NIAgwMj2HTS2TrFrraprevv0O1NdtoreoXeoOOjvSxshZioMcHRpN0oUVP
      txvL6nC9AgIIAu12i0Kx+Ph75XQUwdOHU5FwOxTypSqNZhvTNFBVDUPXKRaLGIaFv6cX+TMR
      tUBH1KUoEtVKhXKl9tLvoWUatDUdQ1NR1RYPlu+ys7NLulBFliUMyc3UWC9jE33M37hFU3Rx
      dizAJzdvodtcnB3u46Mbt7Bk93MGfwKSLNOsNzh79i0kytz8+CNGZt9DaqS48ckik2cmmZid
      5v4nN9grWrxzdpSl+TukVIOzk1M8XLxNsqTSfYxq0GZu/+jUoO1GE9nlRKJjDehwOGg1W8iS
      RTpfwd/dBbpKodZmdHiAYjaFio2BXv/jWOFZ9KLabCDaXdSrZTxOOyoKzXIWS1LweLowLQsJ
      E1FWyGeSyHY3XT4futrGYbeRiCfwdPvp8rhJJ2J4AgMIWp26JuCSTeptA4+3C9EycbqcNJsN
      bJKEIcgYuooiCSTTGTLpAhevXOTrOF2+Lol8dfDSvUENw/ipVoMaWotQOIqvd4g+/9ejNl97
      g746eO0Negx4nQh7dfAUC7SzepeP79wjMDCCx/niJLuVXIqdUISWZlKtFPF6ur6RN2g+dUAL
      O87PKTor+RQ7+xFaqonDrFLQHLjtX0GD/hR4g4LF5sNl9oIxunt7WFteYHdvH7d/AKFd4vb8
      PbLlBgG3wO25RbKlOgGHxa35JQqVFsMDvS/kWgBW7t4iFI0jO30kguusb27i8A3gthnc/OQm
      4WSOsaEAd27eJpTIMtrfze3bdzhI5RkdGTrSohjL1Lh/5xMqoo8e9zP2CRZkJ5N9Dv7TD2+/
      0I5L6SInZmdpZuNkCnk2NjbYC8eolXKsra4SzxSJR4Ksra3S1HS21lbZDkYOtTcqzVqFXKX5
      VLvVfIGJmVmahTiVWp2GahLa3eTB2iZau87KygoPVjdoNsqsLK+wur6NYVm0Wi2C2xusrz0k
      XaiRTUZZW18jlnw5QrYXDa1eYD+exe5247TbuXjlbfp9NoqVOrsbm7z59vsY1Qxr99e58M4H
      UM1y5/4W1z/4kFYhzYtMw0WjMRSnl76Ag2SuwYcfvMP22kPS2yv0z77NqKPJ0vI6/acvMWxr
      sbi6wfDMZQKyRq5+1AlBgZNT4zRaKtm91acngE3Q+MGNe5yYHH/Wt781HqlBG9hx2OycnZ1F
      rVc6AjJRJBoOUa1UsDm9NDNhyrpC9iBCy7QQZTuD/YEv9wa17HRKAiwkSaaeipGrNnD6B+j3
      2ilWqnT1jOJ36NTaOqVSlbYO586/QT4VJpWrcP7cFNXCy2dzXgR0rYXsCnCyT2F+LUQ2EaVY
      1xAFC9O0kCURUQRdB0V+VCD/qTL0RZKPP/e3/y7npge5cWehQ4mKCpgammpgtyvYFYFGw0Cx
      SdhlgUbbQJElZFFEN46WBhVEGcdh8lPTPr9JnqmyuXvA+dmT7O0GX3DHHTXo5YvnH3cqIBCJ
      ROkfHEAUoX9oFIdRJtMQwNQZHBlBFgUs06DeaNJqNjEM85neoJfePI8kAGqVdNXE73Nhfi66
      EQSeSP50fEc76k1Da1PMF2n/hATsjq4BXEaZ+1sRBnwy+5EkhtHRXU2cGGPu5sfUDCczs+PM
      ffQxRdPB2zND/PCjj2nKDl7c4tbg/t07LK2s0dc/gUNu8slHP2Z4epbhmVk27vyY1YTG9Wun
      2F68w1pa5fob02wu3SFUqNPned6l4DeD3qywsPSQrbUHOAYnPxcEWxa5dIJsucn09NRXbjf6
      TdBuNpGdn6NBWy1k0SKTr+Lv9oLRoUFHhgYo5dKolkJ/rx9TaxGNpwCBweHRJ+IAtdVEsjuR
      hA4jows2aoU0guzA4/V0fCoxQRSxTAHB0hEVG5qqAyZOp5Nms4naqlMsZKgbPs6dHnlh1/0s
      vA6CXx28dBbIMIxj2Sn+m6KYTZIuNpiePoEivdz84Oud4l8dvPYGPQa8ToS9OjiyovhKLk0s
      W8Td1Y2EwfDwNyiKNzSi4Qi6oHDixERnrX+IZrWIrnjxfqYovlwuYxd0NLsfj/y0N2g2l6Wv
      t+8nbyliGWw+XEF1+HljeoSV+/dpNFXOXLxCMrhG05C58OZFtGqalfUgHn8/0wMuVrbD+AKD
      TPU7ub8ZoiswyMVzJ59rKNHgFrFii3evXGRjZZF8uc7Zy++S3LtPsdLmjavX8Skqt+4sIzm9
      XHtjivnFh8iuLq6cO8HCvQdIDi9vX7l4bDUbzUrhCNWg0TiDZ2YoRfYpH6pBq402NkEjuB9G
      s2Sq+SQH8STebj/B7U2K1RaB7i5MTcXm9aMV42iOwBPeoJVsjBoeEvubZDIZbJ4AzXqF3ME2
      wVST3l43zZpBrZQiHDnA5nRyd34Bh8eHqas4FZHN7V2qDRVBq7EfiVGuNgn4fa+eNyjg8XhI
      5woMDwwwMDSMWctSqteJxEv09PQw2N/L5soDzl9/l2Rwk0S2zPX33iOyvUmyUOSdd98ntLvJ
      6Pj4c12fw+0ll00xMtzD9k6S99+/zP2FOZp4ef/KFPdXE1i5AwLnryLnQuxmypw+f4lmMkq+
      lmfo5CXMchy7fwDnV8jXXxYUu/MYvEEF+2M1qNaoYQGCKBCLRanX6yh2F41slLImkolFaZkW
      ss1BORmhbHno9SjP9Aa1ZDszM2NkEwVKpfJnvEENKpUGCAKy1SSe+9QbtFwuE4lEmTp9Fr1W
      otRoMn7iJLSbr6Y3qCBit3UoPEGA1aV56rY+TvTacQWGGXBrrAeTmKaAKAqdzTEQOjXYh9Sn
      JApfyznuq2C32w8nkInwiPo0WgiijCArWLqOrlvYFAlFgpYOiiQiIaCZJvKhCtj8PFV3xDhy
      NeiF82eeUIPGY0l6enuRBOjpG8Rh1ci3RGRRYGRsDEUUaJaSxMsG48N9mKb1TG/Qz7/NbHYn
      lWIB3ejc4FQmh9/f1fHkMwzqjc7O7l6XnVQmS0MzOlssITzd2CuCjjfofYK72xxEQ2yHUzRK
      GRpKP3IjxnY4Q3+Pj4kTg8zfvIUqezk30ceNm7ewnF5mxwb45MYtBHvX1xLtfRk2Hy4RDAYJ
      xSrYxCo3P/6E8Tfex9bOcOPGPabPTjFx7iQPbt4gVBV5d3aM5YU75HQ4e2Ka9Xu3yVR1ul3H
      pwaFIwyC1VYL2eFABFrtNnabrbObuQj5cp0urxsMjUpDpb+vh2oxj4pMT3cXhtYinS2AINLX
      P/AEPaurbUxRwdRV7HYFVTWxLAOH3U4uk6GrJ4BlgK7WUU0Bp8MNRpOGauFy2HA47BRyWexu
      H4oEkmxDV9vYHI5Xzhv0NV48jsQb9Cdhi6SjxOui+FcHR+IN+hpPQpblbx0Ev8aLxZE9neVM
      kmi2gMvTjSwYjI2Ofe2dCg21wc5eGFFxcurkiSdos0Ylj6500fUllUX5VAJbdx9exzdbb1qW
      SSabY6C//7MnSWeyDAz0H7k3KJbO2v0lVEeAi6fGmJ9fQDXgjYsXWF95gGaJvP/hB7SLcZZW
      g3gCfZwa9HB/K0SXf5BTg07ubYToCgxw5cKZ5xpKeGedaKHJh9evsHjrI3TJwfSZN0jsPaBY
      aXPh7ffw21Q+vrmI5PTy7sWT3FpYQXZ28faFae4s3EdyeHnv+pVjpEHzR+cNmgnHGJ49Szmy
      R7HdopgrUKq1sAsaO7tB2pZMJRvnIJ7A2x1gd2OdXKVBb6AbBBF/Ty+l5D6Sb/AJb9BSJkoN
      Lwe7D0kkkmQLRYqVBlqjxEEsTrHaRjbaCA4PseAWyWyJbifcWwuSTsQoFrLoootiKkL4IInX
      62F99QGZbB6bIjI3fxdfTx+5xAGReBKnTebW3AJd/l7UdgPJUNnc3aOlQaWQIh5PUm3p+H1f
      vMR5Hjl0l89HKpunv9tOKFll0CuQz2WxDc4y1dUmVlVIB7d58/0PSe1tEMuWeO/DD4lsrRPP
      F/ngw+8Q3N5gbHLyuRgQl7ebbCbB6MgoS4t36e4bYXLQw06sznfePsXSgxhmNkLfm++g5PbZ
      TJaZvXiVZiJCrppndOYqZjmG3T90jDSo6xi8QQUHzkM1qN6sdTYpEAVi0QjNRgNRdlDPhCm0
      IBUOddSgkkQyukeqouFSeKY3qKA4OTXiwzt4EkttUKm3ODVzFrVZBkBtFIilyjSLKVLZHN2D
      kzhdTs6dP0s5dUAwFMdu1dkJJ3B39zHc40KTPI+9QcGiWc5TN+2PvUHL5TLhWILz59+gmk9R
      bqicPXeOVvUl7TYviNiUzo+2oZsIpk69bdA1fAryu+yE4p17TUf9KQhgHNKgAgIGdKwbX8BQ
      PruE+7m/9Xc4Nz3A7fmlDg0qSVi6gWGArEjIIqgGSGLHOlK3DtWqgoh5zDKZI1sCddSgZ/EA
      m1ubnXMIxGMJAn391JpJAn0D1IopCi0fDpvM8PQUiijQqJRQ3AEGfXWKdZVBXw9nuno+18Fn
      uFUAUyefy6EdqjAkxYnH46D//2fvvZ7kOtM0v99x6V1lZpks76vgARIgSKLJ7pntmZ2ZmBhF
      zEYoYkO6Wl3qT1rdSdoISTuSYlZazc5sN0nQwKO891lZ6b05efJYXWQRBJvoaTZRqEL34InI
      iKxMnPN9eXDOZ573eZ+3N0bE59B+WfQpyoSCAQLRPmIeH5WGenoeAVPXaNZrlJsaoYAPx3Gw
      jQ5NtZub4FMkTrI5DFvAJbzQl76Ra2gbGs+ePWX3OEd/TxBdU2kYDnFJwLEdLCXEzGiMhmuQ
      rz//Arc/zPWEj88+/wJfIMKNfi+/+uwLfP7Ia9Oga4uP2dvdI94/SOUkRdtoMzhxjVJylc8+
      T3Pp9if0utv80+efIbrcfPr+OPcffInk8nJvapovH3+JpHi5/MdOg34Lo9NBcrsR6S4BXC4X
      uq4jCQ6Vukow4APbpK7q9MajNKtlDOTuUsKxKRaLyB4/PaHv04em0cERFGzLQJEETEHBMXUO
      D3YJhGLEe3uRHAtBVui06rR0m1gkgGFLYBu43S46HQPBManUW8RiUSzLRhIcEGU6rTq25MYx
      VJDceL0+DK2BiYJbkXApCqVigWBPHGwTt9tNp9P5Zwtg/MFJMP6IcS5q0IugQbsGvP63suDd
      Oxr07cEbXwJZlnUhalCXy4VpGufe7o+BaZoYxtvZt39pODcxXC2fYS95QrPdoVmvEQz++KR4
      ANtos7mbpDce/d7ntUKaQssk7PeS2t/EVEJ4Xb/LG9RmY3UJ2Rd6pTdoPlfAH3i1vflFeoOC
      zRf/9R/IFWpE+/rYWHzKYSpHyO9icWmF9cWniJEhxHaBx0+XKdRa+FB5tLBKud4+fb9CqdZ+
      7aR4xzb5h7/7j8Snr7D26AuO0zncgR52Vp+yvb1HIJ7A7ajc//IhyWyRRNTLVw+ekMqVGOjx
      8vWDR6SyJYaHBi9wlrbPjwVqlOuMz89h10sUa1W2trbYPTymVSuxsb5OKlcidbjL+vo6mm6w
      sbbK1u5hN5nGcTjYP6TeqP/gvK16jWwuj2MbZFNHlFs6xwe7LK+sobWbLC4ts7K6Tlttki9W
      KeVSZDJZ0vkSttlha2ODrb0jOq0aK6urpFIpnj1/TipbJJ1Jg97kKFPkaG+bta09VLVFu1Zk
      aWWN1Y1tjE6b9bVVVle3eOPJlEaTYlXHH46AmidVaKC4XXiDPdy9+wH+UA8jvQH2tg55/949
      rEaRpe1jPv7ZPTrVAku7R9z72T20euG1+3q4tYbXH8KwoVAsIbt9hFw6DTPAzz66yubaPsnV
      dWY++JgBuc3D1V0uv3cXv6WxsbvJ1PW7hF0G1fbFzYStzPb5q0E1sUuDzs7NYbVVLNsGQSB9
      kqKjaQiSQquQpNK2yRwdotkO7XoBxxvFd8oXf18NKuBTBPL5PKF41xvUtm3MRo58tY0/2k9v
      yEtDVWmpGmqjhifU9QYN+904QDadZvcoxeUrVxke/s4btF6vg6VTbarki1XmZyap1+uYnTa9
      Q2N4FYfM8RGDk5fwybxxb1CUEP/m3/wNcanG8kGeYDTBZNzF0s4Jjdwh7vg4stDloUThtB4v
      XSWogNB9fxbDrdHkyyer1Ms5jlNp/vJv/pYr04M8frrQra4jSji2jW2DJIldVarNqUJVwHJO
      Vakv1Q6+CBi6dv5q0KuXZ7+nBs1lcoQjEUQBwtE4PlGjqiv4vR4mpqdQRAHDFjBald/uDToy
      wPLaAf3RIFhtynWdgK97cwvfvkSRRr1CrlB6cVyzlEHwhHHLImG/h+OTNLWGim3p1BotTF0j
      ncliWQ6hcATpFSFLj89DLpOmXP3h7HTW0NU6jx89ZDNZZXZmDrlTYHnnhOH+KDvJAtfnutdk
      fGqQR19+he2OcG2in/tffoUYiHBtPMEX979C9r0mDSr7+bf/9r/l0vw8I0NRFh4/4vnSKoMT
      13GbJe5/+ZyZy5OMXZ1j9av7JNsK966Ms/j4ARVb4vLUNOvPHlBscaFq0PDI5fNTg5q6jujq
      VuXTdR1FUTAMA0mAequNz+cF20TVTCKREGqjjolEKOB7sVd4Fb1oGjqi7KKjtXErMhYSersB
      oozL7cFxHEQcBEmi1aghym68Xi+WaaAoMrVqFbfXj8ftol6r4PGFwNLRbVBEB920cbs9CDgv
      qFtZFLFP64phm5SqDdKpLDfev/HOG/QPDOfiDfrHrAa1TZ3j4xSR3gThwI/z+3znDfr24J03
      6AXgXSDs7cEr4wBf/MP/ydD1P2F68HXK6HwflewJx6UqHm8Ql2gzOjr2o9WgjuNwcrCFKzZG
      X/j7I2c1lyJZqOHxBRmJCFSlARLhf35d6dgG9YZOOPzbKzm+/XBYevoQVZe49t4Nktur1HSJ
      j27fpJE/4qvFXQYSw0wPhXi8uIU7EObGRJxHK3v4Q1E+un39zHry+OtfY4lexmeuUDhco1Jv
      MXHtLiMRkV999gBcXn7x8Q3uf/kIW/Lwyd2rfP3NMwTFy6c/+/CVe6vzQKdR/uEmOLe7wJOF
      VfaztTNtrFGqM3n5MkKzS4Our6+zuXv0whv0KF3gaG+r6w3a0VldWmRta/eFN6hbkam2tB+c
      t1WrMz53GUEtUVc7dMyuN+jC4iqddoOnz56zsLhMs1nh6ZMFFpdXMW2bZqvF1toya6vLnOSr
      ZI73WV1b4fA4d6a/+01BbxQ4zFQQFRlZkpm7chPJ7uqTKqUitiDTE42wt7bN+5/8HK9e45uV
      fT79xc9xmhU6Z9iXcqmKKLsJB2UqTYdP/+RTDjaWSW8uMf7+J8xEbB4+WWfs2gdMBR0eLW8y
      ce0DEn6RQusse/L7wRXo+f4D4Fgd/pf/+J8ZG4yROk7+tuN+El6oQSUfPndXDWp3Wt0osSCQ
      Th1j6B1sZJr5QwpNk5O9fdqn3qCRkO+FxOxV3qCa4MMnA9iYpoNWylBqaQTjCQYifurNFrG+
      EeJ+gZZu0WyoWMhcuXqNWvGYUq3N1StTtF9hwPs2wrZNArEBro338HjtAEn6bvs9eul9/uqX
      n3C0tUTH4iW9vfBdxZwzxF/8zd9y6+o0Dx89+e78joPjdNWnogi23TU/EASwTz/v0qBn2pUf
      B9tg4ckTqq3Oby6BBP70l/+Kg/VnZ+6K8NvUoLlsnlC4h5ZWIBSJIdUKVI0eIuEAPcP9uEUB
      2+iQzRUotb2M9ga73qCnatCuN+hlQgq0crtgtCirFj6v64cX97d6g4pYRpvU8Qkd62IKtv2+
      cIf6CVjbPFmtMHHlPRaePODg4JDBsXkUvcLecRZHCTN/aYhHn3+OJxji591O7wAAIABJREFU
      o9kYn332Of5AhLPLR7NYePyIVkdnaHSedn6PLz77nPGrdxmKiPzjZ58jKD7+9N4lPr//EFt2
      8/O7s3z59QMEl5dfBM7OpfRHQ1S4decO1cLJqzfBpt7GQMHrOjupkGkYiIqCSLdOrizLmKaJ
      KDg01U634JtjoXZMwqEg7VYDy5EI+L04tkm11gAgGAqjyNL3zysriELXQMtGptNuIIgKbrer
      O9rQDbY5jgDYiKKEZdmA84KObdartBplGlaIS1OJV/6Gs8K7TfDbgz9aNejvi0a1RKmuMTry
      4x3rfnJb79Sgbw3eeYNeAN4Fwt4enFtGWDV3wkm5gcvjwyU5jAyP/mga1DY77O4eYCExMzvD
      y67trVoRUwkTfimkXqvVUBwNwx0n5DJ/4A2ayWZIDCT+8JYitsHy825S/K25URYWFlBVjemr
      10nv7NDS2ly98zFiK8fS1hHeYA8z/T6W99L4g1Fm+r0s7p7gC0T54Nbl1+rK3uYKqYrGzz+6
      w+Ljr2m0NKZufkxm+ynNlsHl2x8TdWl8/vUiotvLxzen+ObJGpLbx93rUzx4sozo8vGzjz+4
      sKR4rXGO3qDFVIbE/Bz11BFNXadarpDKFAh5RPb2DyjVVAqpfQqlCj6vi6XlDTK5AgMDfQii
      RE+0h0Imia+nH/dLT0CjeEJLCLCx8JBapYhOkEoxS6uYZD/XJhZVyGfbGO0Sh/u7tB2FlcXn
      eAJhquUiiqOzvntEOpPH0SrsH+c5SedIJPreQm9QkVg82vUGTSTo641yfHTE0NgMCm2SJzmm
      ZmbZWVnnvU/uUTjc4rDY5Bef3ONkZ4fjWpVf3PsZyb1tEqOjryUEi0R7KRWyDA6G2durc+/n
      d1n+5r+ge4f49KN5Fp/uoeXSjH/4Mf7aAU+O6ty+/QFWLsVRrcDs1Y8QmjmEYBz/Ge41fxQc
      i2y2K98+dzWov3cIr7urBvW5RGrVGo4gUq9XicfjmIZOIZvBRMTWOuiOA47FyuIC/eNzhDzS
      K71Bw7E+5i9NoTVUHMd54Q3qdUk4jkO1WkWWHJqq88Ib1HEccuU6V65cJiQLdESZqelZQl7l
      LfUGfUnNael8cf8B79/7OT1+heGJOW5fGSN5UsTlFtA6FqYlEJShbTqYgoNfFGhbzmnt5NeD
      KH5767iw0bD1GoKvHzptjGYDORAgFHZRq2vU2wKJkEJT01GxiXq9tNoaHcPAc0GOEOBgtcvn
      twRyeQPMTYzjBY70FgJdg1XHMREEEa/Hg2FaSKJAIDaAr5VECfSgCAKt4glNS6GYTRPwTXXV
      oMFulFpS3CiS2BXJCRJut4wsuwlE4+zvbNIzP4zbpdDUHERJweOSsXSB40wBt9vNQDTI+vo6
      kuymT3Ejivyz+bwXCdvQWFxaptJQOcmGUGSZtaUFxsbHODo8AlHm2o1elEEfzxee0DsyzWjc
      x7OnD0mMzzAS9/L08QMSYzOvPbttLD+jWqlykCozPtTDw2fbvPfBXfKHGzxdT/Pe7ffxSKM8
      f/wEOZLgxuwoz54+wxtLMDM9zPPnz3GF+gm4L8A4TZAYSAxSzRy82wRfBN5tgt8enIs14stR
      ynfoDgpv6yzzLw1v/AH4bq34Hb4NhJ1XgWTLNBFE6UezTm8agiD85EHBtgw6hoPX46LVqNGx
      BHrCIQTBoVZvEA6FsE2dQrGM5PIS6wlSKZUIhKMoskilVMQfjuJ+zbW349i02x18Pi+tepWG
      qhHuiSFjUFcNopEwggCNWgXB5SPgdVOvlpHcfvxeF/Vq5fT9xQ4E52aNmN7eYCebJ5VMU2vV
      icfiPzrgZGoN1jZ2SCaPiPYPorx0I1cyB1Qt7/dKJP0mcskDTJf/945sO7bF5vYOvfH4yx+y
      vrVNbzxOtVr9SQnyP9ka0TZYfPqEw0KNRETm68erqKUUuieG00jzv/79Z3xw6xrpvXUOSm38
      Xg/Fgw0yTYPNzW1o5sk0dLY2t5maGPv9238JO+vLLGztMTMxzjf3v8AXDOH1+fj6/peYzSJV
      gvg6WR6spzna3iTktVney7G3vUXUB4vbaQ53txgZn7wwNWi7Vjy/TbBpwOzly6SWFmjpHTbW
      12nrNpcmExwep8EVwGkVEVxexsZGWF3bAVHigzu3kNwBhgbiHB4en+aQfnfBTLODYdl8df/X
      eCQRwxtDtG0iPjAcGbVjMRL145gdHj98DqLE3Hgfj3fKiFqFgf4ooidOp5rGdmBgdJKdzTU8
      Lhcj45PsbO/QE+tDqxYolMrdz3Z2iER7qZayqJU8uYYGgoJktZAVL5ol8t71S2d/EUWFG7du
      8mx9D9nlo9OqUmgJjHtENlZyLyQcoqKgt4qk0jbtlsovPrnDw8/vs19p8stP7/DVF/cxgNdJ
      Rpy9coOK+ggAt0fhJJXs1leIDHHjzihf3t/DkVrc+PAjWiv3ebhT4JO7d0g9e8TmSYrL1z6m
      uPOciqrTHzznWcCxOE6miA0Mnr83aGBgFN+pN2jALVMpl3EEiXqtQv/AAEanQz59gilIYOhd
      GhRQXG68Lgm1Y77SG7SnN8Gl6WESY3OEfApIbubmL+H3dKd6XavTaJlIArQ7BqOTMyQGE1y5
      egW0KqVKC5dLptFUSYxMMDk6gOQNMTI6Sl/ET7VexzZ1LMnLyMgog31de5Zyq8PNa9dQbAPc
      fi5fuYL3HLY8zXKG2Mhl7l6fZGXhGaVGi+2tLVK5Cj39Y3x67x5mvYhbEGjqFrpgExRFWrqF
      5dhnOPJZ3Hj/Hvc+us3e/iF0WnTqVZRwiJ6om3JZpdoSGOlxUWtqNB2LXr+fRlOlretnqjf7
      feDxerHVc5wB3P4Qlycn8AKHWhMB8Hg9CIKBIAj4fb6uVaIkEu4bot46QAn04BIE1FqJw1QW
      yxbxKhI+93dqUMXlwZK7NKqoyLglAcfrRW/X2Vhfw+ULobgllECMvngeQfYS8Pvp2BK2xwsI
      ePwRRoZAtwVikSCq1kFx2diyhGR3yJW6uREutxdFkXBhkM6X8Xq8RLwySysrePxhXJJ9enHf
      TPVz29B4trBIpaHSGnwPt7nNVlrkw4/v4XPJ7B9OMdzfQyl3zOJ+itjoNFOJME+fPmBk6jIj
      cQ9PHn/DyNSl16ZB1xYfU6vU2Evm0MoZqi2d9z78hMrJDs/Ws9z+4DZuaYz0o8fI8WGuz47y
      7MlTAv0jXRr06TPcPYME3RdAkAgSvX19VNPnQINeFPb2dhkbn0R+w0Wvfwr+4CQYf8R44w+A
      YRjv4gC/gXdxgLcHb3wJ5DjOD8yPvrVFOS8a9BW9Qm02ERTPK6wRz6H1V1yTH4tyIYfasehP
      DNCoFFA1i76BflrVEqboIh6NYJs6uVweye2jLxbpFguM9uKSRUqFHIFIHM8ZrL0b1QrecA/t
      WplaU6Un3oeCQbWp0xvrQRCgVi4iugME/R6q5QKyJ0jA56ZaLiJ5ggR9b2a5+GNxbuuDzO4W
      SxubPFtYZu/w8FQk170RTNPq3hS2jWVZOA7Y9vfzCFrVPJ99+fgH583ur7O4dQQ4LD74rxwV
      VWzbwrLsrpf/i3M6L162ZbK5vY3jON/rR/e9ycb6BpZtv7BltL89zrapVqvfnde2cXCwrdP2
      3vRFdHSWFldfet/NrLOtDuVKg9TWEkf5BrnDbTKVbmrn/upz0pUGX3/zkP2155yUG3zz4NFr
      99VQq/yn/+3/oNyBpcXF0z5ZfP31Q4rJTTZTJVr5fRa2T3j8zdfkU7us7Wd58OABpfQBq7tp
      nj78Bt26uBV4u146v02wZcL0/ByplSU0o8Pe3j5qx2R2fICTTB5LdGOrFWSPn6HBfja3D0EQ
      uHXrOiIORydFoqEfjha2I2IabcxOCwcZw7JJHx9RzBcZnZ5ifWsfjyQwNT1OtWEi6yUcT5Rq
      vYGmqaSTeWpqh5HeIPlam2gkxPHxMZF4P7VKnvnRPlZSTbTsPv6+URR0JL3OeqqKYJvMTQyy
      nypitDVufXj7tajF3wnTRFQU9vd3CYZvIbkEDg72CPTcRRF1jnI1Zt7z0dLctPMlDnUNra3x
      6b3bPMnnOaq1+NN77/NNMY/F603/KysbXLnSrTPmdsskjw5wLAMpnODyrWG+/uoAQVK5eucD
      Wmtf82S/xL3b75FefMp2Js3spbuU9haptnX6zjst0jY5OkwSHxw5fzVoODGG1+VmemYGn0ui
      Ui5j2g6NRo2BgT46bZVCNovuCGCYGA4UkluUmh3Sp9aIv6kG7Q262To4oXdgAGyDUrmOYzZo
      aDYDQ6OM9McwrO9mk0AkytDQEG5Ho9kxadWb5OsqVy5dYnAwQSKRIHFKc347PoVi/VyZnTz9
      S2BkfJJYxE+lXGHq0hXikTef4WUic/ejD7k6GmE/3+LOBx9xeTRGMlMgMTbLhzcmOUwVCMUH
      +ejDD7CaZbyiQKNjogs2IUmk0TGxHPv11KBGg3Shwt7+LkfJIy5fv8PdOzc5TB6D1qJdraJE
      wvTEPJRKLSoqjEVdVJttGo5FXyBAvdGi3dHxKRchhhMJ9/SAdo4zgNsfYm5sFC9gnNKgXq8X
      UeiqQf0+H52OgSRLhPsGabaPkFxhFAH6xi7RNwZ7u3uE/R7A80IN6vJ4CfcNkltYYWKmn7It
      0RYFJLcft6IgiTYKbiSPl0xqF0PvMDsk4vV4u0augC/gYyzRx8raGgODw3hdAqlsEckx2d5L
      4gkO4HV1HQ28Xi+S4sYlSTgeL+FQgL3NNVq1JiOvV3jxd0LAYnt9nY7j4vrVMFtrK+goXJ4J
      sLTwDCQXV6/1olXzrK6u0Ts6zXh/iIXFp4xMXWIo6uH54hNGp+ZfjwZVgvz1X/8VpZMknv5h
      TrZWqLR0bt35mGpmn+XdEjffu4FbHCH3/BlKfITLU8MsLS4Q6h9lciLB8tIi3tgw/guhQUUi
      PT3Ucsl3atDXha7W2Ts6wbBFrl2Z+1E31jsW6O3BG/cGfR3G448Vqqri8/kuuhvvwEv7oPMc
      kb4tknfWNKht6piCgkt6O1Sfvw2iKJ5NIMxxKJdKRGJxmtUibUuiP97TNexNpRBdfoYTfeSz
      3dKvfo9CLnNCMNqP//csGv7PoV4pUKw0iPUN4lNsssU6Q4P9iIJApZjDUfxEwwGqpTy27CMa
      DlAuZBHcQXpCF2tP+QM16N//h3/P//NPX9ARA0wM959ZQ6nNNXZzBZKHKRpqk0g4DKdlG3Rd
      RzwtqqCbJpIoYZkGNt2bxTY1Vp89pCGGiAa/zwSld9fYShVIJVMEFY2CESSg2Ji2gygKpzXK
      LERRxLJMTMtBFEyqVRWXS8Y0DARJAqfbD+G0lu2bxOsUyn4ZrVKK//3v/pHp2RGeLe6glZMY
      nl6M4iEnDejtCVFJbXHSgN21FQStTEGX2VxbZWpy4sxynh8/fMjA4BBen5cHX94n4LE5yOlE
      5RoP17PkD7YIhlwsbmfI7G/j94msHxQ4OdxmYGQC5aIGLOsHznCQPMkQ659mZnL0VYf8ZNiW
      yOzleZILz9CMDgcHhzTVDpcmhzjJFdBtCVut4AmESAz0sn7K7d++fQtJ9jA/O8lh64dLKccW
      mL10idT6M3QLUBwyqSS5XImZS1Msru7hUwTGJ4fY3EjjcVlcvnmdfL7E3uYy4VgUU/DitMvI
      Xg8d3cu1KxNn+tvfBBzb5PnGMTcvdWXNHU0lFndzcnLCXJ8HtZpms1XHo6lc+sVNdpsnrGRa
      /M2f3eZJNk0bOKtFmM/rYndni8T4OJIcYWr+Fl/c/4KMJjN380OU1COeLaaYv3MT5eQZz7cz
      XLt+i87hKqWWhi9yQctByf2bNKjDf/8//I/8xac3+L//0z+eaVvfqkGjI1N4XW5mZmbwu2SK
      hTwd3aBerzE0mKDVqJNLZ+hYDpgmxiv2D6/yBo0OTXW9Qa022WINQ63T1B0GhkcZ7othmA7D
      YxMMxoMYp1sdfyjKzOwlMBs4kofZ6XHkN+YFcbZoV3PUmk3WN7fIVk0+/dkdfG4XvbFefOFe
      fnbvIwS9htsvUa21aXVgMCBSaum0sTk75t1m5vJNPvrwDsmDJJbTRldLSK4eeuIhivkKxarO
      xGiYSrlGoW4zPhCkWq1T0zUCFxCJfxm/MQM4PPnyn1jZTfPpX/7tmTbkDUa4PD6GF9DbjS79
      6PehCAZCxyYYCNDWNGRZJpoYoaXtIylhFEHA1Jps7h1TM1wkevwEXvIG9QYjXB4Yxy+DVlHx
      ICNLIpIvgFtRsD0SLscBl4IgKMiyH1kU8fk82Fb3Zvf5gth6m7WNbXTzD8OxzRcd4q//cojM
      cZLYYJyd1QVMOcK1kRitSp5na2v0jswxPRJj8fkS/ZPzTAxEePb8KSMzl1/bFeI7CORPDinU
      VN6/fRetkubp8j7vvfc+PpeAa+EZTs8os3MTrC0+x+oZZn52jNWlBVw9w0S8F/cAWJ3mH68a
      9PfFSXKfUrlCbHiGoXjojbb1Tg369uCdGvQC8C4O8PbgQtSgb4oG/UPBWcVGqqU8bVsm0Rul
      VsqjWnJXwuE4ZE6OCUT7CXpdZNPH+Hv6CXhdZE6ShGIJAt7XM0h3bIt6o0U4HKKjNshVWowM
      9tNRGxRqbYYT/QgCFHNpRG+YaMhPIZtC8UeJBL0Usmlkfw89wYuNh5ybNeLJ9gYH+RKpZIpm
      WyUUCOCc0qDttoYoyTiWSadzap1udF7UmTXadTZ39kgdHRGM9eN6yRqxnNmnannxyg6djo4s
      K1QqFZq5ffKal6DbptY0UCSHjm4gSQKLS8v09ESp12t4vR46moaDiOA4GIbRrWP7BhNpfro1
      4nfQGgUWN1Lo5SRtR2RnL41VP0FzRWmkNyjpLvY215CMGoWOm/2NVZx2mRp+ttdXmZgYe63t
      /t7WOhv7SSbHhvnq/leEvRZHRYPtjTWCUpuM5sKrZVhLt8nsbuCWDY5KBoe7mwQVk718m/T+
      JomRceSLcuuwOucphhOZnp/DLzsYRofUSYa19S20VoN8PsvW7gGbaytks2lajTIr6zssr65h
      OQ6KN8TluRledU86loVlOzx78oj08R7JTJV8Po/arFMqldDNNqVCnWq5SPpoi6NshUq5TL2p
      UijkqWSP2T06YXlljXRyl+2DY9bWNt9Oa8SXIAgC7VYdURRI5YporTqOKJHNZCgWm0xNTRDy
      iaSO68zMjRMLiGzk2lydHiUiSbxuHZzp+auE/W5ARVFijM/eoJlaQA73M3Vlnkoyzcl+gflr
      M0z0Kjw/qDI7PUnC42E3l2Nyapr+niA1TT+Ly/HT8EMa9M3hWzVo/JQGnZgYx+uSKBbyqO0O
      zWadwcEEjVqVXDaHZlpg2hhOV+/+/Nkik5euEXD/Fm/QaC/jE8MYarfmVDAUYmBoGLfS/Ym5
      XBbD0FHbNvHeOH2xCACleovpqUmCioQuyYyNjRPwvKXeoC/B7Y9y7+MP8Pv9DI9M8LNP7hIK
      eOmNx/H7FWoNlY7uEI26qFTVLg0alCg2O6hnSoN6sJwWWj2HHBnHaTdolYp4oj3Een3k83VK
      DZjs9VCqNanbJolQiGqtTrPdOX9j3N/AuT0A3mCE+fl5eqMhfD4/ggB+v/90LyB2adC2hiwr
      xBIjhN0i3mAQRYB2JY8huTlJHqEZ1vcqxSseHx5FxO/3gyDj87nw+/2E4kMUjrbQDAGfz41L
      URBkNwGfi6BH4ThTwO/3MzqUYGtzHcvtI+TxIUkCPv8fQPVIx+Fof5uOEmW8L0xyf4e2GGFy
      MMrU5Rvk99cYmrzE7LWblPbXSEzOc+PmLY43lxibufTaNOjG8jNazRYHqRLz08Msb2d579Z1
      5sZ72Ug2uDE/TO/0VZzCPv7BCebnr9DO7RMbnmRs6jJG6YjwwDg+18W5Blqd1js16EXgHQv0
      9uCNzz+KoiDLFzvNvW3Qdf1MtEDv8Pp443emcFoO82W02208Hs+50aB6R0OUXW+NRYogCK/0
      TP0xsHSNhmYRCfm79Q0yGfoGE5SzJ7QshdGhfixdZWf3AJcvwuToAEcH+/QOTeBzixzt7xEf
      6u5zXgeObVKpNYn2RChmj8mV6gyOTuJBI1NWmRgdQhAgd3KE6IvS2xMkc3yAK9RLLOwnmzpC
      DsSJRy52Jjw3b9Dj9VV28wWSB0mabZWgz4eNiIhNo9lCkhVsy6CltnG5XOiaiumALEkvvEEP
      9/fo6R/6nty5dLJD2fThES3aWgfHtjBtwHHQ2iqOIFFKH2O5A0iOiW5ayKKApnUwLRtdayPJ
      LhzLoK3pKLKErnfQOjqCY/J0YZF4vBfL6NAxTCRsHj9bIBbrpVat4PV6aLWaiJKCbZt02m0c
      QfpnadTX8QZdXljgpNJgdHCASnqPv/+Hh8zO9LKwlsal5WjIUdrZfTqeOEN9EfZXn+EE+1hZ
      eI5RzZ6+X2DyNdWguxtrrO8fMTU+xrOnC8zMzeHzyHz55SNiHoNkU8anpljPWWR2VlGkDqma
      wMH2Kn7Z4LBscrK7RmJ04kJp0HNbmziOxNzleQ6fP8UwOqSzeWqNJpcmh6lUqhydZHHaVULR
      OFgamwcZsAzee/8WsidANOSl3dZ+YKRq2xa24/D0yWN6/C6aShzRUAm4QfaGKVdqDEcD2IbG
      8voOiiQwOhhl6biNqOYZHR1ENVx06gW8HgV/NMHRwS4hn5u+4Qnq9QZaR6fdqFAqFugdHKdR
      b9Du6OQLedRqAU300GwcITsawXCcWkPl5vXXq8H1SogK129c59n6Ho6ls3ZY4PLEALInRLOU
      pCmIfHLVi2H4OTjcp5hxYxoGf/L+IKW9XY5bHf78/UFyB7uYvJ436Mzla5RbXW9Qn1dieekZ
      gwNDyJEEE5dHuP/5LilZZf7Dj2iupHl2UOXnH94hVcuxm88xM/8xJatGtW0wcN7eoN/ifGnQ
      rmqzf3IOzykN6lNkctks9UaLRqPOyPAQlWKBTDpLu6OD1aVBHQcGhkbp8QrUVP2V3qDhWB+j
      g730JsbwubveoKOjo/hOc04NvUmtrmI7YJgWieER4n19jE+MI+hNypUGlt3NCehLDJPoiyIo
      XuLxOCGfwkk6TavZxBQU4vE40XB36q5rJtMT4yjY4PYzMTGO+xz07Y1ShpaqsbG1xdbyc2JT
      73P3+iRHx3k8gSgfffghTrtKQBEptzpojk1MkSi3Ohj2WXqDmoxPX+fu7VukcnkctUojn8fT
      G6N3IEAmXaVQd5jt95Iv16laBkPhMOVylXq7TfAiKsS8hHNr3ReOcmV0BA+gtWoIQCAYQBYM
      WoZGOBSiparILhd9I+N09vcQZE+XBq2XupXPHRfDXgWv8p0a1O0JgCJBIIDklvFJAlIggNqs
      sLG+hj8Uxe0VUYI9DPaXsAQFvz+A4chYgQAgEAhFmXRLtDoW4VAAXTdwKTaOIuMWLXLlBm6X
      C0tW8LgUfIpDOl8mEAgQ8blYWVkhEImjiF2ddSD4Zta1tqHxfGGRZltHHRnjL/7sT8hemiU+
      2M/2yjLHNYXr1wfQG2UWnz1lbP46w/EAi0sLzF27SX/YzcLiAnNXbpyJN6jaVNlLFhDaZXbr
      HT64+zG13BEbqQa3bl5DEUfILy0QHp1hdjzB6tIi/eNzjI/2sba8RGx45oJp0D9iNejh4QHD
      I2Nvzcb3ZbxTg749OBc1qGEYb7KJPzi8iwO8PXjjw+Ornq92u33BThEO1VKeeku7wD78RDgO
      6ZNuMQ/HcUinTrAdh6PdLZZX19EMC7OjsrayzM7BMY5tsb+zSVMzcByb/Z0tGu2z0d/k0yfo
      NhTSSZaXlynX26j1MrsHx3z735s5PiBfrgOQTu5TrDYBh3Ryn0KlcSb9eB2c2/ogtbnO4sYm
      T5485+D4mFaridYxsC2DarWKadkYeodarYHjQFttdjfCp6gX0/zjZ1//4LzpnWWerO0BDk++
      +H/Zz7fQ1BaNpopj22jtNvVmC8e2MU0L0zBoqy02dvaRRIFGvYbWMXAch0a9Rrut8ujRY5pq
      uztzOTa6YWIYBqqqUioVsS2TdlulqbZxcFCbDZot9Vz0Q8WTPX71+UMsByone/zqs0foVodU
      scb01AQuWSSb3McdHWRksJ+tpScIgRiPHjxgc/ExQiDK44cPXruv7XqBX/9//4WqDrsHx0xP
      TxPyiTx8sozHKLFykKN2ssVR1WFz4Qmpgw2yLZGV50/IJbdJN2Bz6Qmaaf/uxt4UzpMGBYmZ
      +VmOFhcwjQ7Fco1a7ZjZiSFUtUk6V8TWGvTE44jo7CULOFaH6zeuIzo2qVyVgegr0hVFF4Jj
      YGgNFE8Q23FoNBqUcxliw2Ps7B8TcgkkRoaonXqDSqEBBFHEsQ0ajRb5g2P6Ih7auAkHvOid
      DqZpkTo+Yn60j41Uk1Z6l77xeSytjstS2cm3EUyNscE4mUoHo1Hnyu2bb9Qb1LE6bB9XmB3t
      xbF0NlMV5kb7cBCQTI0nDx9y7c49PP4AyaNdskkFyzL5NNFLYWeLdEvnXyV6yexJr02Drq7v
      cGV+GgCfR2Rx4Qn9fQnkcB/DMyMcfrlPRlaZ/uADWnaKxWSdn92ZJl3JsFcoMD17l7JRoqYZ
      eM7bG/RbXIQadOCUBh0ZHsKjSOSzGaq1Bs1Wk5HhQUr5PLlsHlXTwALTgcLxDjXN4uS3eIMm
      Il5Wt1P0DfSDrXN8nEZtVmhpNr39CeKREOYLb1AHjy9AT08PTrtKtlSlXqtTUXUmRkeIx6JE
      eiJEQoHTf91FrH+YqdHB078EBgaHCAU8NGp1RsbHCQW8b/wa1ktZNL3D1s4O21sbtNsaWzvb
      nJzkmb1xm+mRKPlSA8Ub4vad29CpE1RESk2NtuMQd8uUmhqG5bzeyGc0qNRUdvZ2OUoeMjQ2
      z/u3rpEtlLBbNer5HN5vadCTCvm6w9zAdzTocCRCqVylrmoEL1gNeq40aO/QYJcGVQMIAgSD
      QWQMVPOUBm2pyC43fcNj6If7IHmQBegbm6dvDI4OQz/wBvX4g3j4O7j3AAAfu0lEQVTjAxRL
      60QjUUTHjeFxYSthfF43pmXjRkDy+smnd9ENg55hkUAggOJxI4t1QpEwkyODrK2t0T84QtCr
      kMoWcUuwvZ8iEB7AK8jf9dntwSPJiP4g4VCA3e116tU37w0a7hvjT/vGyM9NE+8f4KoA+fkZ
      on0xdjfWMSQflyejdJoVVhcXGZu/zmDUx8rqKvNXbxIPKaysrDB39TVpUCXIn//rX1LNZ3HH
      +igc7nB03OH9Ox/QKJ6wm21w49oUsjBIcW0F39gsk8N9bK6tkJiYY2Qwztb6CvGRGbzv1KB/
      2PjWG9QWXVyem3rnDfoHhjfuDQqvZoL+JeOdN+jbgwvxBm21Wvh8vjNXg1q6iiF48ChvX/Dr
      ZQiCcCaBsHajwtZBhitX5pFsnVJdozcWwdLbLK+sIvt6uDo/yf72BpHEBNGgh93NdeIj0/QE
      zk6OnT855ChdYHRqnojbYvsoz5VLM4iCQPpoF9sTZbg/Sjq5h+2OMNwf4+RwB8EXZ7Cv58z6
      8VPwAzXog3/6v/gPf/efkQK9jAzEzqyho9Vl9gpFjvYOaXY0fC4Z61QNWi5XuuVOdY1KrYnH
      60Vt1jBsAZciY5saK0++oUqIeOj7m83U5hJb6RLJg0NCLpOiGUQ2G6gdE7ci0VZVmqqG2yWj
      tlqomoFbcSiWmsgSNGo1ZLcXwTYplatIsoIsvdl16Vl4gzqmxpePFrlxeQ4kke3NLY7TKcZG
      RskfbuOEhpkZG+B48zmab5DdpSd0GgXE2Bhrz58wMTV5Zh54i0srvH/7Nn6fi8+/+IrZ0SjL
      e2WiUoW1rE09uYbsEtgvGNSOthAki1RNoJjcIDY0huuCovW2VvlNFsjk64fP8XkUPJ6zpaYE
      QWZ6bg6/ImAZHcq1Flub23TaKpqmsrG1w8b6Kp12k2a1wOZBhs31ta7Jrezh0vw030roHdvG
      PF2uCaLM1OwcARddGTQOrWaTo60NqvUKz1e3OTnap1jKsrx6wPHeJi3dolyqsrLwnHanzfbu
      Pmuryxhmi52d1Jn+7jeFdj1PsVTm8aNvSBdbXLl2HfepW4Y7ECJ3tMX9rx+Ry7UZG+0jFpTZ
      LupMD8aJyApnGQIM+V08evg1Wwf7uJUIscEp9EaKfDLL+OwkU4MBlteyjE6OMjHgYeWgwPDI
      cFcUd5rDfREoHW//5gMgEoj08e/+3X/HV7/69Zk25tgGB7t7DM9efokGlcmmT6g3VFpqk/Gx
      UQq5DJlMjqbawrHgVdvndqvGYTINgG0bHO7tMTR9Ba8MmC0OUzk6rTqq4dA7kCAWDmJaDgOD
      g0RDXr6NvfiDPQwODiPaKqLiJdEfR/wD8QZ1+3uIxfu4fW2GbKHyve8E2cOdDz5AtlRCERf5
      Qp1622EiIpOutGg6Fme3ALLpG5rgzvs3yWWKmHYTtZpB8fUTT8TIpLKcFDXmZ3vJZQqkyyZz
      Iz0UCiWKbZWI5/XsYV4H4b6h36RBRf7qz+7x7/+n/5mf/fl/c6aN+Xvi9A8P4QHazRCCAKFw
      CFkwUKsqkXCERqOBpHhIjE9i7O6C5EYR6HqD7p/QNJWuN2iwh+lTGtQfjhPrG8YnQccJ4Bc8
      +NwylhjC63YjCgpeR8RRFGRZQbbCKJJEMOjHsbuhoFCoB0dvs7a+hW69WVvEs4LkDnJ9ZpDN
      dJ3bV+dZePIATdNJ5SrEA27WlhaYuHSL4b4wa8tLTF65yWA8wMrSEvPXbp1hAEjA1OosHTf4
      6O4HdGp5Vvdy3L55HZcsEKuvYA/PMz4+iLm5ij0yw+T4IDsbK4jDMwQ9FxcHcIWH/3jVoL8v
      ut6gNfrHZunvebOuEO/UoG8P3sUBLgDv4gBvDy5k+91qtd7FBn4izI5KsdJVVxbSSVY3d7Ft
      m/2tNTZ2j7rSDcdia22ZalPDsS02VpaoqzqOY7O5ukSt9fobT8cyyeWLAKi1EisbuziOQ7Na
      YG1r74UaNLm3RbpQBeBod4NsqQY4HO1ukCnWXrsfr4tz8wY9Xl/loFgmeXCIaui4JRELEUmw
      KRZLKO4uDVqu1vF6fbQaVXQLXIr8whs0ebCHP5r4Hs9fSnWT4hVHp1pt4PX5KBYLVJJrHFQF
      egIi1bqO6OhU6i3cishX33xDKBKl2ajh9/uolkvYggyOhdpsoFsObtebk7X9ZG9Q22BtdY18
      rUUiGqJY1wjaVQ5rJn2xfszSPmU7RGFvCe/AFOsLT2mVs0TG5ll++ph2OU14dJ7lZ4+ZmBh/
      re3+/s4me6kTxkeH+PLrR8yNBFk9rLK/e8Bkr4udooVHPea4E6S4u4Jjt6kJEY63V3HRpmSF
      yO+v0js0dnElkuzW+c0AgiAzNjmBTxGxjQ71ts7+3h66pmGaOls7e2xtbWKZHVq1AvupIns7
      25h21xt0bnoCUZRxyQK2ZdHRv59ks7K8hKVXOUqVKZXKSJJ0epPpVMtN2u027coJR/kWsqyg
      yDLlcpniySGlls7WxgbZ1AGZcouDvf230xpRVLhy5RKyKCC5PMQDEiuHZaaGEzTLxzzfzjAQ
      81Ovm/T3Rgh4RTItm8FokKAsk9UshqJBvC75leza74OpucsEPC5AxaX00JOYoZNbRQnH6R0b
      pZnJkz2uMT6VYDimsJJqMpropc/t4bBcZjDRTywcpN65wGQp6xyXQI5jkTlJMzIzj9vlZnCg
      H5cskc2coLZ1Olqb8bFRirks2WyBRquJY4MF2EabhcV1Lt24hVcR0bUm2dPp91uEemL09sWw
      Ti+ox+MlGI4gn44uqeMkpmWiaSaBQICAvxtQq7U0BgcG8CsSpiSTGOjH65LfzgfgJVidBt8s
      bPPLX/4pLqdDJDHJp7dnOUjmCQZlSpUmmg79PolCXUW1bfo8Mvm6im6dZVK8F9Oq0ygmcffO
      YzerVDIZ/P1x+gZDnCSLZKs2lwf9ZAoVyqbOaE+XBq212oQusERSRzfPbwlkmTb9oyP4XQqG
      YRAIBLBME69LpqF28Pn9OEaHjukwPDGF2aohurz0xaNotQLFpkG7WScQjuDxeImEurkBtmkg
      uvzIokMg4MO0RNxukWhvH8n9PUI9EQRHRnA0TFsgGInhETrUNRufx8Vgfy87uzso/jDRoA+3
      xwe2RSAYeGMRgZ+6BLINjcXlFTrtNrIngKHWOUmn8YajZA53aNpeLs2MEu/vJ7m7ydjsFcbH
      hjnY2mDq0nXGRoc52Fpnav4a/tfk3zeWn9Fq65iCh8mhKHvpOjevzdPjl0gWO1ybn8Af6aWV
      PySYGGd8bIxq5oDY0CTDI6PUc4dEEpPEwv4Li7yIkvyOBboIvGOB3h6cizeoolxsJcC3DYZh
      4PW++QSad/jdeON7gBfeoI6DZVldqqzV/N53v+sF3znAveq733WuTlvFsH547I9p1/nNNl/6
      7Aff/R7n/SnHCUK3wma+3KUP00e7rG0f4AACsLO7hyAIGFqTxw8fsLyxh2ObrC49p9rqgGOx
      tvScSlP7ie1/97JNnUw2jyAInBxu8/DhQwpVlUY5x/L6zos+He6sk8qVAdjfWn1BiR5sr3GS
      r8Br9uP1XufoDZpcXSZZq3O4s09L7+ASHAxHRBZsMtk8bq8Pq6OSL1bwBwI0qkU0S8DjUrA6
      TbZ2Dznc3SbcN4xb/u7GL6a2KJl+ZEulXG1gmx000wHbolYp4Yguavk0tjuArTVpagYeRaBS
      rdHuGDSqZRSPH0tXKVab+Dwumo061XoLGYPPv3pArLcPXW1QUzsomHx2/xt6Yr00GlX8Xi/5
      XBbZ7cM0OtQrZWzRhUv57YrSn+4NarKxtkGu2qQvAMsHFfqVOnndj1bY5dfPt3nv6jypvU1C
      I5eZHRtg9ck3xKausPj4Ia1SmvjUVRYfP2TyNdWgB7vb7B6fMDk2ysraNh/f+xi/2+GLrxeZ
      S3jYzBl4WkecGD0Ud5YxrRYtOc7x1jIuVMpOD/n9FfqGx/+F0KCizODICN5TGrSlO+zv7qJ3
      NBzHZH1ji42NdUTBolnJsZ+usr+9iWk7yJ4AIY+IhQu3LGCZBmr7+3rG5ZVV9Moxe3mVg71d
      jva36NgSGxvrQDdXYHMvST65RzmfYiNVYWttCSSHnZ0DVlY30Ws5jk5yrG5s0yieUOsI+Hw+
      PC4ZraOTS+5S0Rx8Ph9et4tSqcTB9gamqLC2usr25jq6LbK7s/NmLuJLNKjiDVHPHrK0myHq
      FzgqdJgY6MorgpEejrYW+dXn35DXbBI9QYKyQq5jMdgTxOtSzogGPdVS+SS+vP9rNja2USK9
      xMdGaGVypzToACMxmdWXaNCD0ikNGrrgEkmWcL40aKnw/7d3Zt+Nm+cZ/5EAAe77IlHLaJnR
      7Es8tseJ06Z3bW9y0d703+zpOT2nSZ06bmJX41m1UAslUeK+giS4Yu+FxuOJx3Vsa0Zy0nlu
      xAOdA4CCPnx4Hzzf722xfP3WCxs0jSyKVMolNN3CMDQur67SqlWo1lr01R6O7cLilA06v3yF
      bEyiM9AwtAltpfcn+w/H4iRiYWKJNLJHBEEmlYzjfcGetIwJ3U4XzTp9hEmm0kTiCdKpJG5r
      Sq/bQx3ruHFIpDJEwkFwi/gDfiS3Q6lSOY1h26eDwvfCRZkYNjOpJJIbXLKfmUzqXPLtQ6VG
      bP4aH91aZmsrx0SbsLe3R7nRxXJ5eP+DD3EZQ+KyQL03ZGybzHhFar0hmmm9weLPIJa+xP27
      N2j1x1hqh065QmA2w8xClGKhQaVrc2s+SKneoW3oLCcS1OstusMR4QtMg041/fwWxYfiKWay
      s8jAOBrF5YJoLIroMmgoQyKRKL1eF0Qv86tXsPN72IKM6IKJqnBYqgEy2ZCMJHhZDJymNr2B
      KIIkIkajiD6BkOBGjkZRey12cttE4hn8XhdiMMKl+S6a5cYXCBNxPNhEATfReIpgQKI/0ggG
      g3hNE6/HxpE9BD1umt0RflnCsBz8XomwT6DaVIhGo0T9Mtubm0SSsy/ZoNFY9K38DW1jypNn
      z9F0i7GwyEK0Sm3i5W8/voPgdnHn5jXSqRj6ZMjWxjNu3P+IdNjL1uYG9z74ObGAyPbGc+69
      /+CNsEENzeCw2CHgGrNTGPOLBx8wVOocN1Tu3cwikKW7t4V4/Q6LswkOdrZYvXGXuUyM6e4W
      sbU7+C5w9Z7sD//1pkHL5RKz2fnXcOo/Bb1Lg/509O49wAXo3XuAn47Obf6xLQtN0zAti8Fw
      8MPToI7zrQPJtiysF9AryzSx7T+/X8dxaNZKdAff1i3X+U46xtsiZ3w/OextPWV9/RFj3WJ/
      +xnr648ZTjXyuU22dg+xHQd9ovLl+jqbu4fYls7W86co6gTbMth+/pSOOn4j53JysM/UgnJh
      j/X1dVq9Ef12jY3cPpZz2tihsL9NsdbGcWwOd7coN5TTz3vblOqdC4+cnNsAqOztclip8Ozx
      U4rVGkq7iTqcYOpTyuUymmExHQ+oVOvYDvSVNv3B1xeq2yjxyWfrr+23drjFl7lTNujjz/6d
      o9aIfrdNo6XgWCZqv0e92cF+0YVen05Qewrb+0eIbmjUKvSHp7DeZr1Cv9/j97//jJbSZzKZ
      gG0ynmpMJhMUpYuiKFiGTq+n0FL6ODgorQatdvftX0xbozdy8eDB+/gEHWXk4sGD+/g9LlJz
      KwSMNof1AfXSMdkrt7l9bZXcky9JLq3x7PE6208eklha4/njh2c+16FS4+Ef11ENKNe7PHjw
      gFRY5PHGIfNhm+f7VZSTHD13gsruBoWDbabeFEc7G1QKO4zFOKX8JlPjAtmgnOMAcLkEEskk
      knhqg+qOSPG4gGHouN2wu5cnv7+P5HEz7DYotYcUCweYtoNt6VSVCbOJ0/yPaegMRqeDwyXI
      eNw22qiPHDqlWBiGSaeUp9ntsXNUYdRtovS7VBsdGuUjdJdMIp5A9oDtuNnb3aF0tI8l+nG7
      BcKhEOGgn5PiCWgq+VKDpw+/YGzYKEqHcbdOsaHSrJXoVIsoE4dWpXJma/HPynYhuDQ+/c/f
      0OgbeFwTPv3ktzRVA7V1wpP9GrNxP+FonNL+Bv/12Re0NYdMJEBQEGlqFjORAF7PGdOgjsP2
      7jE31pYACAc8fP7H37Ozk0cMx4nPzTFutGlWVRaWUmTjIrnqmLl0nKQkU+x2yaSTxEOBC02D
      WlP1HG1QbAaDASvXbiBLMulkHI8oUCtXMC2wLJ2V1VXa9Qr1Rod+r4dju7GATuWYsW68ZINa
      ps5w9PXskI372dgrkcmkwJpSqjTxCDZTwyGRTBL0eV95NHIQRA+yV2baa6CMTlsxDXWTVCJG
      KBRE9sov1wO8ygadz3yFiXGRTCXxyh5G4wmpdArvOaQadUNnfnmN1WyUVn/A3OJVVucStFtN
      QpllPn5vleNyG8N2c/dn7+Eyxi9t0JFtM+PzUOsO0cwzpkHNEWNNZy+f56RYIBTLcu/mVZSh
      hjVQ6JTLhGbTpzboUYNq1+L2fJByo0PH0FhKJKg3WnQHowtNg/aVzvmlQR3LJpGdxe8RsSyL
      QCCAbVn4fR566ohAMISljZmaDourl7HGffCcDpRgNMncTBq/308qEUf0SIQCp2Q127IIJmcY
      D/pk0wlcUgB7omI6LmLJDLJHxCt5kP1BOo0KQ80knZnBjUMoGKLTOV2Mc2Vlgb39PIg+JHTU
      qY3H0am3FILRBEGfTDAYwLJM/H4/bo8XUYBEKsXJ4QGtTp/5S/Pf647yY9OgbtGDUisyEWNc
      X56j2ygyFiJcW5mjeLDL2BXk+uV5vJLIbi7H5Rt3WVq6ROlgl7Wb91hYXKB0uMuVm3fxnQVK
      K0gsLy+xsLhIdnYWa6xw3Bhy/95tklEv5a7JrbVFfOEkeq9CdG6VhflFxq0iqcU1ZrPzTJQy
      8bnLxML+C0uD+kKxr10gx3HeyjJFwzD+ql2gr9igbsnP2uqld2zQvzC9HACj0eiCHY7/PxqN
      RgQCb5c88U7fTy/nwdMLckpVMy0bUZIJ+N4cPskyDaaajkeSmUzGhEOhH8QGtS0TB/drDahf
      3a/bmqC5/ATk70YbOo6NZTmI4sWguR3HIRw+G3/IcRxKR3uopsSNtWXKR3uohocbV1fANslt
      bhCfW2U2HiS3uUFsboWZeIDtjeekFteYSZzt+PpkRK3T59J8ll6rymFF4d6dm/RbFU4aKndu
      XUdwOeR3thDDGZbmUuznNvDG5licTZDPbSJFZ7k0lz7XRyDHcei1KphynGRI/mYNYPHJv/0r
      n/7uN3y+2+bj+zff2IFLuW3ahsnJ/gFDQ8dt6ei2gAeLk1IZbyCEORlQqbUJRcL02nUmJvi8
      ErY5ZfvJOj1X5DU2aGV/i/rYpHR4QECy6dphrGGD3lAj6PPQ7/dodwcE/DI9RaE7mBDye+h2
      Rzi2QaNWwxsM4zI1ToplPLIXyfN2EyJvgg066VU5qOtE7DbV3oBmzyEh9GhoXnonW3hn1zjc
      fISutpFm1yhsPkJVGsRWbrHz9CFLK2dLg5aKxxTKFZYX5/jD519ydy3N070aJydVri8EyFWm
      yIMTWkKG3uEWU32A6Z+lsr+JYI0Yimlax9uksuecBrWmHOS2UJwgduPgmzWbyD/+879w+dI8
      //Trv3/DR3YTikSQBDeOqWEJPkrHRxiGgeQR2M7tsru7R8AvMVRqlJUppaP8SzbotaurfHXz
      N/Qp3f5pgzWXy00oHMEjul84Ng6WDfXDPRS1R+6oiqa2aXcaHJ50GLXLDHSTTqfH7tYW4ViU
      /H6eza1tUukwx0e1N/y934483iBqq0irp9IZGow7RerdIV2lzWCgk05ECfhFmq0pM5kI0YDA
      cd9iPh4kLJydDbq0uoZfFoExkhgjlFpGb+8ghhPE5+aYNFo0qwMWLqXIxgR2XrFBT7pdMpkk
      8VAQVTvfNKhL9HH1yhJuXIQT8ddNC3va5agrsJp504hAB03TuHL7DrJHJp2I4RFEysUitksA
      x+Tq1TVa1SLVWhul08Z2BL6tKnEsC13XX+5X1zSu3LyDVwCMIcfVDl6Pm6kJiWQSv9eLZUMy
      lcTv9WC/ePfiD0WJhKMILh1R8hL0e3G/YWT725JHDvDRxx8TCYW5vLTMR7/8JbFQgPnsHLGY
      j2qjw2hskc0GqFQUukOLtYREodFDtYw3yAYNoJsK3Woe3+xdzH6L1kmR0Nws2aU4hYMqJcXi
      3mKY40qTlq6xmkpSqdbpDIZELjANGohlXreDa8UT/uHXv+ZN/x+Ek2n8MxlkIB6L43JBPBFH
      xKDW6ROJxlA6HWy3l9W1q7jyu5guCfErNuhxnYklMowFCPoCZHynRWQoniYZn8ErgG5GCbuD
      TCQwDS9Bnw+PaON1PKdd32UPgpVAFkVisTCOffo4FY+ncIwJ27ldNOvtJDnfuFwCrXIBX2aV
      uUSIwv42cnKFhVQIUu+zv73J7fd/TiLsJZ/b5PaHvyAR9rK3vcF7H/7izC+Atp89xDZtDotN
      fv7hz8iXFT64fZnRQoRCXeXetRlczJA53EW8c59sKoqdz5G5+z4ziTB6PsfMzfvn3svBnKg8
      3qsCLtTM7bcfhvtLCZtWi0d0ugPmVq4SD725++O3SVXVMxfB7/Rm9C4NegF69x7gp6Nzm38s
      Q0dVVTTdQFXVHzYzOA7TyZjx9HWmpW2ZWN9IgBqG8XK741gYpvXa71/9+Zcjh0G3RbV5mqgs
      7OfYyR9jOw6FfI6tnQMsx8E2NTafPaHe6WMZU54/fUyzO8QyNTaePqahnL1De6tW5NHjp4w0
      k26zwpPnW5i2Q6de4unGDqbtgGOTz21wVKrj2BZ72885rjRxbIv93AbHlca5p0Edx6FTL9Lq
      n0Zpzm1FWPXgAC0cob+XRw6HSI8GeAJRQrKbYqXG7PwiaEPqyoDFxQX6rRqOHCIRCWJMB5Rr
      CtN+i7mrPyPm//q0u7UCE/88EWFKpztg4dIi/X4ftbJLw05z91qWyRQkl0ZbnTKXjvLpZ3/g
      1t37SAIkkwnqlRK+SAqvCGq/h0sKkox9S1Pui5Zt0mi0UTSLECo9M0BAr3JwZNDuuVkI9jmq
      qZi1HMmVO+w/f0TdLzJ3/T22Hz8k6heYu36frccPSf/dr85kg5qOyO1ri6w/fYY1GfLB3WUe
      P8sxVvu8dzXF870KS3KXsW8W7WgLa9zECWcpH+RwT+KYvgxKYZd0KoVfOsc6wNJoVstoEYlU
      xH+edGgXkiydogotDZccolo6wTRNfF4POzt75A8OiYT8jJQ69YFFvXj0kg06n4mh2QJ+ScDQ
      JnS6f0oW3tnbJxn1UDhp0253iESiZBcvIYkm3c4Qy3ZwT1oct3VS6QyZZJxOp0395ABLjnCc
      36NRKzK2JZrVEhcb0v0/5PawsnIJweVCDkTo1o7o9PqoE+g28mwe1klF/QxHFvFoAJ/sojVx
      SIZ8+N0CHd0mFfIhi8KZk6shv4f//vwJd+6s4hEiBOOLGEoeIRglMjPDpNWhVR8ytxAnExXY
      q0+YSUSJeyTK/T7JZJxo0M9AP99Z2CV6WV2eP8XlDNrnjUd3sXbjFpJHJh4NIQoC5VIJBAm3
      y+bKlSu0a0VqTQWl3cSyBWzA0oZs7h5z+969P0GivKpwJIov4IMXjztuwY3b/XXDo1KpiC8Q
      wNQMBEHA/WKp5EQziYSDyKKIJYjEo6cdZH6Kcl4sCrIsE0EK8N4H7xMIhEl4dcLZa9y6PEOl
      rhCLSVTrHcYazIdESq0uI9smG5AotrpnT4Pi8D8PH/GLv/kVIW8Y0+zSLu/jz97BUtvUCydE
      5meYvRSnsF+m/MIGPSnXX9igKSqVKh11RMR7vmlQx7ExTQvLNOn31fNLg+JALJXCKwrYjn3a
      J9dxCPplOl2VQCiMOR0xMVwsXb6MPRmAKJNKxtCGPXojjUG/RzASRZYk/C9iGo7j4JH9SKKL
      gN8PLgGfz0MsmaFSOCQYiyG6PQgug5FmEo0n8QsWvbFJKOBjdnaGo4M8vmiSeDCA7PXhdoE/
      8PaYlT82DepYOrndfbBtpEAEtVUmPLPM4vwCHrPH2B3m2kqWRHqWTuWE1eu3mVtYoFk64uqt
      e2TnF2gVC1y5eRfvd3CLvtd3GA+oNZq4PAEuL2aodE1uX10mnQjSHMGNlXm84SSM2iQWL5PN
      zmOoDWYurZGZmcUatEgtXiEaeLuO2zdlaUO2Dyugj0nNr75zgS5C71ygn47eehEsSdKPawbx
      VyzDMN51iv+J6NxqAFOfoigKk6lOr9f7QTao49io/R7D8euL2C3TwLS+u2QdD1Q044dHvR3H
      eSVy8XLjy22adr49bh3b4mg/x5dPNtBNi/zOBps7B2ijLl988QV/+Owzmr0xljHl6aOHVJpd
      TH3Cky/XqbVVLOP0c7V19tZER/tbrD98xEgzadeKPHz8DMNyaFaOefRkE+OFDbqz8YT8cQXH
      tth+/pjDYg3HtshtPOHgpHohNmizfESjOwLOkQ1a2tlh7JE42dtjqBvY2gjNEfBgkj8o4A9F
      0Uc9CqUasXiMTr3EyHAR8MlY2oiGolIt7ONNzOF9pRDuVPJ0rQD2pEul1sI2Rgx1wDZoVEs4
      go9hp4HtDaKpbToDjaDsolpvMhhrKI0qciiGOelTqneIBP0onSa1Vg/JpfPb331GJJFm0m/R
      7I3xugz+45NPCceSmPoUv0+mcHiA5I+gT0e0ahUswYvvO5b6/dg0qGPoGG4vUbvN08M6jhTD
      r9UYSTPcuX6ZVrlAamGZo+cPSV+5w/6zRyitOos377P1ZJ1eq8alm/fZfPKQ5ZXlM9U4ouRj
      Ni7zaPuIarnKezfmeJIrUq60uL0SYas4RlIL9HwLqIVthlMVd3SR+uE2mAN0XxaluENidvF8
      O8VbU8pHByi2n9l4iP8FcLV8f93wlboAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
