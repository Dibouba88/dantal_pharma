<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
      </column>
      <column caption='Categ Cost' datatype='string' default-role='measure' default-type='ordinal' name='[Calculation_1471269746390384641]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746261286912] &gt;= 15 THEN        &#13;&#10; &apos;Rouge&apos;&#13;&#10;ELSEIF [Calculation_1471269746261286912] &lt;= 0 THEN  &#13;&#10;   &apos;Vert&apos;&#13;&#10;ELSE&#13;&#10;    &apos;Jaune&apos;&#13;&#10;END' />
      </column>
      <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' name='[Calculation_1471269747387523077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost])' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ Cotal2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &gt;=  15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747387523077] &lt;=  0 THEN&#13;&#10;&quot;Vert&quot;&#13;&#10;ELSE&#13;&#10;   &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Categ Deadline' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1471269747397005321]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746399682562] &gt;=15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF[Calculation_1471269746399682562]&lt;= 0 THEN&#13;&#10; &quot;Vert&quot;&#13;&#10;ELSE&#13;&#10; &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='Max' name='[max:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='None' name='[none:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;rouge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vert&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central/Eastern Europe-Middle East-Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='27592303.636221975' min='-35383488.506571695' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20269987.398014411' min='-18683542.601729188' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte de phase'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
            </column>
            <column caption='Categ Cost' datatype='string' default-role='measure' default-type='ordinal' name='[Calculation_1471269746390384641]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269746261286912] &gt;= 15 THEN        &#13;&#10; &apos;Rouge&apos;&#13;&#10;ELSEIF [Calculation_1471269746261286912] &lt;= 0 THEN  &#13;&#10;   &apos;Vert&apos;&#13;&#10;ELSE&#13;&#10;    &apos;Jaune&apos;&#13;&#10;END' />
            </column>
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='Avg' name='[avg:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746390384641]' derivation='Max' name='[max:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='Sum' name='[sum:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1471269746399682562:qk]' included-values='in-range'>
            <min>-4.9000000000000004</min>
            <max>13.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Distributor&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1471269746399682562:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='None' name='[none:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' included-values='in-range-or-null'>
            <min>-15.0</min>
            <max>58.5</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Feuille 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{15115406-5DBA-449C-A2B8-54B450912461}' />
    </worksheet>
    <worksheet name='Feuille 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= 15 THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
            </column>
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='Sum' name='[sum:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='Sum' name='[sum:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='User' name='[usr:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='248' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk])</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte de phase'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1471269746399682562:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='269'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Feuille 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A840D49-B220-4B45-8788-5EDC2C5370F6}' />
    </window>
    <window class='worksheet' name='Feuille 5'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' maximized='true' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carte de phase' width='192'>
      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
      cjKZ3LJ1++8EHKcaZqyqqhvDU2txq51bx3Fcx5eqqsSv1j6qF0frxxfmz218dQAAHepJREFU
      5Pp5dJxqkks12K5APp/H56ty7VKphFqrWK+srPIgi3uqLdJcq88JJ52w/sFHJBZImLc0TaNS
      qWyaEGpfXO3ErCf61J5bO57H47luwj9ucBzHrdQsmvxls1l3YcPq5HTRTkk4pWqdiutBkqQb
      9isTYsrp9/6KSOMeurr7KZfLVCoVd+cVTsv63GORGlksFpFlmba2NvdeKpWKawJ17/N2Jute
      QTRTiMViyLJMqVRyzV61D7PeQhZYa3Gvp2jVL36v10symdwSJctvB7ZtMzs7u+Zz27ZNNpt1
      FxFcK3MPuAv9WkEzyeXGkiSRz+dJpVLrmmUdx7lp0wsx79lMhpGxKZqa2zl38tusLF8LuqvV
      xUT7VzFmMBgkGo2SSCRobGx0jxc7Q+3uAB+BHaAWQskxTRPDMMjn8y5xiB3CMAy3b4HjONfp
      DWvtEGvpBLWotkRdO4XvowZJklwuWA9R40dAlmU3cUUonGuNF4lEyOVybjh5bfRl7W6Zz+cx
      DOPqQlQoFYsEQ9esS5lMClX1EQyGGBoaxCenGDv5bwmqfgr5VrLZhlV6STgcRtM0yuWy25BF
      EKl4/7XPIkTd2qC7jxQBAK5zS0QcLi0tuaGziqIQiUTIZrNu0NSNsJ7eUI+t0KboTmEtuVtA
      FKkVXF9kWt3M/Onz+dxozdqURVEG0efzuZl7QmwaHblMtPQ1Fs0ghtKPpPgJWqfQLR+mp4fZ
      sWGaoxqJsALNf4+29m63FlEwGHQ7S4r7VhTFzVkQBAjXTOPCEZbJZNzYI0VRPnoEIOzwoqS2
      iFWHaxw8Go26WUL5fN6N8RfHiO2wtgBUIBAgEom426lo1bMRp9LHAbXcUoiYwWDQlbmXlpbc
      hazrerVQ2FXLjEiKEQurVs/SNA1N01xRSSDkd0j8/+2dWXBbV5rff/diu9gXkiAokZQpyZJt
      WbK8qG23Ne22212x3T2VZDI9Ne1MMpXqzORhZipveepUzUOqJi+pJC+pVCV5mJqZrkklqXTF
      bi9te+RNY3mRZKu1WdRGiStAEOsFcHFxcfMAnaMLEFxEUhIk4/9iEyIugXvPd863/L//57IB
      HTglXy+UGyjKWYJei0RUbVHKtdZG5nK5SCQSlEolOUWyWq3icrmIx+OyeV78nc5NSxD1hHaQ
      ZVn3ngFAq1WvWq1SLpflkL7OtKU4lqPRqFzMYhfy+/1tlVzxPucRLzhCS0tLcijI/XIKOLNd
      4r+6rsupMKKzypmqFAQzQObxc7kctm0TiUTa6gTd0OmKlqoKMaAzn+Bxw+mpGLGoGyvxChM7
      di1LOoTD4RZTN5+XvcKCIGeapsz6dAomaJomYzihUH1PGoDYwcvlckvfUVWXtcCJXQGQblEs
      FpO56s7U5kp/R+x466lE34solUoy6yNOws4in5iR1mw223SA1lMZboNV48N3fkVg93cZcEPT
      rPPR8QWqJYPxvSkWri9x+coSY/v3c/rsTlKpacZ37u16KdG6CjdTnSJLJ/L93VzcRCJBLpdj
      YGCgFdfc2jfoHQhhJqE2IEhPnVVeAa/Xi67ry7IAa0EEV5vRC+o1OF2URqMhK6Rer5dSqYSu
      dx8uqKpqV4EqQGaCVoVL45mnn8CmCTZYqsJ3DgziUZt4NRfffTJJMhVhlzLHM8+/yjO7g0zl
      1y5+qqoqWbwiYREKhYhEIm0N+UBbIQ/ukTRoN4hjTPifzh3B+Tvii4vA6VanNgoa9f22+wu3
      x7Zt5ubmyOVyGIYhM0Tz8/O3VHkX7Np1QwG3y8X7H02z9+AOJgZ8zE0VmNibIhz0cOnCO1QN
      m3h0fbMURC+HCID9fj+1Wo1yuSy79UQGcXR0VM65uyddICc0TaNSqRAOhyW7M5/P02w2ZdAm
      uoO8Xq9UBl7vghbxhLNCvBGZ9V6DUzpE07Q2calGoyGDSjEOd637FQwGyeVy+Hy+FV0jq1bk
      ky9Pk6t5yEcCBGJVyk2VC99k0A6kKDZU9m0PoNgavo8+5BQpfnpYo1wy2+o+KyGbzRIIBAiH
      w1iWRTqdJpVKSVYxIFPmAj1PhVgPnL6paZqcPn1aPlyx64vhzLZtc/DgwTUfqHCjRLZAvP9+
      gOD6SEbkDeU2gVKpJBUcBP8nto7xTku5Jd49+TZBX5DHJ57Epbrxer1Eo9FlccXlyTOMu3+x
      LAiGm9X7a/pzHPzuHwAtZbjV6BXOz95oNAgGg+i6TiwWk+nxbgTG+8IAOmGaJtlsto3nI1J3
      opq4EsTpIFJ4QrdGNFELrvm9DCEoCy3acCzWPk9ZuBLCpbQsS+qAdlsrjUaDz898xtHZD2gG
      WxtPU7f58cTvsP+hA1Lnx1nEunbtKtX5N3CuZ0VpyV22Ni+Fqulm9KGfsGfPXpniXA8LV9A5
      qtWqTM2KmLETt+wCrSVJ0gsQXf9w8/MKV0hUDZ2w7Za8tmEYuN1uqVspOCmiC0pUn0VccK9y
      gmZmZoCVi2Iej0e2GMLNjJrItDnpIJlshjdO/pIF1wxK0JFZC8Bk5jyP7t0vG+iLxSKqqhIK
      hQiHo4yP/2nXz+dcY+IZiIW/nlNAxIeCy+S8Tidu+QkKykGvc2KcJDin3y78WudOIvLftm23
      DbDrTJUK9QcnQ1KcDsIgevmeCExMTHRVThPoxpFSlJagra7rUif06vQV3r74OlVNR2F5ynG2
      NCN/drlcxGIxGo0GhUKBSqWyoqitc4ELV1bUGVYTyYKbu79o0odWfLLSqb2hLazXH7RQCxOF
      EsEJEu5QsViUtQDRUC1urhB17QaxKESQJ4RZBYVABIyCISne04uxw2pEwNUQDAapFOb5N//x
      z6mnGozvH0bBJj05R6XSJPVQipnjV1BDfg7tfIoP3n0bQ9F48cXv43Up8oRd7/oR8Z3H4yEQ
      CMhn5Xx/rVaTanCiNiSMS9O0VU/qDRlAL3ZDdUKUzQXDUdw4QO4QYhEsLCygKIoMmNa6rvP/
      BSfJ+Xpnhfluw2rUSS/mGB5Oot5wLeo1nabqw600yWQWCcUSBDUP2UyGcHxw1QV67dwVxp7e
      x+WLn2I1wWVbpK/nCCfjqLZNuVxlaDiOWk7j3fsKO9U0V+cK7BmNrXjNlaDrOtlslomJCSlE
      MDU11aYKLp4dIGtDgsbhzAB1w73pxK4TwvePx+NEIhFqtZrMfWuaJqW8m80mwWBQtuuJ93bG
      OuJ6nX+jc4cXv9Mrp+SRX79JfHCIC1MZnn/6UY5/dYz/8td/wcje5/nH+w+hmwpHj37BnvEY
      OStAofAbnj30uJy1Jb+fVeOTj49j6TVqSqH12o3UsCfoZ9tYiGuX8xz44X4Kl+aIeXejOHqt
      BVZT8+h8vVqtyrSmqqoyCSEkDgW7VMDj8TA8PLxuAuN9bQACgjrhbOwWMcLFixdJJpOYpim5
      7IqiyJbA7du33+VPv3Hk07Ncz1YxTY0nv/M0b7/5a8r6A7x/8X3CD2pMK5d470qJSDaC6R3g
      /FSG7/3gBT5//0PcN3qxAZaWsqSnv2au0mSWGUqNea5c/AZPxE9xag7X4CDhoJtrk1kS4wNM
      nbjOuOcRnv/d3+bk33/IGVXjhb0R6c9ns9mu7ZJAG4VdUByKxSKmaTI8PIzH4yEWi0nlaeHb
      iyq16BhbL74VBuCEc1dQVZWdO3dSq9WYm5uT1VHRU+CkQdwLbl8ngrEBJoIW1y+epVLKo/hi
      NBtNIlaYmXSTpr/JfGCeh/YeQJ/PE9LCNHDjCmj4NT+6XuL6pS+Ic5QHEybHp1Rmoh4YgH2B
      hwnYIeYq0/g0N5F9YzRrNoqqMOAa4I9e/BmhgMbzL/2DG7t6E9umLbvkzNQJdIoVVKtVIpEI
      lmVx9epVUqmUHMoh+D9+v3/DdZr7sg6wUTSbTdLptPQrRQl9tUC2opcpl8sMJYd7xuXpRD49
      zYnTlzj07LN8cuRdFhan+OTzz3DbIYK7XGSn8vz+P/wjxodCXJi8zNiD+9g2GOX88V8wkZgk
      fCNrnM7Z/N+LLrJuF7+7/zUmRieYmr6KaZlczVzm0fHHqJt1IuEIhVyB0dHRZQFooVCQvnk3
      iK4xr9dLNpslEom0yWSK0yMUCi3L5m0EfQPogFAPEKoGK43tSafnycyeZXbqBA/u/xHJ1A55
      JDuD4F40CtFYMjs7Szwex7Isqcbt8XjQNI2rk58x6n0bgFKlNQehbtp8PKMwawX44x/8SVdx
      MHFiptNp2Z7o3NUbjQa5XI5kMtn1sxUKBZlWtixLKm6Lay8uLhKLxaRrKlwmkS261ealb50L
      tBZE0cTtdqPrettQB4FsNkvmzF8Q8Rvow79PNJ6iUCjIIA1aFIxarSb5R2t1p91JiMSA2+2W
      OXmRBJg8+wm14iQNo0Ao2eRqOs6Dj/8hDdPg6Id/xfVhE1d99d7ecrksx6Q62bmWZaHrOj6f
      j3K5LMewmqYpq+6i4p7L5RgaGlpWeE0kEm19y07NqLUyPt3QN4Au8Hg8jIyMkM1mmZ+fZ3Bw
      UHKCKpUKs5P/j20Rg1wJPCG1zZcVTSMiLy2KhuIo75UTQaQUFxcXCYVCFAqF1mI08hzaNU2z
      CbmSgs9dIxJt8YAeeyDM9bkM+0cOyZ3dKR0jfhaZGTFUTxAUFaU19sgwDMrlMvF4XPZxC5Ka
      cDmdWp/Ok1T0hU9PTxMMBuX7RKLjlu/Dlt3R+wxiWoxIn4pxP5+8/1ckvcdxu2AoBqXMCVly
      F+hc5Lquc+nSpVumYt9uKIrCyMiILAjmcjms6iwAqgoDUYVY2I1ttzrAPFoM27RJRZaPdnIu
      9Gg0SigUIpfLkc/npd8vjMbr9UppxEAgIOf/ih08nU4v4xw5tZo0TZNV5XQ6LecFdNLh14P+
      CbAKPB7PMtGliZEmmsObGY9+w+Uv/j0NzwSBgafQND+JgVTbdcrlMpqmUSgUul7zbsLv95NI
      JGQzTMHTwLZBUVqzk+vuh1HVFrdK8SQI2yFikRg+n6+tmCi4VCK4FRo+K/VSaJpGsViUEyed
      SKVS5PP5tr7tbg1JHo8HwzAIhUIbFi7oB8HrwNeffcR0Jo83PEKcE4Qqf8cXF4o0UTm8P8aJ
      8znyVZsndkZ579xuRnY+yYuHv4N4Hul0GqNaYHR8N6VSSfYtGIbByMhIT/QbN5tN8vk8F86f
      Jmb8gooZxFYjzBeiHPqt127wadw0GjdZoqKJRvj2Th6VmM8lvpeu67KIJabv1Ot1qtWqPIWE
      KyNOpEKh0DaAW0C8v9FoyNMjkUhs6B72T4A1YTO7lOfVH/82f/u3f403ZqPPFdm9d4hLZ2Zo
      al6iXoWyYTN9fYnHntpPNl1gdnaa4tIUbrVBoHmGuqlgbZ+QWRLLsjAMg3Q6zcy1szx7+OW7
      +i1VVSUej7Nz916K+T/lwM6H2tQ2xOJyxvLRaFRWi0OhUFsrpWhUEuJVgp0p3EDRmy2ybo1G
      o60R3zRNYrEYhUJBslZFO6PX6yUYDMrKvFOR7lbRN4B1QEHFblqY9TpxLcO2g2OcOpMmV1MI
      eL0cODDC3MfXcPndlIuzYCcYSg5Tnv7fPPJACZcK5+Z2yAVVLhUpFpewcZOZ+QrN/ALDeGHF
      fts79j0VhWRymGRyeNnr3SDGvYo6SbFYpFQu4VJV/P6AlFcU6eFuQaqotwAsLCxId0xoOznn
      jokUrdAeEka7GVq66+c///mf36u89jsDBZ9icvTYlzQq58hcO8bIoJ8rM2W2j0bxNeqcOL/E
      bN7HtlSCT4+dZWT3YcIamKWzJGN1FAUapsHcUoDK4jHycx8zFvgC9N8wFLjKQKTOyXNlduzc
      f9ddoVvBpbMnOfb5SUIDI3iUJme//pz/8Iv/xBenviLhcfP5l6exPRqarXP85GkqlovkQLTr
      tUTTktDxN01T5v/FCVCtVqVb5fP5iMVim86s9WOAdaJYLDI/N8PFM28xEEiTDOeIOBpAPjrZ
      5MBuhaAfZhY1wn6TgWh74GY2Wro3nSiU4a3j23jtn//ZuloPewK2zZuvv8XLr36PX7/3JaZa
      5IOZd1ECTS5+eYVHgmOMjP4W33/uaT774AjPv/oKx458wAsvvUi3r1culwkEAnLGwMzMjNT2
      bP25VqAtNIg24/Y40d/6Wbtia1lWS4kuHOXAd34P0zS5cukMw/V3SMVb+eqhuEIoAG6XwgMp
      o+t1ui1+ANNSee6hOT58/d+xfXw3gegukqOPty2AXkL6+mWuZCqoigvV5aFRr3CqdBI1ajN/
      bg48HmK7dvKPnj/MG6//Co9Hw+1SUeyVv4sYcg20FQ6dz0ZINm7V4oe+AQBrpyJFoAc3B0Xs
      3nOAmWtejPSb1BtuqkYZhVvj/4sU4mC0CVEIaDrxyNfY9tec+eQtYjt+yujYOOFIXE5C6QUk
      x3aSHLM5Vp7ljdffYvyRQ5x95xiVcpFGzYW36KOaLnL06DEULcZje4Y48t77BGID0OVWO+ex
      DQ0Noaoq9XqdYrEom4wA4vG4DH63Cn0XaB0Q2jlCYtGpnlar1TDNOp8f+a+8+kxtyx5Orgh6
      DbweBcOKgOrFEz/Mw4/9sI2Y1ws92nbT4srUdX59+g2UkotXDv9IfjbRXL9ac5Bt21JmMZlM
      tjW6iHRpLBZjcHBwy7vr+gawDhSLRaampmRfrBOz185RWTqBWr/CIxO3twPMtmGudoiBHS8z
      ODiE1+ttm9Z+t1E36yzML5DJZADkTAdYuzsun88TCoW60pqF7tPQ0NCWf+a+AawDhmGQy+Wk
      wJbA4mKaQOG/kYjcOdnEpg3likKO53jiuT+4Y393vdB1nWvXrgE3G5FENXg1IzAMQ6aBu+3y
      g4ODt8UF7HOB1gGfz0coFGrLN9u2zdLsZ8RCd1YzVFUgErSxSl/1TM+xE4FAgKGhISKRCOFw
      WIoSVCoV8vn8iqoOiqIs22CccJLjthJ9A1gnAoEAXq+3bXfyetxdg7o7AVXtzfyFoihtlIhQ
      KESxWKTRaEgCWydE51ehUFimL9o5vWer0TeAdUIIOjmb5ePbnuXc9QQzGRelGxubZcHCkip/
      7oaKbvDNVKup3LZtrk1lOfLpNEe+bAnS/uZClqYNRsXg6BczLJXbF43ZgODwCz3h968FIVnu
      bCzqXMzlcplIJEIikaBSqZBOp2XLo4CQqN9q9A3gFiAGd4tRPJFIlO37fkY5+FMmp71cmfNw
      IfcMpP6E2cWVb202V+P6fAloLYbhVIjvPZWkUjbIL+lcns5h2/DpiTkOHhjm8xOz8r1mAzLW
      YR589KXb/n03itVaFd1uN/l8nmKx2CZcJjYVMfVHNNyIjq/FxcVVxbw2it48R3sUgreSyWSo
      1Wpy8FowGGb4yX9NpVJh5IbaQdazi3L1AiH/8l16bDTKVFqX13S73Zz5epYDB0eIhV0kY628
      t9VQCfrcuF1iocC8vpv9h3/a8036K51OoollaWmJfD4vXZ5yudw2xqrRaJDP56X+TygUWpXv
      vx7JxG7oG8AtwuPxkEwmpRqZ4MXb9s3pg4qisGPfT8gsTDO98BlxzyRDMQtVbS2KdLrMQqZC
      tlgnt1Rh51iYWR32R73o5RoL2Roz6QqRkMKZi0vgamVHvpkd4uFn/llPL35BWVhpVoCu6zQa
      DTRNIxgMSjaorusEg0FUVZW9wIIm7uw46wZB5RajnW4FfQO4RShKa0ifkOAGJCPS2RnmdrtJ
      bduBPTJOPp9javq/M3GDItG0bR5/eAi7YVIxWw/3+UMjsgnlwN4hsG2efGI7sws6e3e2ag/B
      +B4SAytLN/YKKpXKigvWsiw5fw1a9zMSibT1Bgv3R3B/hIu0UgAtxjxFIpG+AdwJCJFcIagr
      RLZEyb6zhzUajVG4GgBaBpAavhkQDt7Qh/JrrQcXjmiEIzeVjEdHHKoUzd5qqewG55DsTlW9
      zted90mcAqlUikgkQrFYXOZGdZ58YiJ8pVJBVVU57ulW0A+CNwBFaclvDw4OSok+Eax1PlzR
      6eQZ/BGfXH6WW5ki1AnV051K3EswDEO6OYIK4ZSb9Hq9cqawuG/5fJ5gMEgymZQzysSmAtyI
      s4JtMYCu66TTabkJdWutXA/6J8AGIRa34K9PTk7KiqdTIUEYxPaxCZKp7Vw8P8Xe1OwaV1+O
      hgX+yI6t/hpbDsHVF+oY4l4IQqGInVwul5SfiUQicncXu7+Y2SzoFJ10D+dJA2xYrr9vAFsA
      r9fL9u3bWVhYkK85jaBFmLvR4NFc7seuB5mCn4mHHt2qj3zbEAwG5aCRThSLRQYHB+UAE5H/
      dy5ckQGCFpdopcC287WN6i71XaAtgNj1Ol0gQMqyi4yHpmY29Dcs74P4/YG1f/EuQ5yKq7VR
      il7eUCjE0tJSW8bI6c4kEomui98pVSlO2ZUmwKyFvgFsIYLBIKZpyiyGZVlyhKsQfarWtVuu
      aC4W3Iw+9E96ctBGN3SbLCnEAJwQU2Py+bzk+ohTQcQQ3SCCX4GV3J/13Oe+C7SFCAaDzMzM
      yDkDQq8SbsYMzfD3OZctMhY4KkVnu6HZhGxBod4AK/wi8cTWU4FvFxRFIRAIyM0AWLEu4HK5
      mMvN8ssT/4uQO8ILj75EVI1KdbhuNY96vd4WWK80xnU9MUHfALYA4mGJXT4ajcpToNlsksvl
      0DQNv9/Pzj1PUa/XmTxxgUfHM3g9ndeCbMlPpraH4YkfMDowQCwWv2d2fwHh6jjRTf/o01NH
      OVb4GMI2heYSl+cukhxqCeeutIDFdcQOvxk6f98Atghi9lgkEgFuPjwhRGsYhpT68Pl8jO17
      jcXp/8y2Qec1YK68i+37/pDdsYGerviuhc7Fa1kWs3Oz7Nq5S0qcnL74G77MfQq+G/UBVWFe
      nwNaukIr8f+FSkS9Xt+0RHrfALYQtm3j8Xi6cteFtmixWETTtJYWpzHOiH1NqiQslkI8cPCP
      CUd6P9+/FkQDu7gXzWaTvzv5LjvGd/A/P/4bFLdCoZmjEbh5r9Sqi0RogIGBgVWzOqIzz7Ks
      Tcui3Fvnao9C+Pu1Wk3mu50cFkGaK5fLUnbdMAxwtc8e0A0N7R7I9KwXHo+nzRWqoPM3H/8l
      i4EFFrV5zEC7ekaAEFWjxtS1qTWvLUQCNksJ7xvAFkDIfQcCgbbMhVj4wn+PRCKt4LBeozr/
      OnsGz7Zp5DSam3+gvQSfz8fZyTMYhkHdrGOFTZb8aZTOVWfd4PRoec4ZXy+bXH870XeBtgCG
      YVCtVttIXgJOTpCiKDRMk9L0/+Hh7Qtti72gexjf99o9O32+G9xuN1fyl/jg8ntYikUz0MBu
      tJ+Orpqbl8Ze5e+vf0TZW+SlPa8wNHjnMl73z92+i+g29lMUe8RAN5G1+OabUyTdOu29lApl
      93NMbN99Rz/37YZllFAyCmcmLzD+xDDYNnNnZjAqBp54DLuYJzGwl7Q2zdefn2L78MO8+Ds/
      vKOfse8CbQGENEm3wk2nbs/4jj34R/8FFzL7qNRar2X0FBOPvHpfuT8A189+ytMv/1MOxHdj
      GKCqLsYO7MAf8DI4lmDbrkFK3jJHzv2SsYOP8PKDe1is3tlG//4JsAUQga2QA4ebMh8ul4ta
      rSbnXwWDQYLBKOEDP+HK+SMEKl/xwBN/RjgcucvfYuth26C6VHaP7WLOPIllNW/0QLhI+RQa
      NZtm08Jnu/i9p/8l/sx57rTQRd8ANgnh+gSDQZnxqNVqRKNRPB6PHAnkcrmoVquSs6IoCop3
      GC3yY6Kx7kOj73WMPfw0v3rnV1yay6JqeRbzPjxGidSeFHa9zvVTi3hdKf7Vz/4tk+dO4QsP
      cDB0Z2sffWGsTaLRaJDNZikUCm3KB87sD9wkeWmahmEYNJtNqTd0v7k+nUin0/zlm/8DwrB7
      8EHG4g+gKgpDiSQjwyN3NfDvG8Amoet626hRAREEd8Lv97fp5nxbIMhtvTQuFvpB8KYguP6F
      QqHrg+3GRhS7/7cNbre75xY/9GOATcEwDOr1uuSmOOEcEA3L6wF99Ab6BrBJdOO5O/8NbsYD
      Yj5u3wB6B30D2AScA+K6QWSAxNij/sLvPfQNYBOo1WoYhrEqHbczG9RHb6FvAJuA2P27LXAh
      p34/cXvuR/S3pg3CKYjVzQAsy5Jiun30LvoGsEms5NevNXmyj95A3wA2AdGbahjLx6I6B+n1
      0bvoG8AGIaQ5LMuiVCq1/ZvP5+u7PvcI+hHaBlGv1zFNE7fb3UZtCAQCWzrIuY/bi/4JsAEI
      KXRR7XXu9p3KcH30Nty3a/re/Q7R6WVZVpsuja7rmKb5rSS83Yv4/2lgamZvHcQ8AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3Ak6Xnn+cvM8r4KQAEF7xvtu6dnOIaeoiiKOlGGctRKS0q6vdVKOm2c
      Yu/bfVDExW3ExW1wuSdpdeSKKylEckVSFEkNzXA43rbvBhrel0F5b7Mq3X3oGbCnu2emZ4Bq
      oKfxi0DEdE4i80FVvvm+j3n/j2AYhsEBB9yniHttwAEH7CUHA+AAAKrV6l6bsCccDIADANA0
      7aYjBv/4N/+F6dXkG4795IdPcPOZr6NW0vzdN74LwEtP/jP/6Qv/mW8+/jT626yyU6tXubyc
      pFnY4vzcxm3Pefybf8cXv/hFfvLyFb7yt19B09/5yn1r6SyFFuSjC/zH/+v/5q++9LeY3vFV
      DrgvUCoJFFuQuauXGHZN8aW//ydOnDzJt7/9T2Q1E1alzM8+coRnF6vYykucv7bB73z+c9u/
      ny9W+J3/+Y85/73/zpVZP8WqnUJ0miND3fzg7Bw/+7GPcPaFZ6ib/Ezaczy9UOPf/vbHiedt
      t7UnU9P44z/+I778N1/BZrNQK8T52tf+Cbx9TPk1ZiNpzN4Bes05IpkqvoGj9AhpLi1E+NRv
      /GvOPv5VKorK7/3pIzRrJU5+8H/iob76wQxwwO1ZuHSW6YUVXn71HIvTl/jEZ/8tn/zkz/GB
      Rx7l13/x48iyjKGryHINw+zh8KCfrcwbl1ECAk6HDUVRaLVUGrKM2pI58+FfYKTLTv/YMZRa
      iWPHTvCpz/w2fV4rcku5rT1KKclf/tV/Zer0+wGolcqMHDmJXM7SNCR+63O/h1kuY5hsfO73
      /oBGJcv8WpTHHjlNJjyLqesEv/mLH3vDNR1O18EAOOB2GMTKAv/nn/8f/N6nHsIz8RDPfvO/
      8eTLVwh1WvjWvzyFTa/y1e/8BJfDTnh9hWimjMNuJeDzAuC0mfj7L/8FESXA8ZF+Zl76AeuJ
      Ajanh+4OL5rSYnbmKppoJjg4zsUnv0WiquNz2XnxmeeIb84xt5Hatqh7+Ah/+qf/np955AQB
      fwC1VWNmehrBZMXt8WISRQIBPx6vD0kUCfh9nDo8xsWri7iDo2iZGX7w/BUkAUw2B+ef/i5f
      +senEV4Pg1ar1dusAw+4E1RVxWR6d6tJTVWR3uXv7ib1ep1QKLSnNmTSaTqCwbv6Vt7+5F0u
      11287XsDvdVgaXWDliFx8uihd/bLqsz88jqKLnLi2BRCe0y8p3C53Xd9SSLcnAirFlI88eQz
      HHv4o0wN99zBJTSe+OHTfPJTn9iRIZqm3fOhOMMwaLVae23Gu0KWZWy22zug72VumnsN/sfX
      vs7P/PJv4XbYePK7X2M1rfHbn/k433v8x1RbZj732U/yj1/7BsHxB3j/4S6+8d0fkS4LHB0P
      8p0nXuAjP/8ZTkz0vWNDJEnC672+flRaTZqKhtPpQK7XEE1WrJadLRMMXUPTDRqNOoYBZosV
      u826o2vejK7ryLIMGFQrVQTJhMNhv2fe7u1cBWiKzPzcAhZPB5MjA6Rj69g7h/HYJVq1IuFs
      nYmhXgCyySjxXJ2jRyaRhPZ+ejfNOCqYvYz2h+jyu3H6erA3t1iOpLF3TTBgrZGuKYxMHmV+
      5gLPPf8iv/6vf5/+DieqLnLyyARnL1zYkUGGJjNzbYF8Lk8hGWElkuDKpUsoOyzYkIsJVrey
      VMtlzl+4QKPZzjd1g4XZNZKxNaLJItVSnkg8BWjUajLNeoWWBoVsknB4Cw1IxMKUa8022rS3
      GIbB2OFjVBOrFCpVkrE10lUFDIOZ2UUikfXXzlSZW9yk1wvzq4m223XTADAT8hp8+St/x/lL
      l3n+pXPkCmUMw8BmtyNJIlur81xdWKXeVOj02Pn2N79Fsljn6sVzbEa33lWC4kbKyU2qmkgu
      m6YuXw+JOSSZXGXnDrogSIT6+uno7CDgde/4em+HKIhIgsraZgq3JLOZSLIVy1JIbJDJZEiU
      NKiVicfWUKw+wusrbbdprzBZbMRWrhErqridLkb6ri+v09EVvH1jmMXX3/R1zJIPb0eIeiXT
      frtuPvALv/F5SqUSdqeHo4cOgShhsVjQDBC0w5isVo4fexCL1YLdauFkpYrFbMFiEqk3Fcxm
      844Msru9BPwG/fYqeVMXIx2wUSvgcdxbEVurxUI6X+HEwCCFnAWb3Uau0MAwJBRFQW81sLt8
      GHKJZrNJPhvBZtndJdl+olrI4erqp79cJVuu0SqVKbVKSIZGobjJ6toGRyfHwOZFUTNsrjUJ
      BEfbbtctTvB+YCu8RrUlMjbcy9raOi5/kL7ujh1dU21UKCsSAY+DdDpNMBjcJWt/yk99AIVC
      XsbjNpPKVTDpMsW6ytjoENH1VRRNp290knRkjWQ8y8nHHmRrbR2Tw8Nw/96EIqvValt9AF1T
      iMVi2NwB/A6JcCwJgsTg0CAWk0S1ViMVi9A3dghDrpCvtujr6WqbPa+zPQBkWUbX9bbf8L2M
      YRg0m3e4jteaLK1uIlrsTIwMttewO6DRaGC32/fajLvO9gBQVZV9OBkccJeoVCq43e33i/Yb
      2z7A65lMXW1ybeYavaMTRNfDPPDACVBrvHRhmQ88err9Fhk60c0NsHkYCHXRrJdRBDsu+858
      C0WuUqipBDt8lHJpBLsPj8Ny01kt0qkawW7/G47WqmXsTg9ypYTZ5cV8J+6IrlKut/C4HDuy
      +24hSdKO/be3Qm3WuHR5BkOycuaBY1w5fx6rr5upoU4uXV3AFQhy4vA4AGsLMyTydR565GGs
      UnvDoNKf//mf//mNB7723/4Sw9mJ2Wri5Z88yWZ0i4GxMRqNFrlkhMsXzqGYvejlOD969lWG
      x8axSLvnoOpqE9HmoRxbRncEiK4t0BQdBNw7e5BKyQTXNmIMD/Qye/FFmtYAzWKKeCaP1+0g
      lYhRrDco5WV0TcZiFlleXkE025k+9wJVxYTLZsFkk1hbWSeVK9DR4SeyvkI8lSfQ1fHGkFqr
      xvxmCpNaJxxL4PF6KZXLoMjUFZXI2ibZUgW/18Xa8jItQ8Lt3LslSLPZbGsiTNd0QoPDZKNL
      5JJJfBMP0ogvko5n6TtxhvjSHH2jI0g0uTYX5sHjA8yuZujrDrTNJrglDKogC15+7mMf4vDo
      ALpgZthnML0c5tylOS5fuMCh44d5/unn+PZ3n6DPpfL0q3O7a5DZRjUbI5KT8TpsjA0N7Fp6
      vNNlIVfIIVp9CIAoimSjETLFEmvRNL1BP/GNRYp1jc3lJbxd3ayvrRIM9TI+Pko5laapyzQ0
      K36hSWwriubswmyob1ojL4gCcjlDOJElk81RLWQoVEqoOLFTZ2NlGcPZQWxznfeyByZZzEy/
      +jyWjhHsgoHLacVqETF7fKxcOY8imBB0gBaiYMdsdaK2am2365Y8gEUr8ONnXmBhLYq/M0hP
      V2DbNxBsLoaHejEZAmq9yPJWkS7f7r41mvUKnuAghwd8JIryrl67M9TL1XOXGBrpw1AaJIsy
      oU4vumEQ6u1DEgW6+waplPKIokE+X8Tr8yEioKrq9nUsFguSJCKIIkpLoXZTCYemqlSrZSxW
      C9GtDAOhIIaho2oapWLptWuYEUUBySRRyOVxu728lz2wQniW2ViFWilH1/AQF59/hlhew2Q0
      kEwmWs06mdga8YKE1krw4svn6B8aa7tdt4RBf+oDHEJt1PG7zDQMC7VqHUnQCIW6iMWydPqs
      zCysc/T4CZy23Vs7GrrK5sYGJoeXUMDJyloYA4Gh0fEd3UeRG+gmC7VyCa/bgayJVHNJDJMD
      n8+Nrhs47GZq1RaC3kS0u0iE1/EG+/DaJTajKULBTiwOC7KsY0EBs43kVoTIVoZH3v/wtkPV
      rJWJpouMDg9QyqWoKwJ+v59yLoEu2fD7vRiagIiCyeYkGV3H5Oygp9O3Ox/iu6BUKm2XouwV
      0XCEvqHBu1oQt2/yAPdkMZyusr6+jtXdsZ2n2Ccf5zumXq/jcNwbDvtusm8GwHuBnybC7j3a
      nQjbr+z9ToxbMMjEo+AI0OVzsLGyAlY3wwM9xDY28PUO4LbdHL58e9RGhVLTIJ+MUa416Okf
      3nF2+c1RWJxdRrBYGBkb29Uo2b1Kq1bkyuwyiqrzvkceRs7HODeX4OFjAyyux9Aw8fD7TiMC
      F195HsPsZOLIcXzO9paH7L9vRlfRVJVCuUY1tYniCKKVUxSqMqqqUK2/uypOpVEiW24yMXUE
      0SS18eEHUBDNXoZCXjbDaTbXlpifW0BWGyQTeUrpKGVZY3lhjtmrczRadebm5tiMtr/6ca8w
      O7wcOTSOodRRVJWFtQQ2UcHd0cPE6AByvbYdBEhlsljsLly76Fu+GftvAIhmOjuuO2O1SgOP
      14XHaUbWLfg9zj027s5JRte5OrdBT9BGXbUzMdpDJByjXK7TqBTIJ2LYgyP47GbCG2vIusDa
      +tpem902BAGqlTKSycz8xZdIluqsra5RaTQplyuYJFBfiyX/wi99hpFuB1fnV9tu175bAulq
      i3g8SaakERrrZmF5EVFtcqSnRXgjRdPSpNM7hrnNGcKd0jMwilkoUaq2UGo5wuEy7q5ekutR
      akqOnok+kvEIeqlI3+QARrlFcLz9Yb+9opJNEUmk0RA5+dCHeNAscvXKNHIhSSpbQJAsJNdm
      MQcHSC4t0lCajEw90Ha79p0TbOgaler1BIjd6UJvyRiSGbMItXoDAKfLjSS+swFg6BqaIWCS
      RBRl52Xbt+PGHWGqqiO9di9RgJaq47DbkBt1EEQsJpFEOks6nuLYg6dQ63UEyYLN2v5p/3bs
      Byc4n8/jDwTu6g66A1WIXebGhNlbYhjksmnMdve+qBe676tBD7i/2Q+JsL3gFic4vjbHX/3F
      X3B+bv2nB6tJvvq9p97yQs//6HGyr0VoZs+do9i8vcLX26GrMgvzc0zPXKOpKMzNTDO3uLrj
      MoFqPsXM4vW/aX3hKrFs5TZnNVhZjt5yNB4Lo2hQL5dQ7qhgp8mlc5eYmZ6mIt/hjPAeR2vV
      efnH32E2WkIupXjiyad56tmXSKwv8uxLr/D0c69s10I9++Pvc/bsOQrV9udUbnKCdb73w6f5
      /P/y7zCh8o2//WvC2Qaf+1e/SkNuce7px3n+0iIf+tRnWHn1cVK5KjZvB7rZw2G/yte+8td0
      Dhyj19ygs5zlL7/6NRw9k3z+tz7NHS/ZBROTU0cIL14hsrqMs3cCMbdCvqHTYX/3QatWXaZY
      zKMZo+SzKdyuPiLrSTLFKocmRpm9do2e4SFURWV+bp6eoI/wVgaXN0BidZZ8VSNgFvDZRS6c
      XcRiEjh26igLsws0mzpnHn2Qn67eVRzuLsaHHaxEUxiNFKoGQ4fGKSTquMxFxMAIkeU5VFll
      8sQ4K8sR7E43Rw+9Nx1hyeLgzKkjLDUNostLnPrAx8jNv0ShpqLrOroubL/kNMNA03XMd0Ew
      7KYnSkeQrNgtZkxyjpprmH/zqx/gpUsLgM619RT/+3/4I2bPnkVydPLZT3+Eo4/8PA6hBpKD
      z/7+HyLnNykXC6xdO4+tdwqtkUfR7rzOUZQklmevIHj68FkFLBYTFpOIou58pdYX9LKxsoCj
      YxB0jVpDRqlUKNYbuDpCDPd2EF2dxezuIhGJIJnMZDPZ7WpQrSmjoeMP9jPY4SQWiRMaP0Kn
      z3XLDJUIr/DMy9cYG3SBuYujR0ZJRLaQmy3UZoN8IkrX6FG6fW6ikSiCyUQ22/5N4PsBq9WM
      3FRQNINMvsCJU2dw0KClAuh89Gd/gQePj3FtdrHtttw0AEycmuzhC1/4Aq+sFBAyS3zpm8/w
      0MlD2G02xkJu/p//9JeMnTyNzWZDlMxYTBJ2ux2Xw8RXv/yX2AJDWG02BiaPUwzPoYk2xHeg
      7dIsxonkGjQqeRzBPqKL00QKGl0uaUd/qCBJeDp6CEdTDIe8SIJBrd7AZDIhiSJOpwMQGJk6
      STMfxd8dQtc1ekI9eJwOVlbWEEwmRAQkSUSUJLzBTiJL80TjqZvvxsDYFKemBokma6iNJHNz
      qwT7+qkU44TjGTydQbaWZwlvpegJhUDX6Om5EyGye5NWvcSlhTDxlTm8I0fZmj2LZuvixNQw
      S9euIHm6CF87S6xQY/rieS5MLzM1NdF2uw6c4B3wujRiodLgkYfPvLOs4mvSiOVynQcfeXDP
      EzL7wQnei0jUvhkA92Q16G244zDoPuMgDHrAjjmoBn1rVKWJIZoxiVAplTHZ7NitFmqVMha7
      C4v5+jJXack0WhoeV/tLX/Z65r0FtVFiemETXTd44Mwx5q9ew+TwcOjQ2I4Kl+RSikRVRK1k
      2IzFOXL8dNsK4ur5OHnDQ6/XzEY0xdjNsie6yspGlImxkbbcfz+iKXUuv/AUtokPM+nX2Epl
      SUQ2GRvpZ6ukIlfLfPTDH0DA4JUXX8DltBEYOslIqL3Lsn1XDFdKp+gYGKXPC4uzC5QNC4IA
      O00EGJpCS4OJqSN0dnW2tRrU7g9STMbIxyM4/B1cvnCByxcvkUus8+zLFwhHYqytrZHJl9tm
      w35DMjs4efwwogA2lw/kEnXdQjJV5IEHThAwC9Q1gApmaw8nTp4kk9hsu137bgAEBsagnCSR
      KWM2i3SHBvCbG8R3eX9wOxEEE2ZRJ1FR6LE1KdQ1LGaoyypjU8cYGuijt6+froBnr03dExRF
      YeLYA/R5r0cHC9UmDc3AZCi0VCuaUaVRKWB1+N/mSjtn3w0AQVepN1vYAr1MTB5CTq+TKBsE
      PTvbGCGabTheqy93u9ovANXT6UEwORFsPga6XJisLtxuFw6rCUQJK8p9NQMo9RJX11IUIsvk
      C3muXrmC2dfPgw+fIbU8Q2h0ktXpi5QaMDYYZHmrzNHJgbbbdeAE7yIHTvDOMAwDoc39AG5m
      2wk+qAbdHe7V94mqqvdsd5udsCs9wjKJGJ5gP9a3SdbGYlFCvf3vuJb/7qFRq7Zwuu7DeLgg
      3LVEWCWXYm5lAyQLJ08cY+naZXSTh5OnjiABtWKW9WSRY1Pjbd8bcIs04rPf/0f+6fEn0W1+
      OhwiqXwFi1DiC1/4ew4dOYTerJErN3A7r9ewZ1NxfvTtb9IzPsL3f/QK0y8/x8DkKIhmasUC
      JquZSDiC3eVhKxbG43ZSrdWRVYNaIY2sSdhv3OSuK8xfuUCmaaLTJXHp0jSlaoOOzp1tlMjH
      1nlpepWxoT4uPv9DioIPKzLlWgu7zUxTlqk1KsSiRVxOC5JJIptOYbbaufjKc6iSA6NZQ7DZ
      aVQqlKp1nA47lVKeYqWOw+m4wb4azz55llIxiWryYKFFodLA6bAgywqG1kIXzTTKBYrlOnan
      g0I2jSFaMJt2VvLxbmm3NOKNWOxO+vv7Ca8s0um3UGh5OX1sFEEQEDB44cVXGAu5WElcFy5r
      JzflAVRWYlX+w5/9GagVvvj/fhmfXaTv+BlyuTSpTJJnHn8cUZL4pc//Ie76Jn/7redQc1kU
      3cKnPvkRvv/1f6AcX+JszkV6+RKdToOyYaP28lWsegG7WuDvnpjhMx9/gOfOzqMqKv/bn/3R
      Tw0RzUwemmA9p5KLrdMUrZjkOqpmYNnRNkgJn0Oi1moiSHYkEeSGzFY0BqOjXL06w4MPn6Je
      zrGyIeOz6uAIEF9awmqz4XI5qcajmHw2puc36HIYCKJKPFVBqJfxd3Vwo1aFL9BFsFOiqTSY
      X0wQDNiIKHVqeRWfOYfuGSCdLWBrVGkpZWqKhXpsgdOnTuzgb7w3EASBRmELyduHzeKkVlji
      qWdW+NBHPoJVamG1uujoHmBpegloryMs3vxPVS5RbjSpFDJYA4N89NHjNEUHY6MTTA35yVdV
      Dk1OoCktStkURx/6CBNDIWzuAD7n9Uege+IkW9NPYff3USjV+cTPfRKlVti+y8c+9ct0WDWw
      uTk02M+brTxtdhvBnkH6fRKp0s77Z/X0djN7/gLBoREMVSaWzGAWRJqaxsjEFH63nUatimCy
      UK2UKeSzWCw2bHYHrhuykh1d3fhdNiqlGp09IRyOW5dMjVqJ+bUE/UEXZpuHYLDzDRKKzWqZ
      QE8fToeNSqVMuZRHML9zuZd7E4PLM8ucPj6B3FQ4evIBHKJCvVomV9ZoKTVyqRgeb3fbLblp
      CSQwNhTim//4Dew9U4QsJc6tlPmVn/849cwyW3UXE0ETC5EcZ86cpqenj8sv/AjF4uf48aNY
      JVBUldDAEEopy9SZRzk+2c83v/UdfuZTv4zXYaGnpweby8/wyCjJlWlKuo1Tx6d4feLXlesF
      ZtVKlY7+MeqZMKWWmdGB4I4iBIZhYHV5abUUBkOdCGY7ulxFRaIrGMRiNuOwW7E5/dilFp29
      /ZSLJRxuDz2dXsKxFIGAD7vTgYCE02bGHewhvbFCLJFheHSYGxcvVruHwxP9bKUr2KUm8XSV
      yclJipkopbpC//gU+cgysXiaw2dOUc3lsdpddAb2Rh7xbi6BMAxcHj8upwOrzc7m0hyh8WMU
      4xu4u3oZDPqIFVocPzTU9qjQvgmDGoZxzxWS6YrM0uo6hmjlyDvdyKI2mV9ewxAtHLkLzt7b
      cb82yNg3A+BejqG/zjtqkbTPuF+rQfdNMZwoitvirKVCFk2w4vc6yaZTSDbXjtua6qpCS9Mp
      5DJoOjjc3l1vlarr+k+nbF2j0dLeGOHax6iqeteWQLoqMzM9iyPQzVhfJzMzs7i7+hh/rVH2
      2uI18hWZsUPHCHjaOyj3XSlEq5xgLVEmtblAtlRHFy3Elmep7DBH0yyn2EwVcbk8RKIR7NY2
      P5hqg5VwnEI2ycraJoqqUa5UkGsVao06sXCEjUgcXdeIbKyRK937eyHulMjcDF0TxynH17hy
      8SoDR0+RDS9Rf23b61Yyy+Shw/jd7Z+R9t0AMDu8VDNbZCstvB4nrWqWTE3HsQt6UQIibo8H
      u8OB3XZ3evIKgkAtt0UkmSWZzlDNp8mVCxSrOialRGxzHdHbQzIafk93iLmR4OAAazOXyRaL
      +Hp6WLhyiXypSFO5PgAmxkeJri9ybSXcdlv2zRLodUrJKD3jx/HIUSKJAgP9YwhKg3RFIeTZ
      G9W0d4quaTQbdcxmiXAszfBQP7mmjq7r1OsNsNhwOp1INGkqKpG1FbwO23u6Q8yNWB1ugl0d
      ZAzo6+5AU1UwwNxIk2g4KBRKgIEotv/9vO8GgLd3nHJ4g7rJz1Cnnc31VcyOIH3unT38ZmeA
      Huv1D3RooL19eVtylVi2xvjwEKWMSLmlE+z0U8nKKPjo9PgxnCIiFsw2F2J0A5Pdt/+m4zYh
      WhyEursYHb2u8doT1BgdHSUZ3SQ4GCTgGEdu6Xjc7S/OO5BG3EUMw7hnC8pkWb57eYB9xPYA
      2CfR0AP2iHK5jMdz/23Q2Z51BUFAEARa9TLPPf0ToqnC9rHb/RhGk/X1LQRN5qXzl9/y3Hf2
      A9VilmJVvn4fXSEc2drxdVuNClupHIIgkE/FKNaatzlPIRHP3XK8XCqgGwKNShnVePt7NWtl
      6i0NMCgUS7ee82bH9/Dnxmeg3T9Ko8TLL73MhStzGJrCxRefJFlWt///zKVXOXfuPPlKo+22
      3FIN+g9f+WsGpk7hcJhZmrnCzMIGzUKY7z75CpNTh3j28f/Bq9fCmJoJ/tMXv0LvyASiACY5
      x1e/9S8Mjh/eWddIXSW5FaWkSHR6XYTXlokk8wwN9L37awLlVJL5cJzhgV7mL59FtXVQz8WJ
      JjL43E4im2uU5BbVUouWXMFiFlhYWMaQrMxfeoWaasJukjA7ROZmFkhnC3R2BVhbnGcrkaWj
      u2v7bSLoDZY3s3gtMlsFnWpui3i2hMdisBGNUy6VuHTlKr6OIC7H/lh23M1SiPWrF+k5+Rhy
      YgmzrwcXVSqWIB3O6y7p2ZdeJDgwzlBfD0KbU+S3NMrWJB8PnjzGUG8nzz79Ao88doYXLyzx
      ix+a4olnzuPr6qO8tYC9d4L3v/8TnDnUy8z8It/9lx9x6vAATz7zyg4tMtPX240ANKt5GqIL
      j313YvbdXhupTBKTIwCGgShJVNIpMqUyyaLMUKiD2NocNc3M+tISDo+XtdWVbWnEWi5HS29h
      dnbSbdOJRCJYg0M4zOIbQpiSzYfRKhGOZhjpsbCRKKMV40SSGcqajeGhAfoHBunuuP/UmAFG
      jp1g/fKrRONpDNGMw/LGEvBf+vXPMhgwcfbKQtttuaVRttfS4Jv//D2uLm4wOD6F3+WAZoGn
      nj9HwCfyzPMXqDeagI1keJr1WBoQ8LmszK3FGR4M7cggQ9eoVKrUazWqdRlNLhONRSnVdl4m
      4e/uZebiDENDPRiqTKpQw+t2YGDQ1dWFIEDf0DiVXAK7005LUent7cUkiZRK5e0w5evTp8Vm
      pZTLki8Ub7qTgM8ukWsKWC1WLKKOs6MHr1V87T4CmtKkId+bDvOOEUCURLzdQzj1MpdmV5if
      vkJsfZFwusjl869ybWmTYFdn+025pVG2phAJRwh096K1mvj9PhrVEulCjcH+EKl4DNFix+cP
      UMomMNk96LqG12klHI3T0zeAcwfpf11tEU+mAegI9mC3mHalTkVVWhiiiWajjsNmoaWLNKtF
      DNGC02lHN8BqkZBlFcFQEC02Cpk0Do8fh0UknSvh97oxWc0oLR0TGoYoks1m2dyM8b5H3/eG
      alBNaVJv6biddmqVIlVZo9PnQhPMWEwilVIeQ7Lj2Se7z/aDNGI6maCjO8Td7H61b4rh7klp
      REMnvLGOwxfcljjZJx/nO+agUfYBO+ZermjdD6oQe8G+ywQDRDZWqMkwcXiMhStXMNu9TEyN
      s5Pdskq9RL5hUM7EyZcq9A+Pt00drlHK0jR78NokUpkcPd3BN56gayTSOUI9wdtf4D2IptS5
      8OJzBA5/kH67zMzSBrLc5PTxEV6+sMbAUD/Hp67vqbh09kVqssqRB99Pp6u9RYv7LvveKidI
      lXU6g12IjRz5ukSor3dHDz+AKlco1hQmpo5gsVnbKo1oczqIhaPU8ls0DAvL83PqQp8AACAA
      SURBVLNcm1ukVkxydWaOcCTK9MzMfSWMJZrsnD42QUvVsXs7ed+Zkwhai2I2i2S14tj28eo0
      VSePvO8EGyvt7xO87wZAo1JCtNqppDbYqts5fXyE6Mo1SvK9UyspmByIepNYusqATyeSrqBU
      0iSzZeyB0H0pjSjcENDXlBrPPPMiJx9+PwPjJ/jEhx8ms7nC9a9YAMHA0HUEsf0KGftuCeTp
      HkKNzFCQDHo66kQSGWotA7NprzcNvjMCLon1rIrJ4qLDZcHuCuBzSDTsThBFlFqRTL583wwC
      pV7i8sIGRS2Ls2ZDtzhZXV6iL+gnupVE9ARILF7B2juF265y4coSJx56pO127Usn+HWTbhSF
      FnaYEty+piC0TYLvRif45vvdyI3H2mHHu2E/OMGVSgWX233QKPte5l79DO/XMOiuSCMecO8j
      SdKeJ8L2gluc4K9/5S/44he/yIuXd68O4+tf//odn6u36szNzXHl8lWqlRJXp2e4Oru4491S
      lWyCS9eWAFiePsdmqnSbs+oszN+6DS+6uUrrHTXKBpQ6q5HEuzf4PUazkuPlV17lhz/4Pvli
      kae+91WWUjLV9Arf+t5TXJ1f2T73yce/s1eNsqGGnT/9Xz/Hl/+/LzHo1vjuD56kZ/wBhMw8
      2bpM1+gj2MtLzK4n+bXf/izf+Luv0lRkQqEuXL3HmfQ1ePaVy/z8r/8OL/3g2wTGTmEYOj/8
      52/w4Md/+W11/gWzndHhQVYWF9gKRwmNHqIRnSNX1+l0vPuglSK3aNSrKLpOuVzCHWgRWV8h
      lSsxOTnG9NWrDE6MY2gK12Zm6enyEEsVsDk9ZDaXKMkiPlHDPyLw6ksL2Mxw9NRRFuaWaTZa
      PPTBR94gjYiuUanWScY2SaZz9A6PUyrm8VsMGmYb4cUoVrvI5OQwy6sxLHYHJ44e2nN9oHZh
      dXdw5sQUL7xyEYfLw0OnjpISoCmr+H0ONEXF4LrfZ3XYUVWFu+Gd3vaJEkQTVotEsVzl+APv
      I5cKI1h9/MEf/huqiQ1Wwkk+8NAx4skkI0cf4sOnj/Arf/B7NLNZZE3koRMTbIbjmDwhfuvT
      Hyc8d5aNqu2OmlwIgoDcqGMymwj0D1OMrZHKlXalLLa328fa/Cyu4BCGrlKq1NDqdSpyk66+
      EYZ7O9jaWMTi7SIdTyCZzFQr1e1qUENV0THo6h1kOOghvpVi4NARujtvVXMzMBCAUqmMoLco
      lK77WLqmouk6Pf3DhDqdbG3GMCxWGpXqe3pTvNoo8uzLV/jQxz6GzfTTx84TGufjH34MpZCm
      qQNoPPahT/DQyQmWltfabtctA0Bs5Pnif/4CoamHMeQi09PXsNrdeH0+BCT8gQ6OTAxwcW4d
      v8eNz+vG5fVhEiQCAS+p2CZLm3HcLgcD/X0IwKkPfIoTPQLR7NvX+sjVIlvJLIoGZtFAMwzs
      HX0EbDtLWUhmM96OHjKFKsM9PqwmEVXTMFutmE0mXE4HIDJ+9AGopujs68fQNTq7OvF7vayu
      riFZbUiIWC0mTBYrnT3dRJcXbmmUXS/nmZlfJRQKoqoaksmM1WqhUS4Qjmcwm81YrSbMFiuh
      oSFMmkKgs2P/JWV2kVopj8Vm5eqVq5TyGa5tZIktz5BOxXn11Vdx9vSzduklYoU6s1fOc/Ha
      OsePHWq7XfsyDHqv8Hqj7EpD4aEzJ+/p5ct+qAZVFAWz+e4qf+ybAXBPVoPeBkVR9tqEd8X9
      Ko24bwbAe4GDatA3x9A14rEoFpefLr+HTCqOxRXA67KRSyfRJDvBjuu+VKNaIl9t0dfT1TZ7
      XmfflUKojSKX5zYQdYWpo1PMzS4hiCbOPHh6Rxsl5EKCaFWEWo7VzQgnTj/U1oI4WjXmIzkm
      BrtpKhpOhx1N0xAFMBBQFQXNAIfNSqNRx2Sx7Vl3mLuBKtfQzXaWZ84jDw+yVRRoFlY4PNFP
      tAQD3a8HSHTOnb9Ib5eHZUViciDQVrv23QCA629SEYNsNMLA4ZOImSUyVY0e97t/QAxDQzdM
      HJo6QrXZau/Df/2OqJpOpVykkMtiD4SolosELAZ1i434egan3SAUCpLIy+hqkxPHj9zTfsRb
      YXa4aayvkq7oBNJZxk6+n9xClksz6/i7O5ibSxP40GOYhCoWc5CR8SEuL2zA/TYA6qU8/tAQ
      rmbiegVoS0VSDZz3WDGcruuIgkF8Kw66gm5749KoO9SHlTz5TJ4mZqwI6LDjsu/9ilyrMTh5
      Aq11HlWykE5mqdVUxgY6ELvGKa5doVarYzJZUPUipbwVp6f9+yX2XeTNGeimWYiTq8PoocPU
      EiuUceK37zAManHgcV6fZgP+9nYgb1QKLKxGGezvxemwY7I6cLucGK068VwZh82By2nF7vTQ
      NzqGAw27y7X/voxdRBRhcW4a0dvP0eMPYK7F6Rk9wsTRU+j5MJ3DR4ivzqMYEkcPDRMvGhwZ
      62m7XQdO8C5y4ATfexw0yj4AuB6GvldDuDvhlmrQarlIU9GwO1w47G9duqCpLVT9emZ0VzEM
      GnITu333lMp0TaWl6tisFpSmDJIFs+nmRYdKqSjj9b3xTaiqCpJkRlMVRJOZt+vzrakqiBKi
      AKqqYTbf9PkYBsrtju8xdysRZugqi3PXkFxdjA8EuXTxPJItsN0oe3NlnmSuwsSR43R42lui
      fYs04l984T8ST+URHX4cYpPlzSiSrlNuqNCqkCuWSSWTlGWN8JWn+M7zCxyaHCW+sURLtON6
      m0FzJxTSMZ4/f43JseEdX2v7mvEw5xY2GB3s48rLP6Fq8iM0CmSKdTxOK7ValUKlSDpZxWYV
      MFksRDbWsTrcnHv+SaqKCatoINksFLM5Uq/pBOVSWySzZbw+z3YEp1VKsJ5u4rerLG2ksIoK
      +bKMwwyVep1sOslLr567b6UR8+EZcuYB5PgcosVEnS4eOD667QMtLK7w6GOP4rC2Pyt8yytI
      U1rkcjlUpcFX/uZbTI0ESPQ9dL2VpUNjYDjEuZUKxcgqH3ns+i7++OKrvDCXQy6+wJ/8+3+3
      o9CSoStE0xX6u3a7XaiI32Gm3KgjmJ3X4/GCRDqyitUqcm1mjvd/8EFWZ2fQRA0nEdyhEZaW
      lgiGehkeHyGzvIjJZ2E5nKHfZZDMCOSrIDVKqPRvV4PafL20otfYaor0Dwyxshyj094iITtY
      jtf5wJkp+os1gvfJdsibcfh7iDx/DlGSOOz2EQ4v8aMnrvHRj38Cm0kg4LXz4vPPEOif5OhY
      f1ttuSXw4Oke5Hd/93c5NhrE4uqgv6cLweImZKsTa9rxWgSGxibwOW109/bR0dWN0WxQqpQJ
      dYfYqRdRSseRFZVYLEqh0tjh1d5IT6iHmbPnCQ0PYygy0UQWn9OJquuMjE/isEhYLRZUTUWW
      G0Q2NzBb7Qi8cVuj3x/AZpFo1Fs4PW4M/aY6TkHAbhJJNwx8Zo1MOkm5qSMaOuOHprBI7+V4
      z9uT24rSN3mcTqdEPFumd3AYh1mgXsqRLlQQzA4Ge4PIcvs7bt6yBJKLKS5cuYbo6qHHqXDp
      ygxdY6cZ9bQwOibplCo8f26ORz/6MY5MThJZusLI6Q8iVZPYAiEmRvp3lMyxuXz0hbrx+f27
      2zRaELG6PJgkiVBXAJPNgaDU0CQrnZ2d2KwW7FYrVocHj1WgI9RPvVLB4w8Q6goQjibp7OrA
      Zndglkw4HTbcnUFKiTDxdIHB4cE3xPAdNhOYnPj8HTjMOhpmgsEurDYbVrMJVS7TNEw4d9HP
      2Ql3cwnk7uxFbJbo6BtlIBSkWsgyMHaYYnoLfzCEyyLQMKxMjQ22XR36LcOgP/7OV4lVrfzO
      b36Kf/nuj/n0r/4K1dQqVVMPQ92732L0XgshGorM4uo6ktXF5Gh72y61m/s1DLpv8gD3Yqf4
      mzEM454bxK9Tq9VwOp17bcZdZ9/E4QRB2K4FT8bCiA4/wYCbjZVFmpp5x9KImiLTaOkkYpso
      Gng7une9HkjXdUwmE6CxvrKGaHMxNNB7T9T3SJL0mu3twTB0lq6ewzN8ipDPytz0ZTSTmxPH
      DlHLJlhMVXjw6CQA89MXqLUEJo4cx+dsbzvbfeeNlRLrVAQ36Y0FKvUSNc3FoUNjOza0Vcmy
      lasxPnmYptKiN9jOIqsmqu4gYFdZC2dIx6Msr26g6QqFfIVaMUNdMYhtrrG8tIqiq6ytLJHM
      3txn4L2Dobbo8LnJV1tkN2epGG5CoR7QNWbXItSKme1zo1tJQv2DeNv88MM+HABWh5NCMoKi
      NMiVNAylxMULF5HV3Vmp3dgPq52kYmE2ohl8Hol0scVA0MFGNEYmU6KSS5BNxWlaAtgNjcjm
      KqIrwFZko6027SWi2bZdi1XKFbB7PKzOXeTypfM4AyFq1Rqafv07fvT9H0CtJJlZan+j7H03
      AGwuP0ePHsFq8+CxiwwMj+G1QnOXBsDdoru3H7MkIEkmNKWJ3JAxWaxomkqpXEYURVRFoVar
      YzZJFPIFXO73ri6PUi9xaXqOhWsz+IcmSG8sUmtBT/8wdqFFtVYju7VOolhidXGZrWQO110Q
      6to3TvA2hk54fQ1PVx8+t52t8DpmdwfBDt+O1tKaIiNrIk6bhXKlgse9u1EsuDGSpVGrKTgc
      ForFMmZRJ19TGAgFScWjCCYr/kAH6USMxFaGE488SC62ickRILhHfcPaviPsTR6z12diwzDY
      isXo7b8hjC4IbfefDqQRd5k7bpSta2xubmBx+ult++act+dgT/AB9zX7QRViL7jFB3jpqe/z
      D//wD9e3o70NrUqWpY2tXTbJIBOPkCnurkJEo1Jg/TWpwmRkjUypfpuzmkTCqVuO5rJpVP3O
      pREb5TzlhoKha6Qz2VtPeLPj9wmtWp4XXniRF18+Rymb4PkXXuKVC1e35S8vvvocZ8+eI1e+
      3Xe0u9wS+D134TzB/glMksjLzz2FZDHjC42ST2To82ponZPUEqtspcqMBuF7L63zr3754yys
      bCCZbYTcOp2TjzF74Tm8kkBJNPPQgw/jtNxhFF9X0VSVcrlGl2/31qSNUpl4PMNAfzex8Cru
      YQ9CI0+2JDPQ300kGiPQ6aVarhMJt/B4HGSzeRweH6szFwgMHKbHbcPlMBPZSNOU64yMDpFI
      pKhUZY6eOLL9YVptZlbWogx3mKipdjZXV1ANkWCni61sHbdV4Mq1Bd73yGP3Za/gRiWPKloQ
      W3U2N2J0D42wNXeJcvMEXquIt6Of7k43rb2QRrS5Azz88MP0B0SWYzXGO81EsgU2NmLkkxGS
      qTQbsTQrly9jD3YzPD5FI77AZqZGMrJBJLJBVYHV1RW2NtaYOPngnT/8AKKZzjY9FL09/tek
      EYcxdJVEKksxGadQrYHJTnenj62NRRpY2Fpfpd5U2NpKbksjNkolFEOhZVjptAnEtpI4u3px
      3tQoW7S4kdQam6kSQ36BxXCaSjFFNpvH4umkv6/vvm6UXcpkGRg/QofLRPfkMVy0MCQLFkkA
      dIZHRrDbLCwuLbfdllsHAC1++MMfMh+tYmmE+fp3nwKslBMLPHtxEZvJYGluhpoKnkCIyMwL
      1FwDVKLzVJoGfX39fPO//xWyYcMT6MbjfGdNznTlutpaIham0ti9RtJ3UxoRoKfDScuwIdr8
      9AXsWJw+fG4HTpsVRAlJa5DK3U6h+r1P78QR0msz1HHhFWWiiRRDk8eJzZ5lI11lYeYi568s
      cPzY0bbb8rZOcH7tAjPlIB85PdR2Y+41DqQRd5cDacQDacQ94yAMesCOuRdLul/nbpRDN+sV
      dJMDmwmi4Q100U5/Xxdb0S28nd343Nczv7l0gkK5Tqh/EKetvTPCviuFaFVzXLh0lbPnLlKv
      ZLlwaZoL5y8g7zBHJxcSrERTrCzO86MnnmArldsdg9+MVo351QhKq0m1Vt8u99Y1FU3TaMoy
      9YZ8XQCgXkNR39tJSE2pc+38C6wkq7SqaWJpGZ/XTaNawep0censWV4vhl9cWiEQ8N9GtGD3
      2Tfl0K9TK+Tx9w5jr2yQKMjXFdZ2YZI6kEbcWySzg+NHJllpAkioaoWZ2TkefeR9rF1+laZk
      3S53t1slFuavMXzoNH1d7d03ve9mAF//OA6lQCJXRatX6RococtjodK4t9bWN0ojNuo1avVb
      pRE7fI7r0oiagviaNOL9gIqZM2cexCk2yRYrHDvzGB2mFpVanZpcZ2D4CMcPjZBM3Rpd2232
      3QAQtBbFah13cJCRoT6qqShlxYzPsbPJ6kAacW9R6iWmN7JUtlZQBBMbS7N0DB3GY9aZuXqZ
      7rEjbK3MoxgmGtUMG6k6Jw+Ptd2uAyd4Fzlwgu89DqQRDwAOpBHflTRiu9A1Fc0QENG2185O
      lxvp7TQJ3+aaB9KIb007E2GGYZCNbyJ6+5AaWRbXImiGwKlTJ1hfmsfu72VsKIQAZOIRYrka
      J45NIbV5595bSiPSyBNOFrGJCpFYDFmTsIkqV6dncfk6EdU6M3OLmC02SoUc0c1N7N4AtXyS
      cLJIZ+BdfKC6wuK1K+RaZvwOE/lCibmZaXoGRzHvoEXMgTTiW9NuXSBdbRBZnqUodjLc20V/
      fz8bq8t0dQQIdA+wcvUioZFRTILK2fNXmehzsZZs0dPZ3ijQm0sjqjW+9F+/yqFHP4qyVeda
      yUZ09Qk+/6s/w+z0Bc7ObuKWY4RGJ5hZ2aIem2FobISrq0my63N4nRKC4/McCr3DP0A0MzEx
      xnpOxWJzEuoyyBUHcJh3+ia4URrRcSCNeJeRzA5Gh/pYek3srbC1hKf3EF5/gOkLr+LqHcIi
      AtSwSH58nb2szq0BfW216y2kEYf48Ec/yOLFi9QNkbGJSZw2C9NXpxk/fBRBV1AwMz4ygCiA
      v3uQDzz2ECh1crk87kAQacdCibC5vsHQ6MiOrwM3SiOOHEgj3mV0VaFQLFEuFlE1jZnlOMcn
      eonMnqdm7WKkN0itkCZbtqCoadZXFukItr/+7M2lER1+WqU0PePH8AlVzl9b5aM/8wnGB4Os
      hFMcO3qEycEuzp67hG71c+bEITq7gtidfo6OdxMvNjl5/Cg28ztT89GVBktrYRq1Gi6vH0GU
      6PTvwtr0QBrxLWn3EkhTmqRKLVwmA7fXS09PDzarBbPdgdas01Q0SoUCwZ4e+nu6UCQ3o/3t
      7xJ5R2HQrdU5TMFxuj1vdIqvvvIUL89s8mu/9dt0+3a2g/9eDCEeSCPe++ybPMCBNOLeciCN
      uMfcKI0YXluirgiMT06Si29iWL2EunaWvb270oiArlJpKLid90aJcbulEVu1IldmlxHNNk6f
      nGL64iUs3iDHJgeZvnwZs6eLo5OjAKwvzZIq1HngoYew7qQ59B2w/7wxvUFFlpg6NEEru05e
      c1PeWqW8w81hd1caEVBlNmIpsqktlpZXaSoKhWKRRqVIuVZhdWmF1fUw2rYsYqG99uwxZoeX
      9z10BqOeY2XmCoHx02ilBLNXroC7k1D36y1RW8TTNU5N9TF7B8IMO2UfDgABQ5e5dOECqs1P
      NrJEuqpiN91b0ojXMRAFEbmcIZbMkcnlqRVzFKtlNMGBjTqR1VUMRwfxyOZ7uhhOEGB14Rrl
      loAit3A6rFgtIvF0EbfHzezFV2moAC1EwYbJ4kRTam23a98NgGarRd/QCB0uE7HNKH2TR+n3
      m8nX7h3/QFNVatUKFouFWDJLX08XhmGgaRql0vV9wBaLBVEUEU0ixXwe93tYFhGgkk2Rr7UQ
      DY3OoUGuvPw8WwWN9z0wycbiEi3MlJMbJIoSWivJK2cv0Dcw2na79o0T/DqGYZCIbiLYvfR0
      +klENzCsXnqDHTvqFnI3pRGb9QpbmRLDg32U82kaqoDP56OSS6FLNrw+N+giIgqS1UF6K4zJ
      4aerw7tn+wHupjSiANsaQDf+983SiHdjlj6QRtxl7lgacZ9xsCf4gPua/aAKsRfckTRiNRdn
      Pfbme2jX5y8Ry+9OR0dDV9lYXWZxeQ1NN0jFNsiVd37tuymNCIDWIp177za8eKfoqsyF559g
      NVVFlcs89+xzvHL+uhxiOrzC069e2j736oVXeP655yjW2+/33RL4nV5c5Wc/8Sk6ggEe/8bf
      k1DcjFgzfP98gj/5k9/npSe+j3/4OKf6rTx3cRF7oI9TAzasgs4/f+1vabkH+M1Pf/xdr2UN
      TaOrb4hidIF0sYamKtSqdTo8O5ueG6Uyka0MwwMhYpuruEc8NHJbFGotDo0Ps7G+ht3vp1HT
      2Fxfp6vLx9pGjECwl/Vrb5RGnLmyjGQycez4FCvzC8gKHD99/I0fptpkK5VDbxRJ5yuMjI9T
      KZdxmQyaJjPRlQgmu42piSGWFldw+DoZG2pv4ddeIohmDk8MsdZUiczPMnbmAxQWX6FQbbCa
      KCIqr7/k6pTrJh45M87VxWUefuBIW+26ZQaQK3nOnTtHPJ0hHElgs1k5cuwEP/fp36Cyep6p
      j/waSmqe5bUwxz/0ixST62S2Nlibv8JaUSQ2fZb8DvZViGYr+fgGBd1NT8BF5w1lxjulx+8g
      kYhidgXBMFA1jXo+S65coaqIDPd2EF2dRTG5/v/2zvQ3rvRK77+71L6xqrgVd1KkRFG71Oq2
      u9uetnsmyNiJncRI7ImDIMYgCJB8cIB8DfIHBJlgBhgkGGQmQCbJwB7bGDve4ol739RNLZTE
      fWexWPu+3Lp113ygpFY3u90tkyWRLT0fBLBUvPew6r73vuec5zwPG8tLWILE8vLKHmlET7Cb
      mE8kvrVNsH+MgNvxsSVMwzSxWjWS2SLVWg21UaXRbBKM9BHx2KwtLlEzJdZXVjg6da4HhyBK
      yHdIgLYNkiQiCgJX3/g15YbK8soairb7CYiCiCBK2Hb7C8MfWwbVNY2uWB9bc3OIwQ6uvf5L
      hEAPr//s+2wVDAIeEY/HgyjsHiIYjSE0i/SMjOPcxxWrVdMs71QI+92ozSbJdIZsNoOq7z9B
      7+iOcXtmntHhLmyjRbHaxONyYgPhO3PCg2MnqWbjBCOdeL0+Tkwcw+WQSSbT71cuBAFBEPAE
      fKS342SyH9weqo0aqxtbBIN+cvkSPq8bQRCoV0ok7pdRFCDU2Ynf6+HEieP7MgE87NCUCldv
      L7M+f4vI6HHm3nmVgu7m9/7u3+P3v/w8Fy+cpbAxz05JwCU3eOvdGSZOHG97XHuS4Psnwmyj
      hSXKBLweqtUKbl8ATakjubzImAiyC62lIksgym40tY5uCgSD/t/6rm2ZBvXG7v7c4/HQbO4+
      Gr0+/707yG93XBNbEDENHYcsYdoChqaCIOFwyNiALIkYhgW2iSDJNJUGTpcHhyTQUFTcbhei
      JGKZNiI2lm2SzuTY2Unz1DNP3buATUOnqer4fB50rYVpgcPpxNCa2IKE0+HAtkHARpAkVKWB
      KDtxux5MR/UgcRiS4GKhQDgafail4ENTBTqa0og2uWwGlzdE0L+bo1gfng04IlAUBe9D8OQ6
      bDg0C+CzgKNI6b6Lx5UOfWjYoHfRUqqsbSaoV8uMT50lubWBLTqZmjrBfoiBWr1IvgmNQppM
      ocTo+GTb1OGUchZFChL1Suxk8gz0xT74BstkO5VhsL+vLec/jDB1henXXiI4+TuMBnVuLa5R
      qzU4f2aS9c0EtYbGC196Dgmbd15/Bc20OHHhOXo72tucO3RcIJc3yNTUSRxON04tjxjoxWnU
      2G9J2NQUak2TickpfH5fW6URPYEg6cQ2tXwCU/Yxf2uGmzdnqRV2ePfaTbbi28zNzZMrVtsW
      w2GD5PBy4ewklm3jCYQJuSVE2UUo2o1bMpFdrjt7fwVbjPD5Zy6xvbHW9rgO3QIAqOZ28HcO
      gOBCraR3L37r6NA0BMmNZOskCk0GgzrJkgp6lVy5QWf/KMOD/fT1D9D1GA3F3w8bgROnz+MV
      mjRaNqfPX0JolmkZADI2OpbRQpTbL8tz6LZAAIl0kYlTZ2gVU5iWhXAAysmCICHd2UM52jj4
      cRedQSebBRPRFaIn6MLh8dLhc9LyuEEUsVt1csXqY7MIdKXCjaU4NbNAhxBjJ5lB9EVRCgmW
      U1l80Rjbc9P4h0/T2SFzbXaTC0893fa4niTBB4gnSfD+8CgIeU+kEQ8YR7UMqus6rVbrkcYg
      iuJDj2GPNOLjDRvDsJDlz3JP9qMhimLbG2GG3sIWHciiQL1awenx43RI1CplnF4/bufuTLhS
      r9Js6QRCHTjb/F3sSYL/4k//I3/8x3/CUrzNDiofA7PVYHZ2lutXp6m3Du5uWskkeOf6LABz
      V99gLfVRM7hNVpYTe17dWF1EMx+QDao1WFzfe6zHFaamMP3Kz5lLVEmu3GZufZtXXn6V9dkb
      LG6neP3VN+9xoa689RaFQhHdaP/TdE82WK7V6R6IIasp/v1/+FO++Htfpbh6haVEnX/29ef5
      7z+5gmAY/Itvfonv/fg1vvjlLzPz5q+paA7+7b/7LgHX/hJM0enl1NRJ5m5ew7AsDqpQZeom
      ttGiZZo0myqyYRBfXyGdLTJxYpxr164xPnUSy2hxY+YWsU4/yXwNh8tLKbFGw3ASsFpEJuCN
      1+bwOmymzp9mYWGVVqPJ5154ng8QGWyLptoindgklc7RO3yMSrlIxGmhOD1sLSRweeD4xAgr
      G2lkp5OL5059dh1inF4unDvFUgsM3UQQnUhWDcvRTy6eQhTle1QSt8dJJpMk1NX38D3CfJFe
      vvKVr9AT8jJ58Xl+9/IxbE8vXQGRWtPkhd//BufHotycmedb/+q7nBsNoUlhzo33U1UPgs9o
      cuPqVXrHTtHhOdhqTV8syvLNG3T0jWKbGsVyFaul0tB0BscmGemLktpawxPqpJDNIckODN24
      wwYdvfdhxQZHGYtFyGYKDJ+Yoq+nc8+5bNtGEKBQLCFiUK3fP9Mg0D88xkBPiHQiDU4ntm58
      pofi78fg5GmOD8ZwugKk0xme/cLzhMQWDVVHM1qcPv95Lp4aZ3Mz3vZY5p7DHAAAFehJREFU
      9iyAoeFRotEoLo+Xof5eECUKyTi4gwRCYSJBDz19/Tz35Rf55f/6r8zttBiKisTzNTwPKIP4
      UdCqeRqWTDYZp6kdXFLucLsJhbtpGjDYFcLndiFJEi6vD5fTScDnBSSOn72IQ6/QMziCYFl0
      hDvoikZZW13H6fMhCzI+jxOnx0dXXy/ptaU9RtlKtcitxXUG+2PIkoTkcOP1etCVKtuZEm6X
      C6/Xidvjo//YGC7bJBjuOJxNmQOCplS4sZKmuLlIpVZjdXWV0ZPnuPzUOVZuXqdjcIKNW+9S
      blokt5aZW89w7vQjYIM+wafHXaNsRbeP/PblMLBBd5+aD/dTPDQL4GiyQffiyVD80cKhWQCf
      BTxphH08bMtgaX4OTzjGcH839VIOwRvF5xIxWw12igpDsV016FopS6KgcHJ8pG3x3MXh23ba
      Oq+99BILi8s0GzVmZ2d59+03qe6zJNosJljcTLGyOM9Pf/bTNhtlK7zx8tvcnrnGTq6GqtTJ
      FyuARUvV0VtNDAsa1TK5XBELKBVyNFufXY8uo9UkNjpJZv0WxUqV2etvk6xqYNvcvDnL8srS
      nXeaXL0xT4dYY34j2/a4Dt8CMFRcvhC6YeDw+Dl+bARRduI8AJFUQZSZmJxiYHCw7UbZHZFO
      uqIhDF1laXkDrZYhkc2ytZWhkFghVyiylixSTCRIp7bINwxWlpfbGtOjhMPjJ7MxR7JiEQwE
      mJoYRQBK6U08nYP3fb8NXI4onbFhaqVU2+M6dAvAFL0888wlen0WqUKZ67eWOHvhEm75aKWY
      zUaVpY0M/V1eHO4AXV1RlPr7WpetepVwdy8+j5tarUatWkKQH91IZLtRL5foGz/DeI+XfP39
      PKlYqVMr7LC6tkGlXKTccKAZRfLpbYKR2G844sHg0C0AW1eZn58n13IRlls43S7WVldQP3UL
      9qMhuwOE70irdHd1f8K79wuZ0YlxnnvmPMlsnaDHZGUrz+jIKIJdIV836ewfRM1sspXKMjg2
      gUekrQ4tjxpev4/NpVn8fRN0iA2WMi1KWwv0jZ3k6cuX+Ydf+yrpxDYOh4tL509SNn1MDj9E
      hxjDMHiSD+8PD2SQYbRYWtvEFh2cmBh75CXUx9Ug494CUFX1yDIZn2D/OAx06EeBe1yDu49f
      2zJIxOO4AtEPqBWvzs8zPDVFe5kZuzA0Fd2W8LgclAs5bIeHcHB/X46hqzRUk1DAh1KrIDh9
      ePbwlnQKhSbR6AeHVFS1idPlQVeVXUmYT9w4WqR3UghOD91dkUd+d/800HX9oalC1AoZ5lY2
      aKoaTz11kaX5WULdg0yM7CrjpeKrxDNVLly4gLPNud8el8gf/eWfsZVvUKzUGewJ8dqrryH7
      osy88RLpSgVfsAuzkefNK9fp7R9gbeEmt2cX6eobwvnJV8Ynw9JZnrtN2XDiMwpsFE1qqXW8
      XQO49sG0KKcS3FiJMzLYx613X6XpCGPU86QLNYJ+D6VinnKjRjGnIIkGDqfM+uoqstvHtbde
      pq7LeB0iklsmtb1Dtlgm0hEindgilSvTEbmfyqCwspzF62ySqwGtCjvZEh0dXqoVFVurY0hu
      Csk4qUyJUCRIfH0NQ3Tidbd/DPCj0G6XyPvh8voZGOgnvrGBVi7Qf+Yp4rNX6RwcxSHaXL1+
      i/OTg9xez7a9WvehK1an3HLzuVNDpDMFlEaFTDbN//7eDzBNjWAowA9/9Df84Pt/Tdgv8sOf
      /D9+9X9/iVBP8ubM+gFF5GB8fBRJAFcgTCkdp9y02D8vTiDik6nUawgOP4Kwq/CWXFsiVy5z
      a2GVaCREKr5CpqSwtbJEZ/8wG+tr96QRa9kcmtUkU2rh1esk00lqthdayh5H5HIxR75Ux+OG
      rVSZ7oDA+vYOyWSBcmaLXDpFyXDjaCnEN1dxhGPsxNtvCXRYUN5ZJdA3weDoIHPX3qNYLqFq
      NqAjyy48/jAttf2iAR9aADKCViCjOqml41x/702igydwO0QEQUIUbERJ5v5UuSs2zMmJ4bY4
      POYT2wxPnWO4002+tv8mUXesjxvvvMvg2DC23mQnX2ekvxfLshgcHsEli3R196I06hhak+Wl
      JSSHGwHhA9NyPr8fhyximCaSLKN9xBRTb6wf0zDxe+8vbQrYlklDUbAtE0mSabU0bEtnbWUJ
      83COaB88bJubywnOTvTj8Qfp6eokEOnHoWZIFnRMrc7MzHV6Y+03yt5DhVAbFd5++wqR/nEm
      +gJM31olFuvB77RYWN7i0uefR1QLTN9c5dkvPEcmEac36qfQcjHQvX8ylaU3WVpZQzcFRsbG
      KKYT4PQxPNC3L4eYllLHkt2UCzm6IkEahkgtn8LEQVd3J6ZpE/A7qZRVMJs4fAF2tjYJdvYS
      9kps7eSJdUZwBT0odQOXoCN4fCS3NtjeyfPsFz9/3+VrUCm3CASc5AoVHOgUGzpjI4MkNlax
      BJmegSEy8XWSiSwXvvA50utryL4wg7H2l/4+Cg+VDGfbaLqO0+nEtkwqlSq+QJDU1jrdw8eQ
      LZ2Gqu9LYvPT4tBwgY4iGc42NVbX1nF4QowMPmDTxtJZWV1DdgcZHXr0AllPpBEfMQ5JGPuC
      bdv3xHyPGh7XPsCh2XTe44HbFomtDQzJS0/Yw0Y8iWmajE+ewuP47atMRkuh3rLIJeMomk5n
      z8CBVxje57MbrCysILi8jI4MIYlHoRDaXlM629SZvfYOobGnGOiQmXnvDWKnv0hUqvDmuwt0
      9fVxZvIYADen30bDycTUGTp87a2KHToqRKu8Q8nyI9RSNIQAU1NTWIaGYx/S6AB6o0im3GRi
      cgrLtttcXtOwxQCxiJP1rSyJrTXmF5bQLY1ctkKtkKKu2ayvLDI/u4hmaizMz5FI5doY06OF
      jc1grJNqUwfbpr87TKNlUkysU7Mk+mLvbyE3tuL4QlFCbb744RAuANkXprKzynZRxe8SUKtZ
      HIHuT9F8OlzIJDZYWEnQGXFSbUpMDHeysblNqVSjUc5RSG0jdQwQdIhsrq+AO0B867NbBhUl
      Jx7XbhtVdLjwOHc3Hz3HL/O1Fz/H7Htvc5fx/vVvfJMen8n1ufZrgx6aLdBdNIpZgr3D+FoZ
      CjWNcnyHY6fOPeqwHhg9/SMIVgnNsNHVGrmchtffQSlVJN8qERnupVgqYJcqRIa6KFQ1ent7
      H3XYbYOuVLh2e5GMniHmPc7c/ApVl4pzrIt0JoftCVCKL2F39JJaWqSpqQxOnG17XIcmCb4f
      5UIOU3QRDQdRlCZe7/5H9SxDR7ME3E65beN/70+EWbRUA6fLQUNRkAWbumrSGQlRLuZBcuD3
      eskVCqTiO5x++iKNfA7R5ScUeDSVmMPABcqk03T19j7UbckTo+wDhq5/yoadbbG9tYk72Hko
      BHKfzAQ/wWONw6AK8Siw52lTysT58z/7L/zkb9/iN62M1OK73FjPA5BZn2clUTywoCxdZebW
      PGBx+8Y1FhdX93BtHhRKJc/i2q7Q0vbaPKnSRzXdVDbWkntezaZ3HsgoWylnKTU0bMskmdpr
      vI1lsvNRrz8mMLUGv/jZ/+HqjdsUskmuXLnC9//6Byh3PtxrV97g1Zd/TbrU/p7Kh5Jgi+99
      7wd88w//DaKhUkqu8lc//Dlj557FW4+zGN8B2Y/aMvnK58b46ct/xfWBIV48G0OTuvjR//xz
      srqPf/mdP2A/LNb1tTWUporVLFBsSpwf79u3hahaa5DJ5jg+NkQmuU3A2YVeSlGoNjkxMcrS
      4iLhWC+qujub29PVwUY8TSjSRXxxhshgiy6PTNArc316EYcscfrcSZbmFlE1i/OXL9yjinv8
      PlaWtpC7HDTtEAu3b9KyZSYGwixs5YmG/MwuLCF/7ll6oo/fXVdXijQNF26Pl0hXH89EwjQ1
      +06fR6ehizz/7GXevb1E7+XzbY3lQ08AC8kVoro9xx/9yV+g6Canzl1gdeEWpZLCt77zT/B5
      Y4xEbKoteOEr36DDzLKTzpPaXGQ5b+Bppdgu/fbENaWUoqI7EEwNQwpx4fQo2yu3qaj7H9aJ
      dfrZ3lrDFeoD26Kl6bQqJYr1BoI7eM8oG3eY7fV1kCTi24l7bFCt0cCwDYKRPvpDLrbjO3SO
      HCfs93zgaSnIPiRLJZ6pMRy22ExX0asZkvkK3mg/o8ODDAwOPZYXP4Az2M8/+vrfwawmyDd0
      5m9cY+r8xTu8n91/bctCENqfDu9hgx6Lefj+T1/B7XGzvTrH9PXbNDUTQRCRZAlZkneNopF4
      5WffY60IQRe4O3pxa0Vqlhuf47e//UvuAD1hL4qiUK2UiMcTNDQbxwEMRgQ7YywsrDHSH8Y2
      dQrlCqK4+xHcrYAMjp+int0k0NmFbdkMDg7gdTlZWVl7X7tTAEEAXzjE1tI828m98h0Rv0Sh
      CbIrQFfQhTfSS9gr755HFNHqZTKFyr7/pqMIpZLjypUrVHU3HR4R3RGkO+AisTjDRrZJxCfz
      9ns3mZycbHsse5Lgg8mJhX0xN+/GIcAH3Nn3e7xPgiDAg/z5ttFiO5Ulky3w1FMXPnA3uXs+
      QRD2nPv+1x62FODH4TAkwbVaFb8/uO9r50FwaKpAR5ENCjZKo4HkcOO609k8qqXkJ2zQJ9g3
      nkgjHj0cOiqEpTe5PbeMjcDUmVOsLcyBw8eJE8f21SFs1fJkGgKtcoaddJaJk2faSIhTufbu
      HC6vzMDYSTp8n13Bq08LU1d479Vf4TvxJU51S7zx0i/ou/wPiJgZNhIZFpfW+Na3v4VDsHn9
      pV9hCyJjZ55lsKu9i/LQLQBTrWI6/HjNEpn4GmVdotvvQrBhP+NBlq7S1FycmJyi3tLazAa1
      CHT0MNTnZDtbIFFNA9B3bJRyuolfLiFGRtheW8Zs6hw7NcLGZhqny8PpyfE2xvXoIDm8XDx3
      mpWWgOQOcPHMSbKCTWdsCJ9bwnaF2a2d1JFdMS5fHObG0gaDXWfaGteh41hquoksWCDIKA2F
      aM8AbqNIsvJoHQwfFOntdd68usRovw/J083k5Bi5VAbDNLFMg2ouTc/YSXqjIVKpDJIs02gc
      tRzoIGAzM7fGuVNjd352YdPC0BRkR/sHdA7dAnA4XWiqgtIyiI2doJFaJVM1iPr3t40QJAcu
      5247zeNuN+dFYHj8BJdOjRLPKAhansWlTXoHhmjWs+zkKnR095JZX2Q7maVvoB8si0gk0ua4
      Hh10pcLMSpLc5iKFQpa5rTw7K3Moaoue/hGcksjCtbdJlk36un3MLCY5fXK07XE9SYIPEA+U
      BBstltY2aCg65y6c2Xene784DEmwrus4HA9Deu19PGGDHjCOqrzk48oGfWKU/QFYqKqB2/34
      VW3abpRt2+QySUzJS080wHY8jjfUSbTDR2IrTqR34J4laj6zQ6mq0Dc48vBtUt975Wf8pz/6
      z/zlD36OprVoNpu0dINapYymm9iWSblUwjAt6rUKqnawriaWpjA3N8f0lXcoFnNMX7vJ9HvT
      qPt8OJVSW7z27gwAM2//mqVEgZaq0FBUbNvC0HXUVo2N9RS6rmPbNo16HdO0mJ2ZplBuUC0W
      aJkWLVWloewyFVtqk3pD+RBzVuGNl99i5vo0qUIdQ2vRUFR2nehNTEPHskFTmzTu/G5TaaAb
      n90ncKtepKiYrM1Nk8qVEF0+bk+/xfR70+iSkzdef/0e1WR+fplIJILjIczBfqgManB9YYc/
      /OffYjNdZe6dX/GL6S2+cGGCq3NruANRjkdM1vM6T587zt++ehWHN8B3//V3DiybFp1ewgE3
      jbqCJNhYloV4AGmKbYJLNGkaBqYJ2BalYpFsJkv/8BDXrl7n7KWzmJrC3PwyXSEHNV1C0wya
      tSq1eh2xWiQckLk+vUzIZTM8Oc76egpTaXD+2afvM8q26ewdJNZpkW/USa0n8Psc+Lp7qWZb
      dDgK2OFRdra3kRSF2Hgf2UITU2tx8Xx7y36PCq5AlGi1Qtz20t0ZZenmexRViVivTCIeRy1X
      UU3wSuB1S8zN3mTs5KUDEVv7TRA//KOlN2moOr/+xS8xkfj7//jbSEqJ2OgEPdEgqWydP/j2
      P0Ws5+gYGGOkO8pBPgNs2yY2OEp3UCa+naZraJSuoJNac/9n6evrZv7qNJGhY9hGi8ROCqVS
      o6kbjJ04RW80SGYnjtMXpFws0WqpCIJIKBylt7f7XhuiOzZAXzRAMV+mb3SMSHjvRFdqa4V3
      ZjYYjflw+DoZHR2kWirf+3+lXKB3eJzOcJBisYiua9gPgf34qNAsJ5lZL/G7LzyH1qwzfuYy
      o10OQgOTfP6Zpwh3R5F1hYaqMDR2mnMnj5FKt39mYs8C+NpXX+THf/NjBo5P0dkzQCTg4uIX
      X6SRWMYQnLz44nP8jz//b/jGLuKoxqmb4oFWMLRGlbm5BWqGk9GxYeqZbaq6gw7v/np2Tq+P
      ULgL2eOnPxoiFPDh87jwBEN43Z47RtkyJ89fwi+16BsdR7Bt/AE/vT3drK2u4wmFcAgOggEP
      bn+Q7v5+ClsrxJMf/qJkJs+e54XPn2MrVccnN1lcSTIyMoalF0mVVbr6h6gkltncyTA0No5T
      sD7TeZhti7gljXevXkc3TGZnruHvGSfitrh5Y4YzF59iZf42miXTrGVZTze4cKr9TcEnZdB9
      4K5RtmZLnDt14sF+2VCZX15Ht0TOnp585B4Ch4EN+ihwaBbA0WSDfhC2bR9Zo2xVVT/THmUf
      h0OzAO7CNPR7FRafP4DeamIh4fXsTyXMtkxMy6bZVLDt3Y6z54DNKD7QCLMtdNPGIT/qFten
      Q9uNsk2D1eVFDIefE6MDLM3P4uroJShrbCQyWIKDS5fOIwuQT2+TLCicmjqO1ObhgEOXdVmm
      QbVa5ea19yhXq2wn0yzPXqe8z5FItZxidSdPvVrlvelpmmqb79S6wsLaNtVSnvWtBJZl0VAU
      NFWh2VIpZDJsp7Jg26QSW1SVo8V1elDoLYVw3yh6Mc787WmE6DEKmwt4Ooe4fPkSrUaNXatg
      g9nFTfpCML/6GPoEO1we+nqiBKJ9RDtC9Hd1oOHE5zwAo2xBItY/QLQzSqQjcADRfjIsG4xq
      lq1Unp1UmmouRa5cIJ6qYtXzJOLrtBwdxNeWOZo95E8HpydAZWeFuhRmdGiItZtXyDctXJJN
      cuU2fcfP3smDFJxSB6FoDKXWfq3UQ7cAALY31hkYHcNUK9xeTnDx4gUcR0RhGXYHujVNQ5IE
      4ttJgqEAlmli2/Y94ayOjg4cDolWUyWd3EaQXL9Rhuaoo5ZdZy1vMjk2SDq+w/DkFEGXTV3V
      WUtVGesNopRzFGoOdCPH5toyke7Btsd1KBeAO9RJNOBG03TcTpHl5eV9G2U7PCG6Onbptf2x
      9hpSqEqV9Z0Cx4YHdt1odJFIOIRbtKgbEh3+EJGwj2C4i4Fjx+nyOfAHA4fzyzgguIM9jPWF
      KJbKDJ2+RNRhcOLcM4TcMhcuXUIUBFKZPD6Pi6cvX8LbOczEQPvZsf8fshyvq3a4NLMAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
