<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='date' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
      </column>
      <column caption='Categ Cost' datatype='string' default-role='measure' default-type='ordinal' name='[Calculation_1471269746390384641]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746261286912] &gt;= 15 THEN        &#13;&#10; &apos;Rouge&apos;&#13;&#10;ELSEIF [Calculation_1471269746261286912] &lt;= 0 THEN  &#13;&#10;   &apos;Vert&apos;&#13;&#10;ELSE&#13;&#10;    &apos;Jaune&apos;&#13;&#10;END' />
      </column>
      <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' name='[Calculation_1471269747387523077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ Cotal2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &gt;=  [Parameters].[ParamÃ¨tre 2] THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747387523077] &lt;=  0 THEN&#13;&#10;&quot;Vert&quot;&#13;&#10;ELSE&#13;&#10;   &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Categ Deadline' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1471269747397005321]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269746399682562] &gt;=15 THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF[Calculation_1471269746399682562]&lt;= 0 THEN&#13;&#10; &quot;Vert&quot;&#13;&#10;ELSE&#13;&#10; &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= [Parameters].[ParamÃ¨tre 2] THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable' datatype='real' name='[Calculation_2063774573782769665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Var_Deliverables] - [Var_Deliverables]*100)/ [Var_Deliverables]' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='Max' name='[max:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269746390384641]' derivation='None' name='[none:Calculation_1471269746390384641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;rouge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vert&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique ChÃ¨que&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Calculation_1471269746390384641:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Param' datatype='integer' datatype-customized='true' name='[ParamÃ¨tre 2]' param-domain-type='range' role='measure' type='quantitative' value='39'>
          <calculation class='tableau' formula='39' />
          <range max='100' min='15' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='date' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Param' datatype='integer' datatype-customized='true' name='[ParamÃ¨tre 2]' param-domain-type='range' role='measure' type='quantitative' value='39'>
        <calculation class='tableau' formula='39' />
        <range max='100' min='15' />
      </column>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='ParamÃ¨tres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[ParamÃ¨tre 2]' param-domain-type='range' role='measure' type='quantitative' value='39'>
              <calculation class='tableau' formula='39' />
              <range max='100' min='15' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= [Parameters].[ParamÃ¨tre 2] THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central/Eastern Europe-Middle East-Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='27592303.636221975' min='-35383488.506571695' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20269987.398014411' min='-18683542.601729188' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte des coÃ»ts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='ParamÃ¨tres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[ParamÃ¨tre 2]' param-domain-type='range' role='measure' type='quantitative' value='39'>
              <calculation class='tableau' formula='39' />
              <range max='100' min='15' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' name='[Calculation_1471269747387523077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cotal2' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &gt;=  [Parameters].[ParamÃ¨tre 2] THEN&#13;&#10; &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747387523077] &lt;=  0 THEN&#13;&#10;&quot;Vert&quot;&#13;&#10;ELSE&#13;&#10;   &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte par rÃ©gion'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par rÃ©gion</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='None' name='[none:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' included-values='in-range-or-null'>
            <min>-15.0</min>
            <max>58.5</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Feuille 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{15115406-5DBA-449C-A2B8-54B450912461}' />
    </worksheet>
    <worksheet name='Feuille 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='ParamÃ¨tres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[ParamÃ¨tre 2]' param-domain-type='range' role='measure' type='quantitative' value='39'>
              <calculation class='tableau' formula='39' />
              <range max='100' min='15' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &gt;= [Parameters].[ParamÃ¨tre 2] THEN&#13;&#10;    &quot;Rouge&quot;&#13;&#10;ELSEIF  [Calculation_1471269747395366919] &lt;= 0 THEN&#13;&#10;    &quot;Vert&quot;&#13;&#10;ELSE &#13;&#10;    &quot;Jaune&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
    <worksheet name='Feuille 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Categ Deliverable' datatype='real' name='[Calculation_2063774573782769665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Var_Deliverables] - [Var_Deliverables]*100)/ [Var_Deliverables]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2063774573782769665]' derivation='Sum' name='[sum:Calculation_2063774573782769665:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_2063774573782769665:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_1471269746261286912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Cost] - [Planned_Cost])/ [Planned_Cost]' />
            </column>
            <column caption='Var deadline' datatype='real' name='[Calculation_1471269746399682562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Actual_Duration] - [Planned_Duration])/[Planned_Duration]' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='Sum' name='[sum:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746399682562]' derivation='Sum' name='[sum:Calculation_1471269746399682562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269746261286912]' derivation='User' name='[usr:Calculation_1471269746261286912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746399682562:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='248' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269746261286912:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1471269746261286912:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk])</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coÃ»ts'>
      <cards>
        <edge name='left'>
          <strip size='373'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[ParamÃ¨tre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par rÃ©gion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='269'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Feuille 4'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A840D49-B220-4B45-8788-5EDC2C5370F6}' />
    </window>
    <window class='worksheet' name='Feuille 5'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' maximized='true' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[ParamÃ¨tre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' name='Feuille 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_2063774573782769665:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Carte des coÃ»ts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte par rÃ©gion' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Feuille 4' width='104'>
      iVBORw0KGgoAAAANSUhEUgAAAGgAAAAdCAYAAABG8ynTAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAE3klEQVRoge2afUwTdxzGHxdmRBkxDFQyXRUNGNBuBGIOwhiwWDaK62CZGFkwewtLJmHi
      UBkBQxcgStSF1QSNL9TACkGYbKCsvCzIMBFqMDiIIGWFsUGRECxlRnrJd3/AgJbrtXPLOLb7
      /Nfv/Z7nfu1z93tLVxARQUSwPLPUHRDhRwxI4IgBCRwxIIEjBiRwxIAEjhiQwBEDEjhiQAJH
      DEjgiAEJHDEggSMGJHBclroDizB1Qq1UorjVgEmLKzykMTiWm44ob2e7akKnWgllcSsMkxa4
      ekgRcywXGVHeM5dvHkdwWi2vg/y0Djnhsx/YJmQyR/A9d0Po5hrOMz2qwzeqU1DpX0dJ6QFI
      uLTTv6D+bD4u3riHvvHHwLPPYXPgm0jO+AS7N62cb0dCwtxKShlDSap2Mj4hIssUdZcdJBnz
      MV0dccqAWpUyYpJU1D5jQFPdZXRQxjh3/54iimPSqc68oKa/SHtjVdTlhPyJsZ3KsvZRRMS7
      lKfKpNj9xWTg6qWukPZFyCm16CY9GJ8iy4yY7pWnk4xJopIFIkEF1FMUR0xaLT2yqlqoSxVH
      kdnNZLajW2BAcUwa1VobkKVLRc0OxWZqzo6kuKIea23j5xSUVuv43mSgktSP6LS2n6YsRGQo
      pv12AjJcK6La3ywcVyx0Oz+SYlXzj4OA5qBu1NdMQJEgg7tV3QX+sQp4axtxh3XgUF+DCUUC
      ZNYGcPGPRaMjsbEGV7R+SHzL16o8aOiDt89mrHHYfwkSvzyPQ7u3YLWD0ViiSEYM55DtAs91
      Xhgbn5irCCegKQP6hwMhDeDouGQHXna9j75BXgMY+ocRKA3gmFgluM8rZnHnyiX0K96DYr11
      3aDXw3cL5yzyz8N240bNIF7Z9dJcSTiLhLGHGIEb3DgfVU+s89ajfwiAj10DPBwB3LgNoB/g
      EZu0+LpqE5Kv7bL5QYwYHgKas19FcPZsydUD23a+gQ9sJ/O/CTt+C2eSD6Nh5wlURM9/B+EE
      tIT0ai6gQ/YplOttr7yARLUOiQsq06Yh9DZfRs7ePfjxRAVywt1tRX8RFsNNBUg7fh2IPwVN
      SqjVEC+cIc7TCxtghnmK6+IYRoe3QrKR1wBeGwAztwG22hEPqBNxQJ+M73LCnZhngJXuG7Fj
      TxYqWo6CTUtB6a9OiLgwtaHgnRBEp1RiMiwDmpYWaA6FwsPmlRFOQGsCIPXrQGcXx2Q+8BPu
      Pt6ObS/yGiBA6oeOzi4sdhjAdi4x2waNegzxCa85Fc5iVmPVqqfRGVF5NBUN/rnQnEmAL89I
      KZyAIEFI+FpUl2thsqqz6K6pxrBCjlBHq6OQcKytLofW2gBsdw3kHGJj5Xlc9XkfSUF2jHva
      cGuce/Vn0taiyY9B8PP8feKCbbuMsz0KfJEVteiNWYTD5f2/iUVHJ7k2qmHpVGeztzHXpRMT
      lEQlQ1YGpDvJtVENs3OvSMq/zbUfmeVuIcnDbDeUj+jBtxkkD5NTXivP7ohnH9SqZKz2Onys
      IBLYHxedOuoxovxDOS5JClGVFWozPDk46vmz1fXDiC6VoszeUcws7O8/44dzBY6PZAbUSHz7
      K/TweM0cIbFoymRwhPPsaK7h3BGS8AJyht5ziE8ZxWdVWQh9uslj2bAMl9ks2qoaEJKn+c+H
      AyzXN+h/xB/Ilsfi5sjf+QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Feuille 5' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
