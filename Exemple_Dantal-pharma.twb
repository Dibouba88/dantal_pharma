<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <range granularity='0.05' max='0.0' min='-0.15' />
      </column>
      <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
        <range granularity='5' max='30' min='-10' />
      </column>
      <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
        <calculation class='tableau' formula='85.0' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
      <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
        <calculation class='tableau' formula='&quot;delivrables&quot;' />
        <aliases>
          <alias key='&quot;cost&quot;' value='Cost' />
          <alias key='&quot;delivrables&quot;' value='Delivrables' />
          <alias key='&quot;duration&quot;' value='Duration' />
        </aliases>
        <members>
          <member alias='Cost' value='&quot;cost&quot;' />
          <member alias='Duration' value='&quot;duration&quot;' />
          <member alias='Delivrables' value='&quot;delivrables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[F11]' value='[cleaned_BigPharma-ProjectData.csv].[F11]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
      </column>
      <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
      </column>
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calcul 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Actual_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calcul 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Planned_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
      </column>
      <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
      </column>
      <column aggregation='Count' caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
      </column>
      <column caption='Categ Deliverable' datatype='string' datatype-customized='true' name='[Calculation_2063774573782769665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables] &lt; [Parameters].[Paramètre 1] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
      </column>
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Attribute' name='[attr:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Avg' name='[avg:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cum:cnt:Actual_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[cum:sum:Planned_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='None' name='[none:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2063774573782769665]' derivation='None' name='[none:Calculation_2063774573782769665:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual_Cost]' derivation='Stdev' name='[std:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Stdev' name='[std:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Stdev' name='[std:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.844749' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.155251' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2063774573782769665:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Calculation_1726004602423439360' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_860187577585688577' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_1109292929463463937' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Var Cost2 (copie)_860187577584152576' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Categ Cost2 (copie)_1109292929746456580' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Calculation_1109292929877172230' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1109292929876938757' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_1109292929462259712' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Categ Deliverable (copie)_1109292929463627778' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
          <range granularity='0.05' max='0.0' min='-0.15' />
        </column>
        <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <range granularity='5' max='30' min='-10' />
        </column>
        <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
          <calculation class='tableau' formula='85.0' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
        <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
          <calculation class='tableau' formula='&quot;delivrables&quot;' />
          <aliases>
            <alias key='&quot;cost&quot;' value='Cost' />
            <alias key='&quot;delivrables&quot;' value='Delivrables' />
            <alias key='&quot;duration&quot;' value='Duration' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                    <column datatype='string' name='F11' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='29524580.761088483' min='-21797503.283543896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='21241815.303664804' min='-8307262.7398131508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte Livrable'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
              <calculation class='tableau' formula='85.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='21826300.539520733' min='-19153184.252250321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='16329456.743621644' min='-5864865.6716618836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deadline2 (copie)_860187577585688577]' derivation='User' name='[usr:Categ Deadline2 (copie)_860187577585688577:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte générale'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.0'>
              <calculation class='tableau' formula='85.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6751B8A-A9E5-4812-B726-82F6460F57DF}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Paramètre 4]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <size column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Ecart Cout'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a90c38</color>
                <color>#ad1a43</color>
                <color>#b12a50</color>
                <color>#b63b5d</color>
                <color>#ba4c6b</color>
                <color>#be5e79</color>
                <color>#c37087</color>
                <color>#c78497</color>
                <color>#cb98a6</color>
                <color>#d0adb6</color>
                <color>#d4c2c7</color>
                <color>#d9d9d9</color>
                <color>#d2ebfa</color>
                <color>#bdddf0</color>
                <color>#a8cde6</color>
                <color>#93c0df</color>
                <color>#81b1d5</color>
                <color>#70a2c8</color>
                <color>#6192bc</color>
                <color>#5484b1</color>
                <color>#4776a3</color>
                <color>#3a6795</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{E758928F-CA90-474A-BD87-8225A85D3413}' />
    </worksheet>
    <worksheet name='Ecart Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</cols>
      </table>
      <simple-id uuid='{31F5F1BE-8838-4194-9268-D2588863C3BB}' />
    </worksheet>
    <worksheet name='Feuille 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{B89E13BF-6FD9-4E8D-AB0F-5F96806C8EDE}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='292' />
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
    <worksheet name='Table de duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:F11:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='403'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Table de duration'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='283'>
            <card size='24' type='pages' />
            <card size='85' type='filters' />
            <card size='256' type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' size='33' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='66'>
            <card type='columns' />
          </strip>
          <strip size='60'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' name='Carte Livrable'>
      <cards>
        <edge name='left'>
          <strip size='287'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_2063774573782769665:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[min:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
    <window class='worksheet' name='Ecart Cout'>
      <cards>
        <edge name='left'>
          <strip size='246'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[io:Ensemble Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38670E7D-862A-4F62-AC6C-885237391965}' />
    </window>
    <window class='worksheet' maximized='true' name='Ecart Duration'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC9D0A7-3618-46CF-901E-8333BB434D13}' />
    </window>
    <window class='worksheet' name='Carte générale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD5A2839-5CE1-4952-AA8D-ECCF1B8CADA5}' />
    </window>
    <window class='worksheet' name='Feuille 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14F580D2-B448-4673-A8C6-367B5BD01F7D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte Livrable' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte générale' width='192'>
      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
      ERwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Cout' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5AkZ3bg98vMyixvu6urvbfjMYMxcAss3C7W0B9FUjze3p3+EHkRFEPH
      UMSRR4akCMZJvJMUCoVIinI8iXK0yzVYB8wCgxkMxpv2prq6q311eW/S6I8GZoFFz6B70G5m
      8vfXTFXmy5fZ+er73vve955gGIaBickTirjfCpiY7CemAZg80ZgGYPJEYxqAyRONaQAmTzSm
      AZg80Vj27Eq6RjKTJ+D3kkwmcTuszM5FsbkD+Fw2PE4bmbKBoJWxSCKK3UUhl0WxSCAK5PIV
      REPFUxdEkQQEQdgQq+uI4s7bsWEYGIaxK7J3S+diucr561M7LvegY1NkXj0z8KnPt/Kc984A
      BIHZqQkcJ08RmY1gk0U6evsYnQhTdFjxdAZZjmuI5TgOqwVPQxvhcISmOg8Wl4uJyVka6/24
      6urRdQNJkoDde5l2U/ZuyU3lSvz+n35nx+UedBr8rkfBAEROnnqKcHiGzt4BvHaBuaU4QwM9
      iAigKLSHDATdgSzC3MICA4cOI6MiKjaO9GvkqgI2SUTX9T1T+1HCaZP5x2+cvjc67iSGoSMI
      u/ND83llux3Whz5XeBRXgjVNuzcCqKqKxbLzdmwYBpqm7Yrs3dK5VlNJ5Yr3ns1Osls6f17Z
      HqcN2bL5/W5F7t6NAJtSYXJihYHBzv1V4zEhli7wld/50/1WY0/583/1K5w90vnQ5++zAeiU
      SxViy1FWV1bxt3UzPzGB3WahpaefhfAMggEt7Y2EZ9eQJIPTZ86w8wO8yZPKvhqAoRsgQiKR
      xCLqpDIF6kIt9DU5GF1cI9DYSYNSIJqp0N7dh5pfRtPBYlqAyQ6xb+sA5XyakbuTNHW0YrFI
      iLIVl93K+soCo3Mx+nu6qWRWmF0r0BYKYLNasDuciObLb7KDHCwnWK8yG12nu7PlgYeZTvDm
      6LqOYRhPlBP8eeXumgEkk0kCgcCnPl9ZXibU3LzloaeUzyHanFgtPznDNIDNSWWL/Lv/6+0d
      lwug6wbiLg2/Dyu7r62Bb3ztLOVClvmVOK11Tt6/dodatcqzr7yBSzbQ1Qrh+WWG+rr44OJ7
      ZMsVmjuHcAs5FlPq7vkA8wtR3HaJ0ckoVoeD/p42piamiCVy+H0upmfn8dc1Iao5MrkS7kAD
      dsosrafoGxhiYWYS0e6hwetAVmyEpyZRRTv9PZ27pfIjT7FS4zsXR/dbjT3juWNFvvG1s6ys
      rDA9G2Wg9zVee/11vvftb2FXJDBUVpeXmYrMMjTQx7kvfJGF8ausFLPMJwucaNJ31wfQqkU8
      wTZsRoVoeJaG7kEag35mIvMMHjpKen2ZZL7M4KFD5JLrTM6E8XvsTIyPk84VcTqd5LNpMsk1
      1pJlMmtLZCvqbqps8gjS1TuAyy4DUEwuIvtbsX44C2zv7sPr3FgoMwydu+EYpw73YeRWmF1P
      774TLAACAopNJrkeJ5PJ4VQsrK2vU9VAEIR7x9isVnQsNDc10tbRTnQ+AoCk2BAFjUBDIzaL
      mb9n8knSyTjJZIpyVeXq1Vucfvo4WinD3FKcTCpBMpkknc2TmB/B2zqEJCs8dfIUDqTd8wFK
      pRJWxYKqi6DXsChWkutryHY3Hped9dgaHn8D6DVsNhvlchmLaLAWTxMKhcil4ohWJw6rBdGi
      UMylKKkCwYAPXddNH2ATsvkSf3P+9i4lBx68VIiWBi+vnRlkbmaCTKFCR88AglbF6/WwMDWM
      UNeJkV0lmS3irWuk3mPH5vZgEQzWlqJURccBiwJ9BuVyGavNhm46wZtSqdaYXUogSTv/on48
      8LBfsiVRpKe1fstyD3wqRHpljoJcT9AtUdPAbpVRNR0EkVqlhGy1I1tECoUiDoeTucgc/UOD
      +6nygSaeKfIr//ov9luNXSPgcfDjP/3tHZW5rwag6yqarjJ8Z5xgUzM2I8tItMDJo/1kMyni
      ySwBh0RNUqiporl7x2THOQDvlERrcwOra6uohsjhY8fRyxkSqSyZbJZkKkWlXGWXpp8mTzj7
      OgIodjdOSSKTKeNwOHG4vAiyiIwDi5jB7w/Q3RxgfmUdl8uNxaghAI+M07LHSKJAwOPYbzV2
      jd24t0fKCf4IcyV4c8xUiO3L3dGrxmIx6nwu1hJFmps+7q2rjI3NMnSon3IuxVKiQG9n6wNl
      ZTIZvF7vTqr32JPIFPi9P/n2rkSBDMPYlZ1mW5E92NnI7/zKiyyExykrAfraGnj3R29SwcNL
      r30BhY1Q6sV33uWZF19iLTpFASddTXVcvfI+quLl5OEurl65juQM8MzTR5m8ex1v5/GdNYDl
      lSX83h6KpTLz4UmyRZX+Q4ewSirr83M0tHeRXlohUShT77KwuBKjobUbtZQh5HexklOpJmNU
      JDtep4LdAhPheULNbaRjS2iSjcH+np1U+bGiqupcHYvutxo7jm4Aeo1aTWclFaO3XiRWcPKl
      155G+fCYhbkIk9OrnH5epWrIrC6H8WlJKtYmxMQMKbWXs8+9wPkffJdUrhNRLTKfLO2WE6wx
      PT2LWkoSWUgAUN/cSmJliZohYLUIqKqKIMHi/CLZbAa9ViKdL7KWzDPY20k2k2EmEuXw0WN4
      5AqLq2nWonNmKsSTiqjQ3taMIIAheznUU8d73/s7VvIaGDrJ9WV6mrwgynS0tiAKYPcEWJi+
      yXw8h9tmY/zWJWLZGk6Xh+bGOmDXnGCJYEM9vroggQYPoCPJdqrpeVytJ6jEZlmNxXF73VRr
      NSqlAtGFEpo1iN/n56PRMOBxMDMbIeB2EAh48PnacMoSphv85KGrFcbGRgmH1+gJ+cmXqoCE
      XkoysVqiUFa5fusmDYeOQD7GzEwYr03GVdeIJbfM3FwEVfZSb00QT6RYGJ9ipprfWSe4Vqth
      sUhomgGGRqlSw+V0IAigqjqGriHJMpqqImJQrmlYFRldU1F1A1lWEDCwWCyoqookSRQLBRSb
      HV2tourgsNvMVIj7UChVPqwLtPNz9f0sPxP0OTl7uI31eAJdN/D666mVsmCxUVhfRA52UO+y
      Uq1UsMgWEvF1NB2cHh9GtYghWfE4bSSTSWSbE4ciEU+mANGMAt2PR9EASpUqNycWduVFfdhU
      iFDATXfLg9MXHpso0MNg6BrhmSnGJ8OcePosQY+NXFmjPuCjVMiQLVQJBuvJpxMIihOPy77f
      Kh9YktkSv/XHf73fanyCX3r5BH/wz7+832rcl303AEGU6O0fIles0hL0cHtkkqDLwny5RCqe
      xGnR0bQSqZyGXlqg7/BxFHNV2GSHOFCvkqHVsDnchOp9pFJpPP56XE4HlVIRX10DHruVqqbt
      t5omjxH7PgJ8RENDEElx4rKsMLlU4chQP/PTk4TX1jny9Bli82EEqxuP1WKWRrwPFkmgt7V+
      1xasHoaGgHu/VXggB9YJNrQa09PTVHSJQ4P9SB/bNG06wZujfTg6mqkQW5e7rwYQnZ0mX6pi
      c/vpam++b/BO12rkS1USsRgd3V0YpgFsSiyV41/88V/tuFwAw4CtDix/8Yf/mEpqiSt3Juge
      eoqBzkYA3v7+t9AtLp45e4oPrlxFReHM8T6uXr9DIZvhC69/iVtXr+LwhzjSWc+1O+PYPPW8
      cPYpEithxhdyPHdygPNvXyDQ2k2Ty+DW2AwDx89ira4zMh7h2Lkv0OR3Ao9AFChf1RgcHODm
      7WHslFlJ5mhtrGdlLYEv2Iiaj1NUJQa6Wsjmy1Qqlf1U98BTU3Wmouv7rQa6oXPt1jhf/sob
      fOvb/8BA58+BnmMhmuKVrz+D0+XhlVde4YMf/j1F63O8+tqrvPnm90mP3aHl2DmiVy5gPX2c
      V77YwN9/+0004xg374xT1STev7BMfWsnLa1NXLl0ia+88Qbf/odv89rrr/Kc08Kl22Gavnhs
      y7ruqxNcyacZH59AstrJZTL0DBxiKTqPRbawEI0CBoZuoOsqhbL58j9KDPW188O3zrOWyW98
      IDj46s9+maXRy4yv5hm/dYWlrI5NNIhFRgh2HcHZ2MDktQsUVB1BF/jgvbcxBCu33vsRvvZe
      stkMq/E4Po+Xt374Q3o7G3jr/DukckWyqThvX5vnpReObEvPfY8CCaJAqVDAotiwKTKhUAOa
      ptPW2oqiKFTzafJm/s8jh83pRDRU+nsPMz18g7VEitt377CczCOVUyzFc1hFnWy5xo2RCKcO
      dZLLZbFYLNTKeaKRSQqqBb1UJNg1hFLLk05nOHHoCDfv3EWQbbgcTlDL9B46wvgHb2O3aCyv
      Jbel5776AJ++9Ba2uwiCuSn+PpTKVW7s0kqwrmuI4tac6zOHOz4RtAiHw/T0bJ7FKwjCT56H
      YWz619+Iahls9U39KAp2YHwAXVMxED+Vp/6RouVcBhwebBL8dB6LptZAtHzigZpsjqbrJDKF
      XaoKod9X7rkjndT7XPc9t7e3d2sX+bBG1H2+3LITvh32xACysShpoQ6/XCZbFWkOeikWipR1
      EatRZnJ4hK6zLxGLhrF5g3jsMulkAsnuxSaoWFxeSokYVcFOY71vL1R+JMkUKvzhn7+559f9
      X37/Vx9oAAeZPfMBtGqBueU0UilBdHmJK9fHcSkakdUsbU0NGIaGpNgYHRkmtjxH1eJibSlK
      LpMin02wuF4gsxalWDNXgk12jl03AF3XqVRqSBLIihWbTaGmavT09WExVBS7EwyDfHyNbFnH
      ZlVAkvF73FikjQFKU2vEVpYpVQ7kmp3JI8yuT4HS8TXSqkJvexOrixHiRZHOtkZKFQHZZcMZ
      myGjSbQE61mMRAjUBfH5fVhlkWAoiNUiYXG46O8uUVRFFEkEw0yF2AybYuHc5+iX9SAMDO43
      Q/c4bbtyzb3gwKZCPAgzFWJzzKoQ25e7J07w6O0bdA4dJxlboqW1HfEAJWs9TsRSeX7tD/5i
      V2R/lArxe9/4Ei8dCXL+4g00Q+SVV19GkQSuXf4xqVyNoeOnySxNML+S4NwLLzF67QPyxTSB
      tuNU4rNkayKvv/4q73zv7xFtXp554SUstSx/8/13+Udff4W33r6EYPfy0plB3r5wFdnu4eUX
      nubd8+dRfE08d/r4jt7XnhiAIMD8XBS1kqXe72V8eg7BYqXJbyW6lMTltNExeJjlyAyKoJHJ
      l2jo6CO9NEutWiLQPkR8YRpdtHLs6OG9UPmRRNMNEpnirl6jUlOR7H5ee/WL/Ojbf0euqlNn
      l5genaD18BmaGzzcvZ7kSy8/x1sf3OHLr7zK5bffpM1XYVTt59n6NNeGw0xPhPnC138Jl1Xi
      4sVrCILG/M1rdJ59mer4ea7fuE2g5ylyox9w+4NLFBUXzfVbL4y7VfYkCiQqDlxShWxJZT22
      RvfAYVyCRqZYpOfwMQb7WolMTVEzZBaXl7AoEmtzsxh2Hz3tjWTTaySzVUrZNPmquSq83wgC
      jNy4QlW0o3+Ygfqr//w/5tRAE99+610kSUS0WNH1Klo5Q0J10NwxhCM7xc3RadSqxL/4l7+L
      LRvh/LsXGFvKkVhdxN17hPmrP2YyEqVi8bI+e5uCYBCLJek7fILl4Yskyjt7L3tiAJIk0drZ
      TSK2Sl1dHeGJETI1A5fNhlWWEK0+8vFFmlqaaAw1YhgSTe1tVDIxpsJzKA4/XpeCty6IQ96d
      Et0mWycbW2IlVUTTNEqpBa6PznP10nkuXrlJW0sHVkHlu999k/7Bp5i4e4djT59GEMBikSnW
      bJzo9/Gjt95ifCFJz9AxvvrKM4RCjThtCqIsodT10huQqWk61WqNp58/x+133yKl2nHKO3sv
      B9gJ1olMz5BIJuk5chK/U7n3jekEb85H/QF2MxWiqd7ziajP2vIC3oZWbJ+jefNj7wR/nHw2
      RbFqEKwPfEbxDoHO3j4ac1kMed9z9h4JKlWVy8ORXUmF0HWdf/r1Zz71eai5bcevtZfsqQGU
      UqtMLeXoCAWolPLMzS3Q1N6FVsqRTCYJtXVRy8VZz5Tp6ekiE18hPDlL51OniC/NgeKmrTm0
      lyo/UuRKVf77/+/dXZO/mQE86uzpT+vCQoyBoR7qgnWICGBoDI+Ms7CwQFtnGwuRKIIgkIvN
      EY4us5Is0tnahGBsJM5Njg9T1Q7ojM3kkWRPDSBU72ZhKU61UmFqaoq2rh7sVguKzYGiyIiC
      SiS6Rl93O6paQxBEqtUqpVycXE2mMehHP6gui8kjyZ5OgbzNnZQWo0QXS3T3dLG4tEJ7WyuK
      RQQkmpqbqRTSpKsGbc2NlFKr5Mt2mutDaMU5pPomFElgy4nhTxh2q4WvPneI3SiN+LjWYz3A
      UaD7Y0aBNkfTNAzDeKR03k3ZByIKlFycZz6dBw2OHTuM9FM/Tpn1RarWIEGP9TNlTYxPmF0i
      H8BqMs9XfudPd0SW3+3gnT/7bSZuvcfMaomungEO93cAkI/N880Ld/j1X/oZkktT/OhKlC8/
      18ulGxPIDjfPnOjnB9/8Ma9/45eJT95lYnaRuuYeGm05rk/F6e3rw1ldY2QxT2/fIMX1CMlM
      jpLg5kR3gMm5VQ4df5q2kH9H7uVB7LoBVIoVugYHiY8Ns7A4TyaVRbDYsAklMnkVK3lS2jrd
      TQFc9U0sR6ZobvAzt5ygpsNQVxPRpRWsrp1fBjf5bKKRFSzeEMFgAABDV7l8ewq/3cDQqlwf
      jeIWayTWFgi09hCPjCHZT9PbFKIGTM7O8errX+O73/o2NZuORfESamhg9L3byM46Qg11+Lqa
      iY5epejt5/rl71HX2Ird/tk/iDvBHjjBKtPj40j+BkrZHEePHgGthKoaPHXqKZobQ3T3DSIL
      G8O3WlNJJDIcPnYMt10hk8mAKJJKbm+zs8nO8Pov/DKvvnCG9y6cB2Dq2nmmlxLcuXWbt777
      TaLraW7fvkk8A7VyBt1iQZAs9xIez558igvvvEO6WOWZN36er73yPBcu/Jgv/uwv8qUXz/Hu
      u+cBjZG5JIc769EEK88/e5r3331nT+5v10cAi9XJYHcrbotEOmYwPDyMbHNjl3UkQcDlrSMy
      NUlXeyNzM1MUSlXaW+oZGxkhXyjhkN0IgojNJmO1HphKjk8MIzc/YDmeJtTcycV3znP6hdf4
      zTNw6eI7PPf8S4DBpXfep7nBw63wMpouklqe49bUGPN2mac7QmhajWPHnmJm9CbzS3EaQi2M
      37nK0lqKxqZ2EgsztB8+hQAc6mvhrfPv0tzRvyf3dyCd4EImwdziKoZk48jgp6sJmE7w5tRU
      lVS2uOXqDQ9CFCHgcd77v6qqJJJJQg0Nn1v2T/NYO8EfoVaKhCMLtHV147A+OKPJ6a3jsLfu
      U5/H1mIEQzv/B3hcKJZr/OX3r39uOT//0nG6mj/9/Hfj5d9v9swA7g6PcvTECfL5EuXMOqvJ
      Av297URm56npAoMD3czNzCC7/DTXe5iZiSA7PYR8duYXV2lq6yKZTFJvGsB9yZeq/PvvXv3c
      cs4c7tjUAB5H9mwluL0lxN07w1Q0jZnZKA0emAovUqzJ1Ek1IvNRioKdpYV55mZnae7qpZzP
      IggCgqEyPTW7V6qaPEHsXSqE7ODE8cMszs9TrRTJlwUCXhuKoiCJAqIkkUmmcLk8COjUaiqF
      Yonw7DxtHe1I4oFzVUweA/ZsCmRXRKbD8xw7dgytnCO6vE5rfQMuj4aCF4/NiV00UCUnIb+D
      +egCiBb6+zpZWs8w0NeFwJaKJz6xOG0yv/7lpz/3foCW4JNTfOxARoEqxRyR6BKh5nb8Hsen
      vjejQJuzEQUqPfR+AEH4ZOTn45ipEFtgbTGMq6GHj23e2lCkmOLq8Aw20aDn6Em8tgdf1tCh
      q7cPq8Xc/rgdYqnC50qF8LrsXPif/pMd1Ojgs6MGUKtW0A0AnZmJCdbTRU6fexp0lWBzJ0Eh
      STyZYWJhBsMQ6WppAE+Q1cgkAY+NWFZF0wza6l0o3jruTk0iGNDS3kh4dg1JMjh95syu5Dqa
      PJnsihOsl3OkClWq2RwftbWIhke5OhWnxVkjX9FQBJVi7WOzL1Gmb2AQj31j+KiUcgQaOxno
      CJLMVmjv7iNU50Izi8KZ7CA7OgIoskx4aozmUABJFHB63EiAICkMHj6BXc+zlhdo8rswRAv1
      dR5mIjMUKxrNdgcWUcDhdGC1ychuH+nwFLO6RFdHE2XdgqY7Maukm+wkB9IJ/ixMJ3hzPiqN
      +HmiQPdrsWo6wTtIen2VpfUk9aEWQnXeBx5byucQbU6sFrMyxGeRyhX5t//n29uKAv38S8d5
      eqiN9cUINXuQ5jo3oHP90gWShSrBth4aHToT83FeeP4cqZU5xufjPHvuaRZnRllMlDl39hSS
      YHD9xk1OnzrJ1NhdYjmNc2dOMjt2i6Lo4cShHmYnhokVRc6dPEKtlONueIlTR/Z3f8e+GMB6
      PE3/0BBjN2/hsLSD1U8uuYZdEVlajdPa2UMsOoto99DgdSArNsJTk6iinf6ezv1Q+ZGgXNX4
      3uXxbZ1zaqidp/sbWJwLU/CJHxqAyNPPvUQycofRbI2bUws8c6qVty9ep5xc5sWzA7x3+SrZ
      9SIvHHPz3p1lum1rXLhxi6ePHcLqb6FDHea9a9cp12wEK2NMSFVW8zbOHt4oo3L96hWmk8V9
      N4B9+VnVqyVuXr+G6PBQy6coVHXWY+ukMxkk2YpdNkjnijidTvLZNJnkGmvJMpm1JbJmw7yd
      R7JxeKj3k/6VoXNpZIHnj/WhSHluTcfIZsJYxQDeUA/l3Arl/AI/uDhCd6PCxHKeofYgguLA
      yC1zNarS78rT2NZOe2sdly6Osr4+z9//9f/L1PQkor8Lz2eEw/eCfTEAUbFzaLCPSqmILohk
      00lS6Sy+QBC/y8Ls3AptHe1E5yMASIoNUdAINDRiM6dCO46h1Vhbj5NMJKiUc4Qjy6RXZnCH
      ehAEiSNPPU2DS6C3/3mqeoyJOx/g87eiu5s4fWqAsTujaJUCN2/dZnJyhLevTvPs6eP4mvuI
      jN7i7uQqX3r9BFbZRUu9m2SuRGolzO1bd0jm97f97b44wZVyGcVmo1oqIFgUUvE4drcXuyKw
      Hs8QagqRTawjWp04rBZEi0Ixl6KkCgQDPnRdN53gTcgXK/zN+dvbOue5Y130NLoYmZjGMATs
      koa9aYB6aw3J7kGRBBJrSyRLBn2drZTzaRZiWfq620nGllnP1ejv6UAAstkMLruV0YkpdB26
      +4eoZNaoig6aGwLEVxcpY6O1cWN7ayabxevx7KsTvE9RIINyuYrN9nD7Ps0o0OZ8VBt0K05w
      W8iP/TP2ZXwcMwr0OSmuR1nVfbQ7q0zHywjFEn39nR/2/dXREdBqFUTZilArUhMdWCWdSlXF
      6XRQq5bRkTZ6iJlsSjxT5Ff+9V9s6di//C9/g6M9zbur0CPAnhmAoWuomoFh6KiahsXQGBke
      o73Vz7W7UZ4+dZR8NsNaPMlAk5+8zWBueJQ6nx1nYzurCwuIgsHhYyf4HIWITUw+wZ55lIIk
      YWjaxrRCspBcW0STHciSxODhY1j1CrFEklQ6c++cQH2ItuY68tkMuVwJwRBQdTMXwmTn2Lv9
      AIFm9LFxJpPQPzSAV5aQKFPUZJx2GUUBRZIIBALIdid2WQGvG8kqUR+0I1RLqMgbXSLNHQGb
      IgoQ2CR9fDMsu1BC/VHETIW4D4+iE2yWRty+3F14c3Smpmbo7e8jvbyAEmonuRKlva19xy9l
      8knS+TK//6ff/szj/ug3v47fpXDj2lUOnXwGpyKCVuXqlQ/IVgReeP4c47evk8hrvPDCOe5e
      vUzesPHic08zdusqyZqVoTYvN4enyeWqfP0X3mD4yvvo9nqa3QKjM1HyqsCrpwa5eGuUUGs3
      x/uaef/yVUIdAwx0tezB09gaO24A1WKa5HqMtVA7lAqIOhQKBeIrUZbX07R1D7AcHqGqgWKz
      Y3V4qHdZWFyJEWrtppZdI50v4G1oI7U4hy6IdA8OsjQ7jSbZGOz/dJ0gkw3KVZXLw3OfeVyl
      qlLMliiXc+Qr2oYBCBJHT51l6faPGV5I091/BO/URS7fvIkmN+COj3BnxE6iYuPEQCd1fi+v
      Nbbx7e/8gOjwNTRniL72JvxeN03tHXz3h+8xMTlJ99AxultCXHn3LVr6jxCqO1jVJnZ8Ijgf
      DmNxu4hMT33i84mpaSySwOTkJKJip83npKF7kFopj6qqiBIszM+RKmgc6mohUywiWd30tvhY
      XFpgcTXNWnTOTIXYIVz+eup9rp98IEqsRsa5PLFKS52btfAIoxkXZwc7WJu+zcR6geL6CuVK
      ife+9w+sl2Fl+g5NfcdZWl2iWsrzvW+9SRmYunWNgRNnGDxylHJqje985wcsra2TTcR48/s/
      3Ld73oydNQDDoCo5OXXsOD6bwMebuQTrgzjdHnq7O/npjNvV2DpOpwNBEFFLOeYXF9E0Y2Pn
      lwCK1U0g4KGzrw+n2SVyR8imYkxOhZkYn2ZpdoLl9QSJvMpgV4jZ8VHeujZJW9DDyuIqjroQ
      DS4RR3MH1WwGSZaRBIMb44ucHGjhcP8Q6UweWVYQDJXJ5Sx9TT4S8fhGg21RYqi3jUK5hiLv
      cJvHz8nOOsGGQU3VkGULaq0GgoAoWdA1FVGAQqGEw+XC0LUNy5MkdE1DMHTKNQ2rIrMUmWJp
      LUnv0ZMEnBslU3QE1GoFVQeH3WamQtyHrZZG9HvsqJUSqUwOQbRgGBrBYAP5TBIVGb/HTjye
      QDfAX99AtZChqovU+b0UcxlUQcbjslOuVLBZNzpG5jIpBNmOy65QqahYbQq6ppJIpvD6AyiS
      SCqZwOHxYZU/ee8HJhUivrbEejJPR/dnly9E11hLpAgF6+/926HIODzeT/UA2BRDZz4Sxulv
      RKuV7pXdW56fxdfUiUO5/+BkRoE2J50r8j9/8/0HpkL43A7+2dfPbVv2ExEFiiWzDPb3cvP2
      KEeHugnPLdLS3k0+uUy2UKats5dKMY/HqZAr6YSnJ0gkGujr6SSRSmOt82OgEW7Fp6sAACAA
      SURBVJmZoarLtDX70WUPpUwCj8dBeHaeprZu/G47kyN3CHYOYhUNpmbnSMXjNHX0IIkGY+OT
      nDw6wOL8LPmqQX9vL5YtWdWTTWELtUHbG/0PZQCPK5/4qSjnM9wdHsHp8TI1OUUw1MDMzDSp
      bJ6+3k7m5+ZZX1unVsoQT+Vw+eppq3cwvxIHILm2TnJlDouvFalWppBLkClprCyvMDExSbCx
      idnpSQCKuoDfbcfpdCApNvr621kKR4ispqm3VpmenaUm+7BLqtkZ0mTX+IQB2Nw+moM+DEQE
      QyOZzuHz+REEgWqpiCQraJpGLptBM0AUBIqFIlblJ1mdggDVWo1ioYggCNRqVTLZLBIaiWQG
      r3+j7Y1N0EnnyxQKRSyygmSREASRciGPJik4rTK1WpVCoYiuVsjkCqRTKXMN2GRH+cQUqL2t
      DZfDgZxK4e5qZm52lmBjEzOxeZYTXvp72snEV8lXoT0YIJOoUpWctIb8FNx2RMPA5nRQXZgj
      g4S7oZPs7CyDR45S53MRmQlT17ixIDZ49ATRSBiHL0R7Wxug0N7VRltbgJVkgeaWdtZXFljU
      9uOxPJq47Aq/8ZUzDzxms0p7TzJbigJlMmm83u3Vi8ylMzh8Xj5v0DKfy2BzerB8bL+e6QRv
      zlZKI9oUC86H6L/1RDjB92O7Lz+A2/fpag/Dt68jKQ7qG1tpCHgAKBfirCahs23zJniSIKLp
      xicMwGRztlIa8T947SS/943X90ijg8+e7kpWdQO/x4PdKnH9g8s4/UHcSpmpcAaHXGV+cQ1V
      02mqt5PM66iaTmvAidVfz52JCQzRwlMnn/rco4qJyUfsaU6sJCt4PB4UWaGpsYFiMY/bF6Cj
      qwetXKBr8BBNToUCMn39g3hsH5ZJLGYolnUkXadq1kY02UH21ABkwWBxcZFMrkClpmKxyFjt
      PoqZZey+epbCE2RFK0GnA0n6sEyi3Y7bFyQYcGB3e7CaeewmO4i5H+A+PIpO8Ef7AT56Nvfj
      fuUPH8QT7QRvhq7XmBqbQFAcdHV3oXyqXo/G8vI6zc2NqNUSZVXE5bhf9EFjYmQMZDu9fb2Y
      pX8ejkyhzL/7y7cRBAG/28Hv/vorqNUSk+Eoh4cGANDUCndv3gBnkKN9LVy9co2W3sO0BBxc
      vXqVUOcgQiHGTHQVye7j3LFurt8aYej4KRLRcRbW0jj8IU4NtHL11ihPnT5HZnmasdkl+o+c
      pNlvIxJdY3Dg0Uhbf+hXzdAqSDYvzX6ZyOIaa7E45XyKRCrH/OwUM/PLZDNZVpcWqNaqVFWV
      6fERhoeHyZcqRKYnGZuY/jBjVAXJweBAL7VCitHREZZjKVYWIoyMTlCpVpkcH2EqPM+jN17t
      HaWKyncvjfGdi6Ocv76Rjh5bWWFiNnzvmEohR2v/MZZnR/ng3ffoOnqaG++/w60rP6bt0BlG
      r1+mc+AYr7z0LMV8lkuX3+f0mVO8+86PGTp+hhfPHSefK/LOhfc4efII7713kcnICq++9jpd
      zfWsLi8Rnojs0xPYPp/rt3ZpfpbRqSgBn4tkMkWlmCGTLbCwlqKnvYnYYph4XkesFckUyqiG
      hcHOEMvxDKIkEl9bIl+uAbCyMMfE1Cy6ICKKInNzEdKZDDaHg9z6As5gF4paIFup7ciNPyk0
      d3RT97HFL4cnwOL4Naz+Njo6Grl+6T2WUxkaGpq58NablLAiYDB89TLHzzxL0Ofl4vtXyWRL
      AFy9cp0zz5xGkATc7gCaUaat0cePvv8dLly+S0fPAG77o1O65nNNvALBEI1+hVgijVousR5L
      g7uN+mAQQYBgcyelfJxafRPAvX0AWqVAqljD5bTd29/e1NbJYH83E6N3qW9oIpNfpKGxmeTq
      IhnBTykfQy9VCEkS5qb4rZPLpEglUyTTWdKJGJZqmrm8lWeOd+CxSxy3BxAEgeXoCieePs3d
      G1fQ1TLRtM6JOgdufZC6QhZDtKKWkmQMDwG7hCJamJ4ew27zowtWDg10MzGXJZOMk0qlyOQK
      eN2b9xs7SDy0E2wYGqvLK2CxEmqop5BJUjMknE4nhqFjsyqUy1UkQUM1JCRJQtdUrLKFqgbF
      bBJBceB2OZFEg3K5hs1mRVcrxBJZvB436FWyxRoN9QGyqQQoTrwuu+kE34dsvsTfnL+NKIq4
      HVZ+8eUTLC/Msp7M4fQESCXWOTzQxfRsFCSFof4uZsMR2rv7sMsQnp7CF2on4JIpVA3cDhvl
      QobIYozurk5EvUpNUHBYZXS1wnR4nu7ePqqFFNGVJH19PSzNTpEulPEHm2hv3lpT8wOzH2A7
      VMtFcqUadf4H1/e/L7pKuQY269ZvvFIuo1ht6LppAD9NfnYRtVLF3d/xmVGgh+FxjQJtywdY
      iUxy9e4Euq5x9/YddECt1SiXKyQSCTAMioU8pUoVVVUxMKjVauiaSj5fuOfAamqNXGqJ2cUU
      qqqiayqqbqCrFW7duM7w8AiFSg1V0za+NwzKpSIzU5Oo5uxnU67+1h9x4Rf+0/1W45FjW2aX
      Lmt4LAY1VaVcVRGBC29/n+6jZynlEmilDMmyQDaboc5mo+1QP+OjY1hEHavNhuSoo6s1yNjI
      MD6PjIHCzHSEZk+NdWsPXT6oVirUt3QiqwXm1ooYxSQ+f4Dl9SyVYnmXHoPJk8qWRwCtkiMe
      T1HIJFhJV6mvD1Ln99LU0UNny8ZcL5st093dicth+8S56VSKak3DMHSghiS7aWtp+tTFBUnh
      zDPPYmQWWYjngQ13N59J0dLZS8Dn+Tz3+thjGBs9wky2zpYNoFgscfTkaU6dexaxksXj3XgZ
      vd4NH8Dr8dLc0sDE6CjxdA5/wMXU6ASi1UFvTw86Am6XE5BxWDUmwku4XE4EvcTcaha3VUTX
      qoyPjpCpWmhqqKOcXieVK9PQ0s5KeIx8Rf1URQmTDRSfB1u9/6FWeZ9kdiUVYj4apaN99yrB
      mVGgzfmoS6TpBG9d7q7c0cdf/kQiQV1dHbFYjIaGn4TFEtEFbG2tJBaitLd33FdWIbFG2eqj
      zvVwzTQedy79h/8KNV8EQKn3cebP/3CfNXq02PX9ALH1GHV1dSyvLOF1KkzOLuD0BLAVC8gG
      FIsFkrFlltfWaeroJxadRNWhtXuQzOo88dVVGg+dYnLMLI24GbELN6ilcwDYWrYWdzf5Cbue
      dpZLxxkbG2M1niYyv8jQ4SMUM4lPrOWqqooo6izMr4CkcKS3lcWlJcqCnb7uDqq5mFkacQsY
      GKYTvE12fQRw++oZGhyiWqvgc9kIz0ao6vBxV21tPY7H66SW3UiXEBAQLVYK6RhL6SrOlh4C
      AQ8+X9uHpRHNP/JmCIJoOsHbZNf3A3zkiNRqNWTZQjFfQLbZETEQPiyNiKFRVXUUWQEMLJKI
      qoOuVlE1A6vNhlotm6URNyH6t2+hVzcSBEW7lZavv2g6wduQu+sjwEcKyB8WRXW4XJ/4XrRY
      AAuWn6rEaJEAycZHeYWSzc6T6gYX5lfIzUQ3/U7xue/9W9hG10eTDfZkU/zFC+cJ1DfS2tGD
      Xs5iWOzYrRby2TQuXz2SXiWWzBJqDIFaIZZIU1dXh1Ytky2UaWiop5hLowoKvn3IMJy4e41b
      Eyv86i//zL3P7l75ATcmVY71OFjNltAtbo52+JmeXyZTMOgJyiymi9i9jbz63En+7z/5t/R9
      8TdITb2HanUzdOw0M7cvUKlqtBx6Flt5iTtjMX7lV7+GXs3yR//mj/mt3/3PqXNaWPj7t7n7
      B//jZ+ppbQny1ZG/281H8dixh3uvBESxwsTEPKpaZXZ6HF20MD4+TrlcRq1kmJyaY3RkHLtQ
      Irwc487tMdRcjIXVNaYjKyzMTlOq7d2m+FIhRyqTZ/DY07Q2/GQVupReIaV7afTYSeWKHD56
      glxskc7+wwx0NuH0eFjIVfjaV75GJRVn6vYVuo6eQQJkpxN0DV0ro+p+vvZzX2MtPMbQ8TM0
      13nAMLj03gc88/yDC1xthoBg+gDbZE8MINDQzKFDQ7hsbrq6QkTmFxBlG/V1dSgWkYXFBUSL
      Qq1SwGJ14vO4QQB/oI6Az0W5WCCVSqEbIsYeOsDFfJZ0Jvepz29cu042FePW3VucffEVStkU
      it3FzN0rzCYMvvzFZ7DoBrqhgaBxc2SC6Mw4IxMTPP/i67z++stM3L2FIVTRKkUE5SfTmFop
      xUxkkdHbd5ic3Xzac1/Ml3/b7MkUSFDLjI2N0dreRjKVxe/3U8vHGR8bpa6xDUopkvkSgfog
      Fq3A2OQMhq+D+jofFrtEg82OpFapaCKyKLBXUaC6UAshi8Ttq5dYXltjeGKS6ckZfuFnvw7U
      6Gs/RDm5wuLiImeee5716TtUilmu3BR59uQRfvD9H3D46WfpbPSTW18iq7sYv3uNpViaE2df
      pJac4wfnr/PcSy9x6/JFVhIrzKx08U//o3/G/OwYwdZOAKz1PrxHej9TX2sosLsP5DFk36pC
      LK8s09TY9Kkhe3FuhmS2SPfAIVz32SuwX6kQhq6h6gby57zeblaFAMwo0Dbk7qABqAzfvIsg
      W2jp6kfUKvcS5QBmI7N0d3VvW2opn0O0ObF+rFTEk5YLdP23/ysS10Y/8zilwc8Lf/vfHgid
      D4LsPQ6D6sh2D61NbqIrq7itIkKtRGQ5hq++kUqlQq2YYXR6HtnmxO2wkEskqWsIYPW1kFqZ
      x26VSKTztHZ0Eg3P4PDW4XdYUCSZmbEJdMnGoUMDO6fyI0I+skxmZOYzj7O1hkwneJvsqBO8
      thQlMr+C0+WiUCgwMxvGYrGwGN1w5qLzS/QfPoK1WiSeTtE2cBjFqFJRDXK5jfx/VdMRhI3p
      hgFUSkXy6RhriQLp2Cp5MxXCZAfZ8SiQIBgUixslNBpDITRNp7WtDYBQ0Mvo8DDJioZNtuGy
      yciKlbnpcWLJDBZFQZYM1mMJrHY78fV1ABSHB49LIRBqwmF2iTTZQXbQBzA+s2iVIAg7kqz1
      pKVCJG9NUE1mPvtA2UL9s8cPhM4HQfYe+wDClsLQH81Rda1GvlDG4XRiuVfwVieTLuD92PL+
      k07y1gTZLVZaE+1W0wfYJnvaH+AjdK3K7Vt3qW9ooFzTsEsqq4k8Pd0tRGam8QQb6GpvIZNY
      o6BaCNW5SSWSVAwLrU3B/VB534j+9Q+Z+h/+ny0da2sN0fL1F3dZo8eLfTGAcnYdV30HkpGl
      WCqjOCQoxplatKHqIgGlynh4DrWq4ZcrRCtZcgURO3GqDUGzQYbJjrEvdZhlu4tCNklzexvp
      9Rhzcwv4/V5qNRWn04miKGi1Kopiw26VqakGfr8PiyyZxXEfhPlwts2+jACyzUNrMMv4+Awt
      nZ2o+QTpUo1Q0EshViCaqHBooI+VaISUaqWzuY6KZkG3hTZKpz9Bf2d3bzuhl7eWGCfXec0d
      YdvEbJBxHw5SFGirmFUhti93X0aAj4ivzLMUz2MIIscPD24awchlMzjdXp60JpHf6vnqtgc6
      W1M9r777v+2KPo8r+2oApXKZ7r5+Ju/eolRIMz49h83hwUmZnAoWxYlL1jH0ChNTi0iyhRMn
      ju2nyntGOZbc9jmCYu4I2y772ozIUKtMTU4iijKLiwvoWIjH19ERGRg6BFqJarmCpmk0tnXj
      d1lQzc7x98Usjbh99tUARElCAMqVCg2NTUjoNDY2fjiHFZAkCckiIQoSkiggSRZzz8cDMHeE
      bR/TCb4P++0Ep4enty/YIpn9AbYpd199ANBJp/P4fB5KpdJGiFOyIj/mbSJn/uSvdiVmb3E5
      cPffv8ykyafZZwOocPW99zn36itEJifo6+7AsCqk44uk8mU6OrqILc2huOpwyALFUg6Xvwnb
      Pmv9eRn5L/7sXi2fncTW0kDXN37msw80uce+v0qtHV0szM0BUMolUGsGK4kqzW6N5WiYqjVI
      dimKJOoIniBBRcTQ964yxKOEWRpx++z7XEO0WPEqKqnSxkYXw9ARRAvVagXD0JkPT1HTAclG
      V0cLounk3RezNOL22ecRQKapuR6P14ZqWcHl96LLTtT8HGurWTqPnmNQmkO3OAl4HI9NElzb
      P3oNtJ0fxWS/2UFnuxy4KJBh6ESmp9AsDnq72jcNez4JUaCHwUyF2L7cfR0BCpk4s9FVBEnh
      0FAfoiAgCCLd/YP7qdaOcv23/2tm//dv7sm1zNKI22dfDSAcWWDo8BFKpQqV9ApXR+fo7elk
      MbqERbHR2ewnupakMdTI8sI8hihz/MTx/XdcDijmQtj22d9UCMDQVW5fv0FF12juHMBLjoKh
      oJXzhFfTPHXsGF6rRq6gopXLlGtmLsR9MV/+bbOvBtDREmJ0fBrZ4US2KDgdVpzBDrwWDbe/
      nv6WILfuDpOryfi9Nlw+P7bHfJHMZG85cE7wVniUnOBatoBW+mSDb1XTsOyCo6oLYK3zmU7w
      NuTumQ9QKORxOl0U81msDg/SFn/INyuNeNAZ/2/+jweWMdF1HVHc+fuRPE4G/+Vv7Ljcx5k9
      M4CFhSiDg4dYmg/T1HuUtblpZHeAOofAYiyLzemiJehlJhzB5vLjdsjkUim8dUHsVp2FyCw1
      yUFXW/NeqfzQzP77b1GILO35dW2tIYZ+95/s+XUfZfbsZ7VSyDI2NsbCyjqJxTC2hk7K6TVi
      sTW8oQ7ymSSRcJj2ngGK+SSL87PY/Q2UMgkyqRixbI1CfIV81SyNaLJz7JkBWJ0eDh06RFtT
      EIssUy6VqNVUJElEVmQEcWO3u6rWKBTKyA4PobqN6tKCKJHPplHsTiySGekw2Tn2bArU1rbR
      Pb6lowerw01saR5fZz9uBVDA2taGLEJ0IYpokWn/sJ5oXagJUbFxpF8jVxWwSSL6AU+G6/4n
      P7MvPoDodpjJcNtkX6NAP+2llwtZ5qJLNLZ14nPZ73veQY4C6ZpGNfHgOp6aqiLtRioEhhkF
      2qbc3R0BtCo//PFFXnn5i2TXZhlZLPPC6cP3vp6ZmWJw8NC9/9ucHgaHPpnQtd0oUHjkBtNL
      cWS7n1e+cAa1lOb7P7pAoWLws7/wdbTMMv/r373Hb/7al/nuD95BV5y89sxRPrg+TDJb4Rd/
      8WssTV7ng7EcL51q5vKdaVz+EIeCVi5NLtDV3YdTTRNZWcfb0EmTrczo/CoNLb2cPTFIMbrK
      m8d+aWee3zaxtYb46sjf7su1H1V21wcwDPwOkcVEnpVkAbfFIBlbYeTOLcKLMQDK+TSjo6MM
      j01z69Yt9Fqeu8MjXLp4mZnIAql4jHwhx9UrV7hy7QbVz8iizGYyeP11lAoFADJrS/haDvFC
      v5Mbs0nevzpOa7OPyMQ4g2dfpks2yDtCvPzFFxBqZWrVPFPLWTyiwdjIFK++8TVquVVi6TgW
      iwWP28XscoxXXvsyq5EZRhfW+epXvkp8cW5XH6XJ7rDrTrCzvo3i2iyi4kAAkokEgiiQyWbh
      w/8bQC6XpbnOxa07U3T0D9HY4CWX32iaUSlmKJZ1JF2/rwGUc0nOv32JZKlGKBRC1zZ6FATa
      B/GS4PbEAqnITWZW1hm+eYtYqoiu62iGAZUMf/fN7/LSG1/h2tvfJ5nNcevODcqagK4bgMCx
      M1/k5954nYlb13jx2bNcvnSRsrbxAA2Ag+Cbm/P/bbO7UyBBxOl0UFML+BubSK+tIxolRB1c
      Dgc2Ud7oCC8IuN0ugi3tjM1ew2vRWNHAIklY7XYUj59gIAWSDau0eW1EmzvAy688x9TwDaYm
      xnD66rn49g849swLpPMFxPpevvTy80iCwPtXr3H2+CA//OE74PTRsBymJircvnqdl974JRRB
      5VpDBz1dPt790ZsEGjtZCI8zFVnC19RBIZelVi1z8vRpPEaK7735Jm29hz+l015j7gjbPgcq
      FSK2GKEkuulorn/gcVtzgg0y6Qwer++hcsQe1gneyuP8uP47iWEY5n6Abcrd13TohfkIoZYO
      FMlgJhylt7fr3nfrS8t4m5sopNP4/f6HkC7g9fl2TtktMv1nf03q5vgDjzEMY1fSlmW/h+P/
      5rd3XO7jzL4awPpSBFXxEjBSjC+s09YUYGZuEU8ghJbJgkPmyvtXOPfsF8isL6GKdvp7OvdT
      5c9k/eItlr71zr5c29YaMg1gm+xrhpnD30g5HWM5U6U1YANBRBIFovMbLYFc3gBtbe04pRJr
      yTKZ2BJZs0vkfTFLI26ffU6xFLAJNWqiFYDl+Xk8dUGke6WgBWrVCpohIQoagWCjuR/gAZg7
      wrbPvk6BOru6kEWoGhLoKlZZYi2e4vixI0iARRTo7+nGkJ0cHuympAoo0kehyYNJ56+9Qd2Z
      Iw88ZtfSoR+wem6yOQcqCrRVHjYVopJIU1pe3/p1dB1pF17U3ZJr1gbdvtx9GQFuXr2MzeWl
      taMbuyKhG6CrVRBlrLJItaZiCCI2RaZUyCPbHBhaFR0Jm1V56OtG/+qH3PrP/rsdvJODha2l
      ga+OmlUhtsO+GICqbjiyejHJ2x9M89RTT6Hmk8RiCVpDdmYzdoRqhrY6F1lVIuC2M7+wgigY
      HD52Aos5zd0UcyFs++yLR+n2BxkaGsJpk+gZOELIZTC3nKCQTVPVNuqFuhw20vkyvd1dOK2Q
      y5UQDAH1gKdC7ydmacTtsy8jgNfrQRD+//bO7TeOu4rjn7nuzs7srq9JbMdJkzYOdpwqqEK9
      qAgJ8YDEG08UEFQqEqLwR+Q/IEHQh0rAQ0FUKoK3ENGiVrQShYfm5l07a6/tjbPeXduz9925
      7Fx4cGoSaJDXdEWczOdpV5r56szZPfqdM79zZgREOU4yIYGkYMRlUEdI6Oldq1IpxtM6mYVb
      HJs8zuSRFB4K6kNaIfaDpMWJjR9kU+1wELs3QBSxfw5tEXz/50EUfYPUHpTuIB+N+Lj6+f/+
      ePSD8O8XNai+mkFpD0r30/RnELdYYXC+GKT2YxkA9zOoH3uQ2oPSHWT+/7j6+VCmQBERnxeH
      vq/AtdqsrN0BoFwskM1mMRttatslMtklXC/ANE1C36W8bT5Ux+62yK9vANw7dxHXCzErRTKL
      t+kFIaZpEvRsKju1vu1czS2SXVzCcn2KhTy5fIEQH9OsY3fq1JrWwRwANKtbZLKLWK6PaZoQ
      +pTKWwfWA6hvl1jIZClt1+g0TDILGdp2b9eXYUi5XO77VkTguSznVvABu9Mgm8lQb9t0mzUy
      mQzNrntPP6BUrvQ139Mwy+w0LIKezcKtm+TyBXzPJbeUpVgx6bbrdB2P7UoZ775OgkOfAlm2
      S6fTAqBc2eHpmS9g6HGuX1thfvYki8sFFMFiq3iH6bPnH6pj2z3a7SYQsr5RZn7uNIu5HJ5t
      c25mktvLG0hBm9Jdm9NzF/q0MqTabDF37lliQYOttsSUYVE0W7TKWzhOh/kL/Wr+Szu/fpfz
      82fJ5FZQpZDmTonkxNMH1NuluFlm6tQzpJMGN69fY/78PAuZJeIxCbuxjZCe6nsIzrYtuu0u
      PrC8vMrZc+fIZJcQA4+5+Tky2WXUmITbMvH1o33McYR4ThOzpRD3LIileerEFOX126QnTlNZ
      W0IaS+NJDtVai7Ejx/bOPLQrQMOssLaxSXp4BEXeLXROnpzG3CqRzS0jijEUbYjQbVLfLtFw
      JXT1P+O9tl2iUCwzNPKpjo8oKcixFIFXRxLjqIlhfLeBWdmgG8RJKPt3W2ljjYrZYHpykjv5
      LIVCCTWZxkgadDsWxbUlJGMUWTxo/h4gSjKyqhP6Np3GDsWqxUgyfkC9XU48dZJWzeTGrUUQ
      JWRJQQgDrHad5WKNidFk35oJI42u7e7kB4KAqqgIhCBIKEoMgR5Op0FuY4eJsX5u6QoMDe/O
      fsSTYwxpIteuXaPV6aHrGooi4nseN6/fZGL6wZeuSBcvXrzY95U8AsQTBsPpJDVzi/XCHRLJ
      FO1mAwTwQpXQadBqVtGGjiPLIlPDGpWmx0haf0BH05MMpQyqOxXWCxsYqVFatQrtZo14+iRO
      q0S7aWKMnkKWRY4mJUxLYCiZ2JedyfQwhhKyudMAz0Ebm8LcWKXRbHH81AlEQSMWtPAUAz1+
      kDYPgZ3KJq1WDSUxjiyJnJkeI79Z48jowQeCzO0KAWA7PnHRo9FuE6o6qixx7plpMvkSR8dH
      +pq267TqrOXXEGMakmdRbTQJhBhxwaXebBLKBrIiMT9zgszyXY6Nj+yvsA8DtooF7m61MTQZ
      y+lhdbtMTYxSuFvBdjxGUhoTp+fYyC0wfmxir+P40BfBVrdDz/ORFJWYLGI5PQw9Qeh7dJ0e
      ekK7N9oo4fY8VEX5bJ1Om54fICsxYsqujq4nCLzenqbneUiShOd5KA/ReRiO3cULRXQtjuvY
      +KGAFlfxPB9JEvG8AEU5WEYa+B4dy8HQE3tjnD23h6L2Z+ODmj3aXRvDMBDCgHbHwjAMfN9D
      liV6vR6yrPYVAK5jYzsugihhJDQ63S4JXUcIAzpdi4SuE9xnv6zI+wyAkE67jR+GJHQDx+og
      xzRiskS320GJaUjC7koT+B6iLO+9bPHQB0BExP/Coa0BIiI+D6IAiHiiiQIg4okmCoCIR5CA
      3755mUuXLvHxjZX/euTfP/gL1a4LQHk9y88uX+bPH33ymceGvsvVd9/b+57NZg//RljE40jI
      TrXFmfNf5MiIwdu/eoNqmOLLF07z3vt/ZfbFb1DNfUQ9TNHI/Y0PF+7w4x+9yp+ufsCrP3yd
      hAx/eOtNljdrfP2b32Y1e53ZIzHyTYE//v4d1NRRvvr87qZotAJEPJKoWpIzZ86QVEOs2Civ
      v/ZdXKfHl156gc3VFRxf4gffe4VnL7zId77/CpoEfiigKhKiADVP4SevfYvM9RvYto3XsxmZ
      nuGll1/e+/NDFAARjyQCSmhx5coV8uUWI2KHN375G7Yrm9y4uYSeTnF08jiqLDIzM83bb/0O
      yxf42lee4+c/vcTVDz9hMinxi1+/w3MvPE+rvMq7H2cxEhqyXeX9fywAvWZm+wAAABVJREFU
      MDs7G+0DRDzZRCtAxBPNPwHoV+akqarqpAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d4ykZ5rY9/tCfZVTV+pQXZ17unsiORzmsNzA3dugu9u9syTLwMl3tgED
      9ln/CLYAQbLPAmz/J0gHnABLuj8En3E4a/ckHpfcI5fLPDPk5OncXR2qu6urK+f4Bf/RQy7T
      khO6q2am6wcQnKnwPe9X8z7f+z7P+wTBMAyDLl2OKGKnB9ClSyfpKkCXI01XAbocaboK0OVI
      01WALkeargJ0OdLIbZNk6GTzRXq8HrLZLE67hbX1TcwOL16nFZfDSqGmImpNZFlCUmzUqyUU
      WUYXBErFKrJoYPf0YDFJAAiCgK7riGJ79bjdMjtxj1eWdylUGm2V2QnapwAIbKwsYTlzlrW1
      NRxmmf6RcRYWV6iVrLhG+oinKsjNPHaLguLpZ2t1jXCoB81sZ2lxif5ePxa39zMToqsAh8Nf
      vjnHYizdVpmdQGjnQZiutViLRvEEBvDYJDZ2kgSDfiQEbDaFSkNH0FuYJIHN2A694SHMog6y
      QiWXJFfTGRns/2RCCIKAqqrIchv1GNousxP3+PL7i6QLtbbJMwwDBAGhbRJBN4z2KsBBoWla
      VwEOmWyhjCC2T6auawiCgCC0b6XTNLWdW6Avo8nS4jbHpkY7O4wuX+D/+n8vHIktUIcVwKBe
      a5Da3WY3kcDdN8z2ygI2i0JoZIL42gqCIDAw1M/ywjaKGR4592SnB93lIaKjc8nQdQxBIJPJ
      IAsG+WKZnkAfE4NeFrb2cPWEGfAabGYqhIfHkdUkqgay1MlRd3mY6Ng5QKNSYPbmEr2RAWRZ
      RpAVHFYz6b0d5qNxRofH0OppVrdzDPYFsVpMWKx2pO7JRZcD5P4ygnWVtc1dRkcGv/JjXSP4
      4ZOpaftGcDvdvap6iEZwNpulp6fnC68n4nEC/f186S5GlL8w+RuVMrpiwWrq7vzbyX98Z5F4
      utw2eftuUGinI9Qw9MNTgM2tGG67zI35Tcw2K8cmhlhZWCKRLuDpcTG/so7b14tJr5IvVrB7
      /TikFtuJLGPHpoivr2CY7PT7nSAprG8s0sDM5PjIYQ25y6e4spw4El6gQ11vtFYNh28AO01i
      q1F8I1P0B32sRteZOn6SYnqXdKnK1MwMlWyGpZUoPR4bi/MLFIoVHA4HtXKRYj7Nzl6RanaX
      TPnhP57v0j4OfcMlICAIAmarQiaVJl8o4rCYSCRTNDUDEfYXPQEsZjOqITHQ30d4KMJ2bB3d
      AFE2I0kGbl8Ih7nrAupycByaEVyr1bAoMk1NQDBUZMVMLp1EMjtwO22kkwkc3gCCrmKxWKjX
      68gS7KVyBEMhKvkMhsmK06qAKFOvFKg0DYI+bzcUog28eTlKodpsmzxDvxUK0cZYCF1/wEIh
      GvU6isWC3vUCHTpbezlUvX2zUdf1W6EQ7ZOpaVpnD8JKqS1ymoter5mWZmA1m1A1HQSRVqOG
      rFhRTCLVShWLzc7G+gbj01OdHPKR4U9/dvlIGMEdVQBd19A0jdkbN/CH+nFIFS5Hizx2+hjl
      Qo5UpoDfqVDDRKtlYOrkYLs8lNwH56oC4YFe9pIJmprAzKnTiK0yyUyBQrFIJpuj2WggiO0M
      lO1yVOjoCmCyOHDoJiqZGlarHavdha6ImGUbJknE6/UyNhhkfXsPh8OBImgIwANjtDzAOGwK
      Hoe5bfIMg1sHYe3DMO63UIjbpBsK8fDJfChCIZLJJP4eF/G9IuGB4Kfe0ZifX2V65hiNSoGt
      vQITo5GvvFahUMDtdh/k8LrcAf/2lSvsZqptk9eZUAjjYBUgvruDz2unWq0TW1smX24yOXMc
      i6yS2dokNThCOb5DulQn6DaztbtHoG8YrVEi5HMTz9dQCxlqmPE4zNgUkYWVdQJ9YcrpOE3M
      TE2NH+SQu/wG1neLR8ILdEjrjcbKchSjmSe6mQLA1z9Idnebhi5gNQn7S54osBXbplAoYKgN
      8qUKe+kiUxPDFAsF1tY3mDp+Ep/dYGMrTTYR64ZCdDlQDkkBRAKhAJ5AmMG+/W2MIJnRijso
      7l4AEntJHHYbggCtRpXN2BaqZuD2eBBvHYb0uJ2sra9TqOr4/W4GR8ZxW7vO0C4Hx4Eawa1W
      C1mW0TQdDI1ao4nDbkcQQFU10HVEkwlNVREFqDdbmBUFQ1dpqQYmRUHAQJblW0aYRLVSQTZb
      QWvS1MButXRDIdrA5aU4xWr7VtvOhELoXS/Q3XAUFGBxM0mtqbdNnqHrtxTg3jXg1GgQ6TZS
      Bw81IeZ2MXSdtegS84tRTp99nKDHRrHaIuDzUq8WKZQb+AM+qoUcumzB47R3eshHgj9/9cYD
      awT/xT/7MYmled65scJ//fd+n5f/6v/B7A4wc/oJwiE3i9fPE40XKdYanVcAQRQZm5imWGky
      GPJy7cYcAY+FjXqdfCqF2yaRUOtkCk1ktYh07CQ2uXsq3OWrGZs5w1YmD4DZbkfXVPRbR6hm
      RaHRaCDLpvshFOLXGLqGYrUR8vsoFvPYXT04HXaa9QqungBeh416U+v0MLs8UOi8+O0f8r3v
      vsjNSxcBiMXivPid7yJq9c6vAB8TDAYQZTNui8hiLM30sUm21pZZXU8xdvIs+fg6DZOdYw4F
      XW/f3vSoEvRYqTfbdxB5kKEQoiAwd/Uie/E9rs1H0QsJkvkKZ594jJ/+p1f55pOnufDeWwT7
      R+5fI9jQNaIrS9RUgenpKeRPBcN1jeDDp9lsoihK2+S1IxTC0DVUHUy3CkupqtpZBdjaWKVU
      aaDY3YwNh3+j9hu6RrFSI5dKMTg6Al0FOHT+5V9dYH033zZ5dxsK8ePnp3jhzPBdyey4F6hU
      azE1dYyrV2+wJ7WIZ4qE+4LsJlK4fUGMWo5KS2BidIhiqUyj0T0Fbhe7mTIbifYpwN1SvMe0
      zY4awc1qiYWFRUTFQrlYYHhimsT2BqIksRWLAfuHFYahU6nVOznULg8pHfcCCaJArVZFks1Y
      LQqhUAhdNwgPDqIoCq1aua0nkl2OFh21Ab4oWkDA+OqEF0HoJsW3gfn1PRpq+7xtum7cSoq/
      s++FAy4Cnrs7HG2bDaDrGrohIH/uePrjY+9GpYhudmCVBT5vBmmqCqKI1OYWQUedcq1JpdG+
      M5fbCYWIhNyM9XupVUrUW+BxOz9RmGa9gi6asSgS1WoNm82G1mqQzZfp8fXQqlcoVRv4enoQ
      BINavYliktujAOXMDumGA79NJV+HcMhLpVShrgtYxBbLs3OEzzxFJr2F7PDhdSjkslkEsxOn
      rKObHajlFDXdRF/wi/VGuxw8//GdpfsuFOInz08z5IVXX38Hr6LRf+abHOv3AAav/tW/wz39
      EmNeg7+9cIM/+gf/Bb/821fwh/q5Pg9hn5VKOcdN3Uevrc7sRoYf//Bb7bMBdLXG2lYacyvP
      5u425y/OYjfD2naGyEAIDB3RZGZp/ibpxBYVw0o6vkWlXKBcyrMRz1HNxinW1XYNuct9iGSy
      0qwU2c2UcTssAKxcv8jg8XOYBBgcm2YsEgLALIvEtrexOrwE/B6WltcI9YeYOXOOoMe+P+cO
      e8C6rtNsNJFkAdlkxmIx02ppjI5PoAg6itWOoRtU8ylylRZWqxlDkPC4nciShAHoukoqEadc
      0xC7KfFHmko+Ts/ADC89PcPCRoJatcpydIPYyjzX5hZ//UFDJ1eCH/zWb5HaXcXqCvK7v/tD
      NhcWfv0RhMPfAhUySTI1kfGxPvaMDRIljdGhASoVA9lmxSFmyNWgv99PfHMDtzeA2+tFViQC
      oSAWRQbFxvTkEOUmmE0S3boQh89EuAeL0r46rLcTCtHnd2LvieC37nJjS+fkMYP3Li/xgx//
      PRqVDOmywMrcVbLpLB9eW+bRRyZ5+53zPHbuKZbnrpApNnnsyce4cuFdstk0S2vb928oxFfR
      DYV4+GTeTSjEx1P3bnMI2uYFWrhxhfDkfjn0UN8gstQNZ77f+T/+4gNWt7Ntk2cYxi2PjsA/
      /vtPc2Ik+HVfOZDkmbYogAHENjYR1DIet5ubq2sgKQz4rKxtZ/E4bfSPHWMvtoZFMsiVKvgH
      RiknYzSadTz94+R21tAEhRMnT3T+9O4IUK42yZc7c/quau07f2jLXBJNVlwmlXxVJZNKMDh+
      HI9JIFeuMDJ1ksnxMLHoKi1dYntnG9kkk9yOoco2JobDVEtp0tkqzUqRQq17Ktzl4GiLAkiS
      xMDwGNnkLj2+ABvLs2TqKi6bDYsiIyouarldAr199Pb2oesifeEB1EqepdU1RMWF12PF4fXh
      tHSrQnQ5OO5jI9hgM7pKJpsjcuwkfpf1k3e6RvDhs98foH3yPh0K0dvjwGo+/AddR8KhK6U8
      5bpGMOD72sjvyOg4oVAJtdsZu+2sbGcpVFttk2foOo9N9TMYdLGxuozs8DPY5wegUS0S3Ygz
      cewYjVKG3VyNiZFByvk0O+kS40N9LCwuo+kQGZlAq6apYaXXY2FxOYqOwOjENI3CHk3RRn/Q
      w/L8HFXN1F4FqBeSLMVyDPX6aNQrbKzH6A0PozfL5LJZ/P3D6LUce9kKY2MjlLN7rK2u03fs
      JPm9LVTJxtBAXzuHfGT5xUfrbQ+F8Lps9DuhJdtY+fANlG/9PiGHRDS6hsvt5NU33oByjfFh
      N+8X6qTXrnFyepj3LpWZHg2xdOlt1iWB7UQJZ32H1uPfIxgK8dHbb+D1Ofno2iZONYXy3FPM
      rpd48ux4ex0q8Z0kY8fG8AX8SICAzs25ebZj2wwMRdjZjCEIAtXsDqubcbaTRUYiAwjsu7zW
      lmaptLr5wA8zss1NI7XBWlKlx7a/8k9NTzN79RpTMzOo9RLJEsR3oqDWuHRljlB4kGCgh5zu
      4ESkh2J6BySD6FqaQI8Tw9GHkl9n7MSjnJnqZz5WQTLynH//YntXAL/PyfZOClt/D6srKwyM
      TlJeWcVkVjArJkRBZ20jzvjoEFtFFUEQaDUbNClQLBv0h3zousGXd9nu8jBQKxUZPfUUolZn
      JZGj1yJx/u1f8OR3/g4+h5mB3/kdqpkYK6kKu+sCP/rRGd64cB1L3szQzKMorgC/+6MfsXHt
      XczjvcxeOs+Jxx7HIya4thRDbWTpnZzg1Pg3ufmrl9urAK5QBF98i42tXYZGR9iO7zI4GMYs
      S4BIX38fzVqRbE0j3BuiUUxTqmv0+QIY9U1EcwirSQS6q8Bhc2Y8RG9P+4qQGQaEvHZkWeTi
      xfeweAYJFqPEWyP4/F4uf/A2kYnjKI00yYrIk4+eZcs1z4Wrq3zrG8+QS+5ycqAX0FmZu4Ic
      mGDcb2W7NsFA0ImAg9HEFariDKMBJ1cuf4Rr/NH72Qv0m+l6gQ6fRqOB2dy+DjEPRYOMLyO3
      u8V6Ko+gC5w6fYLPR0FUMjsUJR99HsvXXmtpYbHbJbJN/LM/f/dQjeA/+N5pfvz89KFd/3Y5
      dAVoVhsMT06RW55jK75FPp1DkM045CbpQguHVGGvsYcx6MfkCpDeitLX62NtK0lLg+MTYTa3
      4phs3sMeapcjSBvWG42VxQUET4BGscDxkycR9AaqqnPm0UcI9/UyPH4Ms2SgG/vLUjqZY+b0
      aVx2M4VCAQSBXDZz+EPtcuQ49BVANtuYCo/hNssU0iJzN29isjiwmg0kUcDq9pGeX8Y90s/2
      +jLVap3BcIiFmzcpV2rYzR4QRCwWE2Zz+yqVdTka3JdGcK2YZW1rF11UODE98YUT464RfPjk
      ihUQDm+DYDWb9pOdbtEpI7htCqA2a0TXYoSHR7Bb7u5JntpL4gsFMboKcOi8cn6FZK5y4Nf9
      zrlRbGqOSzeXwGTlheeewSyLaJpGbG2JvpEZCrtRdgoaj56YJB3fYGk7x5PnzpDaWiXdUDgx
      MQQYLC4tcWxykkvn36XYFHj22efYXrmB6OpnZCBAbi+OyRPCYZbQ6iVWEwWODYc/GUtbY4Fu
      3Jjl5JkzlMs1mqUMu5kSE+PDxNY2aGhw7NgYsbUootVNOOQhurqGZHHS53OwsRWnd2CIbDZL
      T+jrEyW63DvvXN88FC/QqfEQj05E+E5vhNf+5j9/ktRSye7w2ss/40f/zRBXLq0xM2zhowUL
      DmpMBETeOX+BfKrCUI9G1O2DvTl+8eECE6MDlJomvvnCU5R351jNm5Cj7+K0vsCFN3/J5Ld/
      zKTfxgcfXGCrXP+MAkAbK8MNhfu4cf0mtZbKSnSToFtieXWLclMkYDHYiMUoqiaS8Rgbq1GC
      kTEa1dJ+hCAay8vRdg21yyEjCALVVBQlMI4iCYDBxcuznHtkGjCh1lNspYrsJhP0+528cznK
      qX4rysAkw8OD7K1tsJZsMt7vQQCa5Tw//enPWF5eYmRymr7+HnKqlbMnpxCA9PYy5uAYNtMX
      Qwjat+GSLZw5fYJ4LEarUaNcB6/bgqIoSKKIKEkU8zlsdieSaNBqqVQqVaJr64QjEW6j5VOX
      BwaDty/M8dzjM6iNEnt7CcqlCpevXGdpdYtv/tb36Q94GIuE+du3PuC3f/d38Q4Mo8ZXiG1u
      YzGrlGtlrl65xvJanOOPP0PYq6AERlhfXiSRyBN0//pcaS+VJRdf5dr1m5Tqn41wbZsNUC3l
      iMVTjIyOQbPCxk6S0dEhGg0Ns6ijKxYKe9s0sNDrc7IZ2yJbrHFmZoytRJZgwIcI2Bz2bmnE
      NvCf3l0gWzr4lMjvnBsj7HeQSmXxB/2s3vgIe+QEIadCpZBGcQXZWblBXfYwMz7A+796k6oK
      xx95AqmaJN1QOD4xhCBAKp3E7wuwcO0jJE+YyeE+1hb3bYCgVeX9SzdBVnj22eewKRLJdIqg
      P/DJWDreH+A30ayVWd/cxt8Xxud2fOH9rhfo8Nn3Ah1c1KHNImM2/eZ7eChCIVI7UayBMRyf
      c/JotSIXry9ikQVGZk7jtX21F8jQITI2jvUrfrAuh8v/+RfnD9QI/uOfPM63zo4e2PUOigOd
      Ya1mA0UH0IkuLZHMljn31DkwNPz9EUKmMqlcgZWbaxiIjAz2oioesvFVvC4bO9kGhq4z2u9B
      t3iZW11EEAQGhvpZXthGMcMj5568fxqbdXngOZT1Rm+UyZYbtIolPt5Fbq8tcGFul7BLoFRv
      oQga1U83YhZlxiam8Nj2IxDVZgVXT5ip0X6y+Qrh4XH6Ay7UbpPILgfIgT5MTSaFtZV5+oM9
      SKKAzeXcz/wSZSZnTuMQaiQKKv0+F7og09PjIrq2Rq3eorfXhkkWsNntmMxmTGYXxfQyq9si
      o6NhylURSbN3vUFdDpT70gj+OrpGcHtkStLBpt59VSW3h8IIvl0KmT229zL4gn30+r86zLlR
      KaMrlq5B3Gb+8s1Zkvm7d4P+8e89jmBozC8uMzMzgygI1Asp3rl4FVVVefzZb7C1cBWzb5CZ
      8UFmr1zE5A0zNdLLh+fP4+kfY2o0TL2YYWU3z9RQL5c+uoQ3PMZE2MeFDy4weuIsIbeZDy9c
      IDQyw8hAgN2NRVqOASJ+522NsyOzKpXMMTE9zeKVqzgUDc3kpZrbw2aWiO2mCA+Nkt7ZwDDZ
      6fc7QVJY31ikgZnJ8ZFODPnIcWMtfU9eoP/xJ49TSCeZW15manoGUQCLO8BLL73EL195mdT8
      JcSBk+xd+yWmepyMqR8WL1GM2vGee57Vt/6WkZEBLnx4hWytTL/HyonHnuJvX/sb9lYVpp94
      kfNvvUnQaWb8sedxyPs9KC699yby8e/f3wqgq3WuXr6ExepGq+YpWVxkkylcLiuSrGA1QaFY
      oX8oRK1cpFWrs7NXxGZSyZT76bF1V4MHgZ7QAP2Bz67wjcIuqj1EZCzAq++dR6znyV6FR377
      HI3GHFXLAOdffRlFNrO3cp2ekeNUlz+kJxji3TdeY2BkhvzuEkGXHUGR2N7cpaa/Q6asEXHL
      nH3mWW7cQXfXjpiUomxhZmqCVr2KgUgpnyWbL+Du8eNzmYmuxwkPRdiOraMbIMpmJMnA7duP
      7OvyYFCrlMjmcqQzOXZjUcpNnYsfXuXc449gdwd59OwprI5evvGtE9z48COiO02K6R3OPvkE
      LrHGXkkjEZ3lyvU53nv9VfCPMhYOEnI5uLEcBU0iMtxL3/AkJrGFIYpc+fAic3Pzt102oSNG
      cKNeR7FYaNaqIJvIZ9JY7S5sFolkKkewt5dyLo1hsuK0KiDK1CsFKk2DoM+LrutdI/iQefv6
      Jtli9a6//9vPTJFP77K1m0KxOCmXMjx69hyVYgGX2w2GTnR5iZ7+YbxOK/HYGpLdR7DHyfrK
      EnZfPyGfG4BisYDerLG5s4dscTA9OcL6yjK9Q+PYFJG1lSWCg2M4rQp6q05ZFXFZvz7kvoOh
      EAb1ehOL5e6qDnS9QIfPfm3QO6u/77Ir+Fy2u5L30HuBGtltNusORj2wkihCvc7k5CgIoGs6
      OgJaq4EoK4h6g7q+bws0mip2u41Ws4FmiFjvMpmmy53xpz+7fMdG8A+fmuC//dHZQxrR4dC+
      x4qhoWoGGAaqpiEbGnOzcwxHfLx/aY3Hz52mWi6wl8owORikYFiZW1rA3+PA7OsnuR1DlgQm
      jp/G0jUDuhwQ7VtvJBk0FV1TEUWJXHKHlmhBkWUmZ05ik1rsJTPkCwU+3pR5fEEGB4LUqgUK
      hQoYAprWjYXocnC0bQVQXL2IO/MsFAwmpqbJWxRMYpNSU8RpUzApBmaThNfbg8liw4YJye1E
      Mlno8ToQGnVahnyrS2SXw8ZuMeFx3JmN1o6a/gdNNxTiLjgKRnC3NOLdYhisrCwzOj5JMbGF
      HIiQS8SIDEYOXFSXw+M/vD7HVrJ4W5+1KDL/5L96lmatxEc3FnnmiXMAqLUi71+4hGzzcu70
      JJc/uoRudnPu1AQXz1/AHhjkzPQIly58gOTqo8dcZ2UjQdNQ+O6Lj/Ph+Qv0hCeQKkk2Ehkw
      Ozgx4OH62jYjEyeI9Ji4cOkGkycfJRy8u8qBB64Aar1AJpnC5g8jVytgQKVSIZPYZieZJTw8
      QWJjgaYGsmLBbHMQdJnZiu8R6B9Gr2bIFsu4AwMUdmNoCAxPTLG3uUITM1NT4wc95C5fwsp2
      9ra9QPZbfduKxTLZ/K9bq4omK0888xwf/PIVMqUhjp99ksvvvsr1S7t4x58hce2XXCvuIvmH
      GAn14HE5GB4b5+VX3+fy+fcIDM3QF/DhtA8yMpbi9fMr3Fxa49S5J+n1+/jlq3/D8UfP0fMl
      WYO3y4GvN5urq8hOJxurq595fXF5GVkSWVpeRjBZiPicBIYmUOtVNFVDkAS2Yptkiw1mxgYp
      VqqIJhuTkSCJxBYbW2myiRiZcrdL5P2KP9SH0/brbZMoyyxdO892roXb7WLu4q+QfWOMDA5x
      88IvyTQEdnaSqPUCr7/6c5o6XH3vHR597gV29hLUChl+/vPX0YD337nAs88/ySOPnCK5vc4v
      3nib3WSSVGKbN958567HfLAKYBjURRtnT53CaxVRP2VdBPwB7E4n46PDt1759SHLbjKJw25D
      FES0RoXY1jYtTd//jACSyYbf72ZwZBy39cEztI4KyXiM6GqU5WiMlYVZkok4LdlJ0GZi4eq7
      zCdVXBaZ+FaSUHgQ0WgyMTVMNlPGZDJhqDW2ywJht8KJsTGy5QYmkwm1kqUquXEpIpl0CgEB
      UZAYi/TR0gxMprufEwdrBBsGLVXDZJJR1RYgIEoyuqYiiQLlchWr3Q6GjiiAIUgYuoaATr2p
      YVZMxDdX2UmkGZ4+Q8BlQRIFdENAUxs0NbBbLd1QiDZwJ6URBUHA47BQKRUoVWrIipVWs0Yo
      GCCXzSJb7NgVgXS2AKJEwO+jmMtisjpwWM0UCzkEkw27RaalGZgVE4ZhkM9msDo9KJKBqgso
      Jhm11SCbL+Hz+RDRyWSyeHx+ZPHOu8Z/IRQivbdDMltmeGQU29f14zV09lIZQsHAJ3+2WxSs
      TvcXegB8+fcNtjaimN1BDLVOKLhf8S2xtYEjEMZh+eoKAl0FOFz2y6Lc3nZzuM/Di48M35O8
      +8ILlMwWmZoc58q1OU5Nj7G6sUV/ZJRKNk6xUic8PE6zWsbtMFOsakRXF8lkc0yMjZDJ5bD4
      fRjobKyuUNdkhsI9tCQXjWIGt9tONLpBKDxCj8vGyvwNPOFxbLLA8sYm+Uya4OAIkmiwsLDI
      o6dn2I2tU6yrjI9PoMjdXMh28sHczm0bwc+cGLxnBegUn1GAeqXAjZuz2FwelpeWCEZGiK4u
      Y5Hh2LFxllY2EdGwyW5SWR2H20ck6GAjngIgu5ek2SyAewBTMka1nKGi2CnEd9ndVekNj7C2
      skzP2TNUVINxtx0BkExmxiaGWV7colQt0N9jY3UtCpITlzlPrWWgdFMAuhwCn3msWuxu+gMe
      QEAwNHL5Ah6PFwSBVr2GaFLQNY1ysYBmgCiIVMsVFOXXlr8gQqvZolqpIggirWaTfKGIhEEm
      V8Dt3ffX2iSDTLFKpVJFlk3IsogA1KsVWsg4rRbUVotKpYqht8gXyuRzuW57vC4Hymeeq5FI
      BIfNhpLL4RgZYGNtDX9vP9FUjJ20m2PjEQrpPcpNg6F+L4VMi7pkI9LbQ8VlQTLAbLfR3N6g
      hIQtMEQhusaxEyfwe11sRFfxBgYBmDh+hq2NKJorQCQSARQiw4NEBn3spEuE+sLIe9vEEw/c
      QfVDwfOnI0xFfLf12eG+B7d91W15gQqFPG63544uXMoXsHnc99zSt1ouIludt6oI79M1gg+f
      OymN6LabEe/CC/Np7gsj+Ddxp5MfwOlxf+G12euXEU1WfKGBT7J9Wo0cW/EmoyOhL72OJIho
      urYfTdqlbdxJacT/+x//iKC3fT2FD5K2zqqWZhDwubCaZS5fPI/N7cdj11heTuKw6WzEdtF1
      nXDIQTzb3C+T2OdBt3qZXVkAQebEI4+idB1CXQ6Itk4l2aTgcrkwKwp9fSGqtTJ2Tw+RoVGE
      Vo3IxBQDbislTWRscr9MogGozRKlcgtJgEZLbeeQuzzktFUBTKLB9vY2+WKFZknhyF0AABq5
      SURBVLOFSTZhUlw0K3vIDi/JzRWymkTQ6cAk7ZdJVMxW7A4fvSEXZrsDq9LNB+hycHTzAe6C
      o2AENxoNFOX286+/quzh7XBfG8FfhqGrLM0vgGJldHT0S05qdeLxPfr7+9BadapNcNotX3ot
      0FieW0CTFMYnJzF19/gd56fvLZPI/LpL5P/w43NIgsHC0hJTUzNIogCGxtLsddI1gSfOnmL2
      8kVkzwDHJ8Jc/+giOIIMuCWuzq2gahLf+ObTXL1wgcFjp5CqSeZWt9AlK99+4RwX3vuAkeOP
      4jJKvH9tgb7IOCfGwywtRjl2YvqevYm/ibueaobeRFSchH0WorFd9pIpGpU86WyJzbVlVje2
      KRZK7MW3qTdbNNUWq4uzzN68SbHaYGN1ibmFZTQDQEMXLUxPTaLVCszNzbKdyLC3s8ns3AL1
      ZpPlxTmWVtd58NarB5NrK3u8dW3jk/803aCQSbKwvExr/x8No1nD4o/QK2V49ZU3MAKTZJY/
      YvHG+5QcY1Q3bmD4RnjppW+jtSpc+uBXTJ99kg/fe4u+0Wle+vaLNCslLr71S8ZOn+OjD97m
      6vUlXvjOS5yeGiWT3GV1NsphZoHf07M2HltndmkDn9dFNpOjWSuRL1bY2k0zOtRPKr7OXqGF
      rNUplKu0dImp0QESqSyiJJFPx8lXmgAktjdZWFxFv7UMbmxskC8UMFtt1HM7mDyDOMUm6W4+
      QMfwBvsZCPV88nfB7EDLxbiREHjx6SnWrl0kX85RNvWx+uHrrGYbuEwGidUbhMbOMNjXx/n3
      3iWfLFEDVq5dZOLRJym1VIIuGygyE5MR3nn9F7z86psE+4cI9rgO9Z7uSQG8/iBjQ/0kMzma
      jRrJZAod8AcCiAL4eyNo1SxNdT+A4eN9oqbWyeSruOxWPjZBesNDTE+NE9/cxOsLIIsCgWAf
      UiNPpgbFbJJcuYqlawR3jFqlRDa7X+owsbVGPhvnzcsbPPXYCRS7j0fPnkax9+IoJRg5c46I
      VyZRbHJlPsYj04OE+oY4fWKG3uF+bIbOwlaWYwM99HmcXF+OIqgi1YbGieMzaM0GlVKBbC5L
      JnsHxT7vkLs2gg1DJxGPg6QQCgaolHI0dRGH3Y5h6FjMCvV6E0nQUQ0RURIxNA2zItNUDaql
      PILJgsNuR5agXm9hsZjR1SbJdB6X24VotMiXGwQDPsr5LLpsweO0d43gNvDm5SiFavOTv//o
      6WOUsnvE4klMZgeVcpYzp06wsLiMgcjY5DGSsSie3iF6XFa21lcRrF7CvT4KxSJulxtdbbC0
      vMbQ2AQ2RaBYrOJyOwGD1cUFQkPjWCWV5ZUNRiYmKafjxFM5LA4Px8aGDvwe76k0YqtRpVBt
      4fd+8cT3ttBV6i0Dyx2U0mg26siKBUPvKsBhsZnIoxsQcFtw2H6T0+Lg6ZQX6I6kJdaXuXh9
      AV3XuH7tBoYBaqtFvd4gk8mAYVCtlKnVm6iqioFBq9VC1zXK5conBqyutSjld1nbyqCq+8Wy
      VE3H0FSuXf6I2ZuzlGpNVFVDU1V03aBRqxJdWqLZDQc9VP7nf/MG/+hfv8b6bq7TQ2kLd/RY
      ydZVPIpBS1WpN1oIArz75i8YPn6OejmLUS+SqhoUiwUCVgsDM1Mszs2hSAaKxQZmN2OREPOz
      s7idCrrhYXVljbBXIEEfYwEzzWYDb98QVrHFeiyOolcxO7zsJnOo1dph/Q5djii3vQJojTKZ
      dJZyPks818Dn9+P3uumNjDIS3g9kyxdrjI6N4Pzc0pnL5Wk0VdgPbECU7QyG+76YOinKnHvy
      GeRaivXdfcPHwKBSyNA7NHH3260ud4ymHY2l9rYVoFatcuKRc5x98imkRgm3e38yfvx/l8vF
      wECIpbk50vkSXr+L5bkFRMXK+NgYugFOhx2QsVsMFla3sTvsiEaD9XgOh0XG0FUW52bJVg36
      Qj6alTzpfI3AwDDpjXkKtRb3GHXb5WtwOyx4HGZM8tHwth1KKMRmLMZQ5PAqwXW9QA+fzAcu
      FOKr+PTkz2Qy+Hw+kskkwVuVHwBy8R3kQC+53W0ikd/s4qoV0pQNKwHPgxlv/iDwl2/OMb+R
      +sxrf/Ddk4wO3F5G2IPMoat4MpXE5/MR393B47CwGN3E5vTiUGtgGFQqFXKpXXYSKUKDY2R3
      Vmnp0Dc0QTm1TSaVxDdygpWF2W5pxENiI5Hj2mriM6/95PnJDo2mvRz6elPOZ5ifn2c3lWMz
      FmNy+ji1YpZP77s0VUMQdbY2d9FFE8cnhthNJKhqEpNjI2j1XLc0YpvR9aMRdHXoK4DD42N6
      appmq4HbYWN9fZ2GZvBpWzaRSuF02WkW9n90ARAkmWo+yXYNzIFB/H433p6ebmnENiFJRyMk
      99DzAT42plqtFiaTTLVSwWS2ImIgSBK6poGh02hpmBUFMJAlEVU3MLQWLdXAbDGjtRo0VbDb
      uqURD5rZ9SSpfOUzr50aCeDz3H3V5TvloTKCP83H/3AfFzC12T/7o4q33pc/92CXJUCSMN3K
      yZDMVpT29Wt4qFjYTFFvfnVQscdh/czf5SOyArTlMfb+u7/C6wsxEBmFZhlNNGO3migVCtjd
      PciopDJ5gqEQgt5kL52jp8ePrtYplmoEQwFq5QJNXcZ7D7XgO4FWL/HKX/+Mwce+wyPjfQDo
      ap0/+5M/4Xv/0z/h+puvgVbn+PPfJ710nVIlQ0/4UbYXP0TTVZ7+4d/FWorxr/7d3/DP/+l/
      x7//s//A4MQ0Tz8xwcuvvoeqCvzeT77Lm3/zn+md+QZnjw+wevNDfv7RAn/8h38AwJ/+9CO2
      U7fX7OJj/rd/+BxnnHfX8vRBoj1qfmuTJYhNFhbXUdUWm9ElWkgsLCzQqNdpNcosLK8zN7uA
      RWwR3Ulw49osei1HLJ5gaTVGIhal1HhAkuINnUwqhSrZeO7px/l0wtyNDy9w4uyTCFoD1eTk
      qWcfY+HyLE899ywWyYRdLmMZOc3v/fAZrl9e5aMbq5w7OYler2Lx+1GNFjsL6zz6wks8NWJm
      p+HkmWeewGSAWiuwnlEZ77u3U/N7rfPzoNAWBfAGepmZmcFldTI20sf6ZgzRZMbv82E2SWxv
      byHIJtRGDUmx4nW7EAQBt9dPj9dFs1Ell8nR0gUenJQwg0wqeSsE5FOoNa4vrhFdmWc+usdL
      z54hubuDJ9jPay//NROPvcj0aB9GpUIln6NeTbCVKnD9+hU2syp///d/zLS7zk5Tolypka+J
      uD61e5m/8hHFYp4rV6+TrTS5W+41x/dBoS1bIFFvMj8/z8DgIJlcEa/Xi17PsTA/R6B3AKlZ
      Il2s0OPzo1BjfnEFzdFHr8+DZDbj97uQtRa1Fg9OlWhBYnLmOPVSml9dW6CGGSO1RMM7xR/8
      4R+Sii4j9o+xcfMDkhUr33qun5djN5m7ehH99OMMOlu8s9zid77/Irqmsbq4woDHzFtvvoEq
      e/nOC2f54Fdvojn6cTUyvHV5lqoq863f+i1OWSQWJiP02PcNqAG/E/m2atb/GrPpaBQi61hV
      iL1EHF+w7wuNDXY2o2QLFYYmpnBZv7wqwYMaCtFqNZFl0x0/XTtxj81m846qQtwrnfICHaAC
      aNy8eh1BlukfnkTSG58EygGsra8xOjJ6x1dtVMroigXrp55ID6oCdEJerlTjf/3zt+/4e//9
      33mEqeEvL1d5GDwEblANk8VFZMDD2k4ct01G1OpEt/fw+EI0Gg3UWpHZ5Q1ksw2v00w2lSYY
      7EFyDVDa28RqlUllS4QjQ+ysr6E4PITcFgxDYn1xDlVQmJmZ4mjsTg8GTTPYSNx5Tm2rGw59
      5+zFY0Q3tnE4HVQqFVajUUyyzHYsBsD2dpyxqRmsao10Ic/A2DRWsUVd1SmVyoCw/yRAQNc1
      DKDZqFEpZ4gnCpSzSXKVbihEl4PjwNcbAajW6gD0hkKomk54MAxAwOdmcW6WdE3FalJwWBVk
      xUJsZYG9dA7ZZMIkCSSTacxWC9lMGsMAWXHi8Vhw+0O4uqEQXQ6QA7QBjK/1UAqCwEGI64ZC
      3D7NlsbcRvKOvzcUdN5TA+o75SGwAQRux7nxsQdE11TKlRo2u/1Tx+46hXwZt+dwiyEdFUrV
      BpeWdu/qu4P+B+vE/W7piLPX0FWuXb2KPxii1lSxm3TiqSJjo4NsRFdx+AKMDIUpZVMUmzAQ
      9JBJZajpIpH+9nkmHnT2chX+5V9duKvv/os/egG/13nAI7r/6IgCtCppLJ5BTEKNaq2ORTIh
      NfMsbppRdQG/zWAxuk6r1iTogM14hWxGxWOpUw2GMHfdQF0OiI4cq0pmB/VyhlA4TCGdYmMj
      htvjRtNUbDY7iqKgqyomkxmL2UyrpeH1ejGZJIyj4Z3rOA9g1fy7oiMrgKTYifR5WFxYoT8y
      hF7Pk6806PX7qWYSbCbLTE2Mk9zZIFUVGI70U62BaITolga9fWxmE2fG727LaDN3QyHuW7on
      wQ+fzIfAC3Tn5PZibO6VQBA4eWIa6UvcSOViAYvDzYMSA9dpNhJ5/vm/f+uer/O//JdPMd3G
      UIhO0VEFqNfrDI1PsjF/jWq5wMrKOorVgVtukWuCbLLgUcAQNeZurGGyyJw6c6YzhssDgqbp
      5Mv1e76O2g2FOHwMrcXK0iIIMnu7WzQMkWwmRUuDialpBL1Bs9FA0zWCA8ME3AqfD6/vcjh0
      SyO2Q7gkIQoC9UYDX6APRTAIhvqQTTICApIkIckSoiAiiQKSJN/WYVuXe+eoZIR1jeC74H42
      ghstlXi6dM8yA27rkegP0GFfl04+X8bjcVGr1ZAlMETzg5P11SauriTYTpfbKvPp4/1tVYBO
      0WEFaHHpvQ84+81vEVte5Nj4EC1ZoZSJkylWiAyNktndRLR5cJplqrUSVlcQm3K0FOT92W1+
      dXWjrTLH+lyEDrlB3f1Ax087+odGiG+sAdAoZSmbIJmqMuQ12Nlapym7MeJblBQR1exmKihj
      6EfDQOskR6U0YscfpYJkoscqkCnfqmBg6IiiRLPRwDAMNtdWaWgGCAojQ2HErhXcFo5KacQO
      rwAy/f0BXG4bDXEHq8eDSbJDtchuIk//zFOckEVaohW/24HpiHgmPs+xQV/bY3Pc9od//w/3
      pRdIZ31lhaZoZnJ0+Evdnl0v0MMn8yGoCnHnVItZops7CJLC1NTkF0qk/CYeVgX4V//fRX55
      Zf3Ar3s3/Mk/fI7TkwNtk3ck3aCra5tMnThBvVpHLad4//oSo6Nj7O7sIMpmxgb9bMTThHr7
      SGytYwgmTpw+jXw0d0JtRTgi283OhkIAgq4xe+0alaZKb2QCn6lGSZXQ6yVWd7OcOnkSn1Mg
      X2igt5pUGq1ODvnIcFRKI3ZUAUYGe7k5t7Rf+txkwmGzYPWF8ZrB4fUzGQ5x4+ZNcmUI+OzY
      XG7sRyROvUt7uA+N4K/nYbUBKvUWzdYXo/00TUOS2psJZDGJWC3ta8jw0NsAlUoZu91BtVxE
      sbluO77/y0ojPiy8fmmN7eTX1+3XDR1RaO9i/e1HIwz2PvwdSdo2q2KxGNPTMyS2ovhHTpGK
      rSDZPIScErFkAbPFzmCvl5XVNRS7G7fdQjmfxeULYJYNdjbXqBsKo0Phdg350Lkwt3XXZUsO
      m8eOhRjs9CDaQNseK61aifn5eTZ3kuTjUUy+CFopyd5eAnsgQqWUYz0aZXBskno5T3xrDcXl
      R63kyeczxNMVmsUkuerd17zv0uXztE0BTFYnMzMzDA0EkUwm6tUazZaKJAkoJgVBEBAwaLVU
      KtUaktlBX8ALgCBKVEoFJMWG0vWBdjlA2rYFitzqHt87OIZic5KOx5AjE7jMAihgi0RQJIFY
      LIYgmT75vNsXAlnh9PExcjUduyKjPyTBcE8eHyQc+PqIS90w2h4D5bE//Pt/6LAX6PPelEa1
      xPrmNqHwEN6vaND2MHiBVFWnXLu97ZyqqchSe+/RbBKOhBfocBVAV3n9zbf4xje/RS25wdXN
      Mi88cfKTtxcW5pmenvnKSxxWg4xrF98lWajg9EV46uwMtWyM196dxRBlfvuHL5Fcn+W1KzH+
      7ovH+fnbN7B7vJyd7Of6QpRSXed3fvRd5i69zk7Wx9SgwM21OD2hYXqaGVZKdUZHp6in1kjm
      CvSNnkYqbbGVyjE48SinJsPcXEvyT//tm3c87nbxL/7oBU6O9bVNXqcU4NClee0yO6ki25ky
      bsUgl04we+Maq5v73o9GpcDc3BzX55a4evUqulrl+o1Zzr9/nuXoJsV8mmKpwkcXL/DRh5eo
      tQ5m+1MsFPF6e6gU992QOwsrHHvieSLOGrF0iZurKTw2gUsXF3jpd36IvVbC2jfCC888TrNa
      pVZMkGlKGNU6i9Edfvj9H1BMRomX85hFEbfTzk6mwHe/9wPWZq+zkSnzg+//iK3l2QMZf5eD
      4dAVwNbTTy29iWiyIgDZTAZBFMnfmnjZbAYDKJeKRAJOrl5fYnB8kt6gl3K5jGGA2ixRKreQ
      hP2c13shv7fFe+evUm0ZhHp7aTX3Uw3HnnyOcvQKazs55j/4BYlimetXblBuNFE1AwNo5Hf5
      6c/f5ns/+B6/ePkVysUcNxZm97tXAiDw4rd/yHe+9Q2uXnif5849wrvvfoAhm251tTF4UNrb
      PIDno3fFIW8sBex2O1q5gSvUSyGVQqaBqIHTasMq6ZhkEYQ6DoeTnv4hbqyex2sWSGk6siyj
      WCwoFje9oQyGaMZ6j7URPaFBng0NcvVCiYX5BTyBMG+89irPvfAMhWqD4MhJXnj6LALwwYe9
      nJ2K8NrPf4472MvW/BxWu4Url67z2//gj5AoE3LFCPcJvPLzV+gfPs7K7BViiQx9I8coFos0
      6iUee/JpmqlVXvn5K0yeevJgftpD5qhkhN1XoRCp3U3KmoWR8FdXJDtYI9igkC/g9nhu+xsH
      YQTfyc/eiVAITdOORD5AR+MLtmPrBPqGMMsGq9FNxsdHCdx6L70TxznQTyWbpaen5xBHIdzR
      5D8I6k2VP/vrS7f9ecPQEdocCvGT548R6fW2VWYn6KgCpHe3aIoOAqYKcxu7DA0EWF6L4fQG
      MAoFDKeFCx+8zxNPPU8lu0sDM5PjI50c8oGgajpvXdvo9DC+km+fHer0ENpCR8OhLS4/jVKG
      eK5G2G/HQEASRTY397Oi7K4eBgfDeGwaO3tFqtldMuVul8h20C2N2BYErJJGzTAhCrAb28Th
      8yN/ah+oNlu0VBFJMnD7QjjM3QYB7aBbGrEN1Ot1FEmgrokIhopZkUmmsrjcLmRBQLZYqOSz
      GCYrolan0jQI+rwPfJfIZkvjlQvLt/15XTfaPiGfPj7Q1sJYD+dJ8CFxEF4gVdPZuo1Y/C9D
      1zTENnpl2i0PIOC2dGuDHhZXP7qA2e6iPzKC3Syj6QZoLQxRxmySaLZUDASsFoVqpYKsWEBX
      0RCxmpUDGUOhXOcf/evXDuRaDyP/+x8+z6nx/k4P49DpiAKoqooZMOoF3rwwz+kzZ9FrefYS
      KQYHXKymBYRmmZFeN5magd/jYnMzhiwJTBw/jaVrBhw6R+UgrCNGsMPjZ3p6GqfVxMjkcXpd
      ApvxNNVinroKA5FhnHYL+VKVsdFR3HaRQqEChoCmaZ0Y8pGjWxrxEHG5XPsJMLIZl10GyYzd
      ImPIPdjsLgyTiOh2E/Q6WZifJdg3wGB/Dy1jf4t0EAiigNtxl+G+Bu2N6Wm3PEA+IgrwQBrB
      uq5/EkrQqTCBdsrsxD22Wi1MJlPb5Om6vv9QbGPij6ZpnS6Oe3d83lPQ7snRCZkP+z1+PPnb
      XZDrgV/n2uk265TMo3CPnahEJ4rig7kF6tLloHjgV4BWo8pKdAOA1O4W8/PzpLJFCpk95uYX
      qDU1MpkMhtYikUzf8fWb9Qqr65sAFLPJT66ZTyWYm1+koeq3rt8kkcwc2H1l93aYm58nkc5T
      zqWZnZ2n2lD3ZRk6id29A5P1MbraYHF+jt1UjlI+R1PTSSYSaIfxiDRazF67ztLKOrqusrw4
      z/ZuikYpQ6kJmWSC5gEJNgyDTGKLvWwZw9BZW1lkYzuBoWsPvgJUaw0q1f2srngixeBgBJ/X
      wdpmnGNjA6ysrJFMJVldWsBid97x9Wu1BuVyGTCIbmxzbHyQ5eVl1rcSTI70srS8QTK1x9L8
      PHbXwYUObO/uER6MEPS5WdmIMTU1xvLSEqlkkq3VBQTrnd/L17G+skzv8ASJ7Q3y6TT5XJJk
      sYZ0CLsTtbRH3eRleChMYnUJ18AYucQ25cIemVyB7VQR00EJNjQwWmSyZUp76+j2Ppr5BLG1
      5QdXAUq5FNHNbdweL4q8b6wND0XIpveYW1xGFBVksxNDrVLMJkmWWrhtt+/2LGSSrG/FcXt7
      bnWt1BElGVlxYGhlRFHBZHVjtErk0wlydXCY791rUilkWF3fYmh4iEI2xY25ZQRRQpbNoKtU
      i1nWk2WCnt9cNeNuaagaNrNpvzS60eLG9XkGBg6nR8D/39697UQNBAAY/ttOz2WFgLIB1GDU
      RQgxyPu/AooiigYMoMbdZdcl2+mBHsYLjF5pIPRm0/keYJJe/Bcz05kx/CW6HYN3r/foxyXz
      kUMgTPIKDvbfsLy61tjKr2EKFhcXMIAknhJ1OgSBw3gUz/4c4HJ8wf77D2xsbpFPJ9Qopjmo
      dEIQeCjvPkUyYnk+YJja9NZvt70/GQ15e/iRF1vb9M9P8AOP2lkkHZ8TBi5GuEIeD1iac7ms
      Qp4++v9ptpv6dvaFSsFPWWCXEjcMKY0AlU952F3guJ+yvbHe6PbA8OsJA1mRJRkP5jzura5x
      dHDIzu6rGz9eclPx5ILhRDIaDFh/3OV0mFLlCc+XHeJOj/7RHps7u3gNPJmrqoLvZ585/lHw
      stfl0+kAs7ri2ZOV2Q8gS5PrG+aEjedYJOkVYRRCXSHTnCgMfh/vu/7HyLnl2naaSIqywhIO
      viv+jKnqkiQrCAP/TuP/S1UWyDQjiiJQNTLJ/n6LZVGUBcJ2Gt4fUyRSYrs+JgrDsqjLElOI
      5i/mUgopY4Tj4To2aSKxbA9hKpQhoC7AFFgNhKfqimksAfCDiKrIMCwb1xazH4Cm3cXMzgE0
      rQk6AK3VdABaq+kAtFbTAWitpgPQWk0HoLWaDkBrNR2A1mq/ACLLCy7U4LOSAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table de duration' width='192'>
      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
      Kkkly/bYY7u73d0zdM/SMT0bDAFDDAQdDAMxLAEEBAQDAQQQAcQAMUzQNEwD3fRMz/Rit21Z
      VtuyZO1b7XtVVmXlXrnvy134kWVZaqlkyS6XSrKeP1JkZt089+Y995zzfe95v27UehVZVmlp
      68bnMiGaPXS5BOJFlb6eLuqlAm29B2h1mre9PjejQE+CQbvD4xYFKhaL2GyPbr3im1OgarX6
      SLv8PuHhIMsyjcbueKl+EnykPEC9nKeiGXFajTQqBXJ1Ea/z0fWGuV8qlQpm8855kj4OPKxM
      sNqosry6BpKRgYF+MvEN6qKFTp9n6xMam9Ewit6Gz+vadgp0x2Q3cP0Uv/sP/gn//J/9Uy7O
      bdz1j+JLlzk/11xt18v5D61Yng1c47d/9x/wr/7V75OTHywLqilVJq5cZHIpCJrG1QtnmJiY
      IPYADtP3psz3/vhVGhoo1Szf+u4r204HlxeX7/r6xMQ4AJVClnL9fm1RQK5k+OFrbz1xh/4I
      pNbmSNX1uF0OsqEF5kJZwvNXWY42bVFy0RUmVuIsXH2PVHn73+SOKJBcr9LaNUi3uYKianzz
      G9/gz//GV/jf3/oxdkOOzc08oyODyNYs/+0P/yc/98IAUykPb3z7v6IKeoydY3zxkJM/e+1t
      XAPH+Z2/9BVUpY6zrYsjx0ZpJFb4d3/0J+QFO1/7xaf5g2+9zsGnXuCZToHvvHEeR/sgf++3
      f/ODRa5oZGR0mIVwFg0oFEu0uny4dkwJqdHrd7ASTGOT43hbW1DkOgtzc6RyFZ55epTzZ8/i
      7T6ICIRW5lBt7STXZlEFHa2dPayurKAz2GgxaEg+I9fOncPhdqKztGMhR7ooU64rvPjc8due
      RLFInKNDnaxvFlE3V2jbd5i1uUkGB7pZXgtRkyV6XBorKZVGtcLzTw8zPjGP1e3FopXIVmSM
      1hZGDvQ/dhqjD6MhGigkgszkkuxvtyDp9HR2d7CwtsY+/1FiG6scOPwztOTHGd/I4D3gvetx
      7hru8Po66OpsIxlP3tStqJqGVpf55b/6Owx1OPjWH/4+Rz77JfQ0d+bY2nr4+3/3d5EraWoy
      PP/SS+QTHxg3ub2+5sq8Vmfk2LMY1CpGm5sWpw2DXs+lK4v8o3/xL2nXl8ndYgolCMLNH1cQ
      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
    </thumbnail>
  </thumbnails>
</workbook>
