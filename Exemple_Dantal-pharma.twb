<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
        <calculation class='tableau' formula='-7' />
        <range granularity='5' max='31' min='-7' />
      </column>
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <range granularity='0.05' max='0.0' min='-0.15' />
      </column>
      <column caption='Param Cost' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='-10'>
        <calculation class='tableau' formula='-10' />
        <range granularity='5' max='30' min='-10' />
      </column>
      <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
        <calculation class='tableau' formula='85.' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
      <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
        <calculation class='tableau' formula='&quot;delivrables&quot;' />
        <aliases>
          <alias key='&quot;cost&quot;' value='Cost' />
          <alias key='&quot;delivrables&quot;' value='Delivrables' />
          <alias key='&quot;duration&quot;' value='Duration' />
        </aliases>
        <members>
          <member alias='Cost' value='&quot;cost&quot;' />
          <member alias='Duration' value='&quot;duration&quot;' />
          <member alias='Delivrables' value='&quot;delivrables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1sn6ndn0v9ulta10slaiq05130ak' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.049zl1k1peu1h31fib7f11yke8zi'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets (1)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[F11]' value='[cleaned_BigPharma-ProjectData.csv].[F11]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Actual Cost (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Actual_Cost]' peg='0' size='46011' />
      </column>
      <column aggregation='None' datatype='integer' name='[Actual Duration (classe)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Actual_Duration]' peg='0' size='7.7' />
      </column>
      <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calcul 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Actual_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calcul 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Planned_Cost]))'>
          <table-calc ordering-field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
      </column>
      <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
      </column>
      <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
      </column>
      <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
      </column>
      <column caption='Debut Date' datatype='date' datatype-customized='true' name='[Calculation_1726004602423439360]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss&quot;, STR([Start Date]) )) ' />
      </column>
      <column caption='Categ Deliverable' datatype='string' datatype-customized='true' name='[Calculation_2063774573782769665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables] &lt; [Parameters].[Paramètre 1] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
          <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
          <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
        </semantic-values>
      </column>
      <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
      <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
        </aliases>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
      </column>
      <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5]' role='measure' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Attribute' name='[attr:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Avg' name='[avg:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Avg' name='[avg:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Avg' name='[avg:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Avg' name='[avg:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cnt:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Count' name='[cnt:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Count' name='[cnt:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Count' name='[cnt:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Count' name='[cnt:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Count' name='[cum:cnt:Actual_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[cum:sum:Planned_Cost:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Actual Cost (classe)]' derivation='None' name='[none:Actual Cost (classe):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='None' name='[none:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2063774573782769665]' derivation='None' name='[none:Calculation_2063774573782769665:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='None' name='[none:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual_Cost]' derivation='Stdev' name='[std:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Stdev' name='[std:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Stdev' name='[std:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
      <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
      <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[win:usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Ensemble Type' name='[Ensemble Type]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.802131' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.197869' rowDisplayCount='520' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2063774573782769665:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Var Cost2 (copie)_860187577584152576:ok]' type='palette'>
            <map to='#499894'>
              <bucket>88.599999999999994</bucket>
            </map>
            <map to='#499894'>
              <bucket>97.599999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11.044025157232705</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>91.741935483870961</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>93.400000000000006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>92.67307692307692</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>94.799999999999997</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>21.734397677793904</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>96.25</bucket>
            </map>
            <map to='#79706e'>
              <bucket>89.599999999999994</bucket>
            </map>
            <map to='#79706e'>
              <bucket>91.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>89.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>97.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>86.599999999999994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>95.0</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13.101590997283663</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>92.599999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>86.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>94.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8.7202819816323878</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>92.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>88.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>95.200000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>90.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>91.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>91.599999999999994</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>92.200000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>93.200000000000003</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>92.365384615384613</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11.439756415832971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>90.200000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>93.299999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7.8207217694994187</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>88.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>97.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11.291812973572352</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>92.861538461538458</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>94.400000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>91.799999999999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>89.400000000000006</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>90.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>100.0</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>10.893166472626714</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>86.200000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>94.599999999999994</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[win:usr:Var Cost2 (copie)_860187577584152576:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>11.044025157232705</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>91.741935483870961</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>92.67307692307692</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>21.734397677793904</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>96.25</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13.101590997283663</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8.7202819816323878</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>92.365384615384613</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11.439756415832971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>93.299999999999997</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7.8207217694994187</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11.291812973572352</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>92.861538461538458</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>10.893166472626714</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[cum:cnt:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[std:Actual_Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suisse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afrique du Sud&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ile Maurice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lituanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordanie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bielorussie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovaquie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norvege&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republique Chèque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bresil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danemark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedoine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pologne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turquie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allemagne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liban&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hongrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747395923976:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Conforme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1471269747398406154:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Avance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaune&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Calculation_1726004602423439360' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_1471269747395366919' />
        <field-sort-custom-order field='Calculation_1471269747398406154' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_860187577585688577' />
        <field-sort-custom-order field='Categ Deadline2 (copie)_1109292929463463937' />
        <field-sort-custom-order field='Calculation_1471269747397005321' />
        <field-sort-custom-order field='Calculation_1471269746399682562' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_1471269747387523077' />
        <field-sort-custom-order field='Var Cost2 (copie)_860187577584152576' />
        <field-sort-custom-order field='Calculation_1471269747395923976' />
        <field-sort-custom-order field='Categ Cost2 (copie)_1109292929746456580' />
        <field-sort-custom-order field='Calculation_1471269746598846467' />
        <field-sort-custom-order field='Calculation_1471269746261286912' />
        <field-sort-custom-order field='Calculation_1471269746390384641' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Calculation_1109292929877172230' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Calculation_1109292929876938757' />
        <field-sort-custom-order field='Calculation_1471269746599145476' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Calculation_1109292929462259712' />
        <field-sort-custom-order field='Calculation_2063774573782769665' />
        <field-sort-custom-order field='Categ Deliverable (copie)_1109292929463627778' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
          <calculation class='tableau' formula='-7' />
          <range granularity='5' max='31' min='-7' />
        </column>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 1]' param-domain-type='range' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
          <range granularity='0.05' max='0.0' min='-0.15' />
        </column>
        <column caption='Param Cost' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='-10'>
          <calculation class='tableau' formula='-10' />
          <range granularity='5' max='30' min='-10' />
        </column>
        <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
          <calculation class='tableau' formula='85.' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
        <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
          <calculation class='tableau' formula='&quot;delivrables&quot;' />
          <aliases>
            <alias key='&quot;cost&quot;' value='Cost' />
            <alias key='&quot;delivrables&quot;' value='Delivrables' />
            <alias key='&quot;duration&quot;' value='Duration' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_3F52DBD7FF0D4A1AB94448B0B2DA4AE5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                    <column datatype='string' name='F11' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.049zl1k1peu1h31fib7f11yke8zi' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Carte Deadline-M'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
              <calculation class='tableau' formula='-7' />
              <range granularity='5' max='31' min='-7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Project ID]' derivation='Attribute' name='[attr:Project ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Project Type]' derivation='Attribute' name='[attr:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='Avg' name='[avg:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14000000000000004</min>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='level-members' level='[none:Project Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Var_Deliverables:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='29524580.761088483' min='-21797503.283543896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='21241815.303664804' min='-8307262.7398131508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project Type:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Project ID:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC872064-08DE-460D-B2F2-68AF3BA18C59}' />
    </worksheet>
    <worksheet name='Carte Livrable'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
              <calculation class='tableau' formula='85.' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deliverable (copie)_1109292929463627778]' derivation='User' name='[usr:Categ Deliverable (copie)_1109292929463627778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='21826300.539520733' min='-19153184.252250321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='16329456.743621644' min='-5864865.6716618836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3CE6A15-3476-4D9B-BF96-5B353595C6A1}' />
    </worksheet>
    <worksheet name='Carte des coûts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Cost' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='-10'>
              <calculation class='tableau' formula='-10' />
              <range granularity='5' max='30' min='-10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Categ Deadline2 (copie)_860187577585688577]' derivation='User' name='[usr:Categ Deadline2 (copie)_860187577585688577:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Project Type:nk]' />
              <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='24269259.373107456' min='-19160977.081784643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20411098.756730095' min='-6036081.076254949' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]' />
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A23FE4-17A9-46A6-B5C5-0CB662B3A6A7}' />
    </worksheet>
    <worksheet name='Carte générale'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;</run>
            <run fontcolor='#ffffff'>Sheet Name</run>
            <run fontcolor='#ffffff'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
              <calculation class='tableau' formula='-7' />
              <range granularity='5' max='31' min='-7' />
            </column>
            <column caption='Param Cost' datatype='integer' datatype-customized='true' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='-10'>
              <calculation class='tableau' formula='-10' />
              <range granularity='5' max='30' min='-10' />
            </column>
            <column caption='SeuilLivrable2' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='85.'>
              <calculation class='tableau' formula='85.' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ KPI' datatype='string' name='[Calculation_1471269747395923976]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 4] = &apos;cost&apos; THEN    [Categ Deadline2 (copie)_860187577585688577]&#13;&#10;ELSEIF    [Parameters].[Paramètre 4] = &apos;duration&apos;THEN  [Calculation_1471269747398406154]&#13;&#10;ELSE&#13;&#10;[Categ Deliverable (copie)_1109292929463627778]&#13;&#10;END' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Cost' datatype='string' name='[Categ Deadline2 (copie)_860187577585688577]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747387523077] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverable2' datatype='string' datatype-customized='true' name='[Categ Deliverable (copie)_1109292929463627778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1109292929462259712]  &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Conforme&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column caption='Var KPI' datatype='real' datatype-customized='true' name='[Var Cost2 (copie)_860187577584152576]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 4] = &apos;cost&apos; THEN   [Calculation_1471269747387523077]&#13;&#10;ELSEIF  [Parameters].[Paramètre 4] = &apos;duration&apos; THEN  [Calculation_1471269747395366919]&#13;&#10;ELSE&#13;&#10;   [Calculation_1109292929462259712]&#13;&#10;END' />
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747395923976]' derivation='User' name='[usr:Calculation_1471269747395923976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var Cost2 (copie)_860187577584152576]' derivation='User' name='[usr:Var Cost2 (copie)_860187577584152576:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='18131898.886724941' min='-16034705.107065933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='20295568.112543508' min='-19340045.560288582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]' />
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6751B8A-A9E5-4812-B726-82F6460F57DF}' />
    </worksheet>
    <worksheet name='Carte par région'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Carte par région</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Delivrables' caption='KPI' datatype='string' datatype-customized='true' name='[Paramètre 4]' param-domain-type='list' role='measure' semantic-role='' type='nominal' value='&quot;delivrables&quot;'>
              <calculation class='tableau' formula='&quot;delivrables&quot;' />
              <aliases>
                <alias key='&quot;cost&quot;' value='Cost' />
                <alias key='&quot;delivrables&quot;' value='Delivrables' />
                <alias key='&quot;duration&quot;' value='Duration' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' field-type='quantitative' max='-26497338.224673182' min='-75417034.680095434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]' field-type='quantitative' max='19265541.126000639' min='-8403438.1114913262' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Paramètre 4]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <size column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' />
              <geometry column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Latitude (generated)]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E993EF-6F99-43C4-8347-503B1677A398}' />
    </worksheet>
    <worksheet name='Ecart Cout_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a90c38</color>
                <color>#ad1a43</color>
                <color>#b12a50</color>
                <color>#b63b5d</color>
                <color>#ba4c6b</color>
                <color>#be5e79</color>
                <color>#c37087</color>
                <color>#c78497</color>
                <color>#cb98a6</color>
                <color>#d0adb6</color>
                <color>#d4c2c7</color>
                <color>#d9d9d9</color>
                <color>#d2ebfa</color>
                <color>#bdddf0</color>
                <color>#a8cde6</color>
                <color>#93c0df</color>
                <color>#81b1d5</color>
                <color>#70a2c8</color>
                <color>#6192bc</color>
                <color>#5484b1</color>
                <color>#4776a3</color>
                <color>#3a6795</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{E758928F-CA90-474A-BD87-8225A85D3413}' />
    </worksheet>
    <worksheet name='Ecart Coût_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Ecart Cout' datatype='real' name='[Calculation_1109292929876938757]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929876938757]' derivation='Sum' name='[sum:Calculation_1109292929876938757:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</cols>
      </table>
      <simple-id uuid='{79EC9968-1FAC-4251-B1BC-BFB0CF02F19A}' />
    </worksheet>
    <worksheet name='Ecart Duration_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' num-steps='2' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{31F5F1BE-8838-4194-9268-D2588863C3BB}' />
    </worksheet>
    <worksheet name='Ecart Duration_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Ecart Duration' datatype='real' name='[Calculation_1109292929877172230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Actual_Duration] -[Planned_Duration]' />
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929877172230]' derivation='Sum' name='[sum:Calculation_1109292929877172230:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]</cols>
      </table>
      <simple-id uuid='{540C7657-28D5-47CE-8275-77F6301429C2}' />
    </worksheet>
    <worksheet name='Feuille 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{555CCACE-D400-4DE3-B11E-716589E7E980}' />
    </worksheet>
    <worksheet name='Feuille 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
              <calculation class='tableau' formula='-7' />
              <range granularity='5' max='31' min='-7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{1D41F342-682F-4183-9103-101BC4A902A4}' />
    </worksheet>
    <worksheet name='Feuille 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
              <calculation class='tableau' formula='-7' />
              <range granularity='5' max='31' min='-7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{8F0C3064-8F79-441F-8688-56CDA886834B}' />
    </worksheet>
    <worksheet name='L&apos;ecart type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables]' derivation='None' name='[none:Var_Deliverables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Cost]' derivation='Sum' name='[sum:Actual_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Cost]' derivation='Sum' name='[sum:Planned_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]' included-values='in-range'>
            <min>-0.14999999999999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' value='292' />
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2842C8B8-0F81-4D35-B134-EE15ACFAD490}' />
    </worksheet>
    <worksheet name='Livraison_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Cost' datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column caption='Var Cost2' datatype='real' datatype-customized='true' name='[Calculation_1471269747387523077]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Planned Cost' datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747387523077]' derivation='User' name='[usr:Calculation_1471269747387523077:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type:nk]' />
              <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]' />
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{213CBA80-5D07-4420-BA36-823EF4945780}' />
    </worksheet>
    <worksheet name='Livrason_country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Var Delivrables2' datatype='real' name='[Calculation_1109292929462259712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Phase]' role='dimension' type='nominal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var Deliverables' datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Phase]' derivation='None' name='[none:Phase:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1109292929462259712]' derivation='User' name='[usr:Calculation_1109292929462259712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]'>
            <groupfilter function='member' level='[none:Phase:nk]' member='&quot;Phase 2 - Initiation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]'>
            <groupfilter function='member' level='[none:Project Type:nk]' member='&quot;Marketing - Launch of new product&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central/Eastern Europe-Middle East-Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Distributor&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]'>
            <groupfilter function='member' level='[qr:Start Date:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]'>
            <groupfilter function='member' level='[yr:Start Date:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</column>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
              <tooltip column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1109292929462259712:qk]</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{AA552FCC-9DA3-473C-A44D-DC024437AED5}' />
    </worksheet>
    <worksheet name='Table de duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1sn6ndn0v9ulta10slaiq05130ak' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param Duration' datatype='integer' datatype-customized='true' name='[Param (copie)_519321382216785920]' param-domain-type='range' role='measure' type='quantitative' value='-7'>
              <calculation class='tableau' formula='-7' />
              <range granularity='5' max='31' min='-7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sn6ndn0v9ulta10slaiq05130ak'>
            <column caption='Actual Duration' datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var deadline2' datatype='real' name='[Calculation_1471269747395366919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Deadline2' datatype='string' name='[Calculation_1471269747398406154]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1471269747395366919] &lt; [Parameters].[Param (copie)_519321382216785920] THEN&#13;&#10;    &quot;Avance&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Retard&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column caption='Planned Duration' datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT ' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing ' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project ID]' derivation='None' name='[none:Project ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual_Duration]' derivation='Sum' name='[sum:Actual_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Planned_Duration]' derivation='Sum' name='[sum:Planned_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747395366919]' derivation='User' name='[usr:Calculation_1471269747395366919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1471269747398406154]' derivation='User' name='[usr:Calculation_1471269747398406154:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Planned_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395366919:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1sn6ndn0v9ulta10slaiq05130ak].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok] / ([federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk] / [federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk])))</rows>
        <cols>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEA2584D-D4A5-4CBC-A7F0-FF57CE7D9992}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='L&apos;ecart type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:F11:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DDF71E-32F0-4E5B-A88C-9F59F0BAAB54}' />
    </window>
    <window class='worksheet' name='Carte des coûts'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card pane-specification-id='4' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[cnt:Calculation_1471269746390384641:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_1471269746390384641:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[max:Calculation_1471269746390384641:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2A75222-A588-4C53-8E41-27185C1BC585}' />
    </window>
    <window class='worksheet' name='Carte par région'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='402'>
            <card param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 4]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_1471269746399682562:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Var_Deliverables:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{64E8C13C-5AB0-4165-AB4E-BA9A7ACAD4F9}' />
    </window>
    <window class='worksheet' name='Table de duration'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76CCD75-71B8-42C6-86AB-C77DA5E1A932}' />
    </window>
    <window class='worksheet' name='Carte Deadline-M'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card size='16' type='pages' />
            <card size='56' type='filters' />
            <card size='170' type='marks' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' size='22' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='40'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='130'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project ID:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9B82972-0779-45FA-A824-F9926F49E3EF}' />
    </window>
    <window class='worksheet' name='Carte Livrable'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='44'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[ctd:Calculation_2063774573782769665:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[min:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Calculation_2063774573782769665:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Categ Deliverable (copie)_1109292929463627778:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deliverable (copie)_1109292929463627778:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8B51E65B-999F-4199-B5CE-B5BE167AA5A5}' />
    </window>
    <window class='worksheet' name='Ecart Cout_country'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[avg:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[io:Ensemble Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38670E7D-862A-4F62-AC6C-885237391965}' />
    </window>
    <window class='worksheet' name='Ecart Duration_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929877172230:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Duration (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC9D0A7-3618-46CF-901E-8333BB434D13}' />
    </window>
    <window class='worksheet' name='Carte générale'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card mode='compact' param='[Parameters].[Paramètre 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747395923976:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Categ Deadline2 (copie)_860187577585688577:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD5A2839-5CE1-4952-AA8D-ECCF1B8CADA5}' />
    </window>
    <window class='worksheet' name='Ecart Coût_region'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[attr:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Calculation_1109292929876938757:qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A30560F3-7483-4E67-AA44-AA502394BF72}' />
    </window>
    <window class='worksheet' name='Ecart Duration_region'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Var Cost2 (copie)_860187577584152576:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49F9EC7D-966E-4F93-A671-EC0437DE0BC7}' />
    </window>
    <window class='worksheet' name='Livraison_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747387523077:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E362096-A2DD-48B5-871F-F4F46862F47F}' />
    </window>
    <window class='worksheet' name='Livrason_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='113' type='filters' />
            <card size='70' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Phase:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Project Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Type:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[qr:Start Date:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Calculation_1726004602423439360:ok]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A14218B4-BCDE-4E17-A8C9-1320A6895807}' />
    </window>
    <window class='worksheet' maximized='true' name='Feuille 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{919CC71B-351B-4260-A2C4-1B554D4844D8}' />
    </window>
    <window class='worksheet' name='Feuille 21'>
      <cards>
        <edge name='left'>
          <strip size='219'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[:Measure Names]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Actual Cost (classe):qk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Region:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[sum:Actual_Cost:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6FFCD3B-8EC9-49DF-A697-A35E3CD35D73}' />
    </window>
    <window class='worksheet' name='Feuille 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Param (copie)_519321382216785920]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[none:Country:nk]</field>
            <field>[federated.1sn6ndn0v9ulta10slaiq05130ak].[usr:Calculation_1471269747398406154:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35639CE7-946C-4167-AE3F-CBE6B07A84A8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carte Deadline-M' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte Livrable' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carte des coûts' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Carte générale' width='192'>
      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
      e7DJQLTiFHYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carte par région' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ecart Cout_country' width='192'>
      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
      D+DyUvNPnp5J1beMT5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Coût_region' width='192'>
      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
      I0eqO5tmyI3SAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXAcV3rg+cus+65CVQGF+wYBEOBNitRJ3a2zpVa3u2djvePdsMcTsxMO
      e+zY3fHGxjo2du2YifFuh8fbse452na3Z9y31C21jm7dEiVSFEkRxE3cNwqFKtR9Zu4fRYIi
      UZkALwAk8hehCFXywzsy88v3ve9973uCLMsyGho7FHGrG6ChsZVoCqCxo9EUQGNTSa0s8t3v
      /Hu+/9PXWd/4jvH6rz66re3R39bSNTSu4d23Xuf4C79NU7mdk2+/wgdnBuk++hiZpXEeeXg/
      75yYIxUdYHBohqeevJef/ORnOMrMnP7gTWpbO8lIFlocaXwHv0KT13zT7dFGAI1NJZcvYDEb
      0ev1DI4F+aM//gOmh/tIp1LIUoF0OsvuIw9x/GArnoY2jh17lCNdjbiqWvnaCy9QiExyYSFF
      Y5nplrRHUwCNTeWRxx7jp3/7Hb73w1+yt7OOb//lX9G65wB2XZrv/+NrWF12LEYjdqcbk95N
      PjrAZ30T1FRXIQgC93TVItkqEQThlrRHuJ1uUFmWb1lDNTSQcrz31pu0HnmE6jLrLSnytipA
      oVBAp9PdruI1NG4azQTS2NFoCqCxo9EUQGNHoymAxo5mUxVAkiS02DuN7cSmrASfPfkh04sR
      ZmfG8TUd4KUn7tuMajU01mVTFMBgMGB3+zlQ5aO29cBmVKmhsSE2xQTqOnCUI3taGB4ex6TT
      ph0a24dNeRvPnHiPX731ES9+41uMjw5sRpUaGhtiU0ygUEbmpecf4SevvIajzLEZVWpobIgb
      GgEWZsYYGpkCQC7kOPHpKZBlhvsvcO58L4VrHD1N1QEyop1Hj3WxvBy/6UZraNwqbkgBnGU+
      CpkMAFPjI2QlmVw8SMbgobXcyMjC1S95c1sHFoOIt7KBerfIdHDl5luuoXELuCETyGIpbkTI
      JcOMzixTyCUJr0TRGZyYTEYysTyFQmHV7x9ZnGEylMKYDeOoaqfcZSWfz9/Sjmho3Ag3oAAF
      RoeGmZlZoKzcy4F9XQwODuD0VTHd08uZeZnug3XodMUwaJ1Ox+nzfbRX2OnJlqFfHmZve+Mt
      7oaGxo2xKeHQH7/zJsvRFMl8Hllv5VsvPH27qtTQuC42xQvUuquN8cUkh/d1shAMbkaVGhob
      YlPWAT7vGaLcmOb9z/s5P6CtA2hsHzZFAZwWIxVt+3Fl5zlz4eJmVKmhsSE2ZQ5wuQoBkEHb
      J6yxbbjtc4A//utfcLp/avX3n/7Tx3jyyK7bXa2Gxoa47QoQTaQJRZOrvzNZzf+vsX3QQjM1
      djRblhrxxLtvEklK5PIpTK4AXzl+71Y1RWMHs2UjQLxgYFellUDX/ejk9FY1Q2OHc0MjwMzE
      MCtpA52tNQwNDpHOpKlu7mRhfIBUTmDvvr3o11Gtlhofs9EcwuQXeMubbqQZGho3zQ0pQHlV
      DdHhGRBEmne1szjeT2h+CtlWwW5HkuG5GO1V9tIb4GUZSZJYDi0xPz1HNCVzINCMJEk32xcN
      jevmhhTAYLj0Z4LISN85dM4ADV6Zi2ERnSiuRoHKslx0/H8JmeL1YLzA8888wfs9k8zPjNDd
      Vn+zfdHQuG5uOBp0YWEJn8/K9GKMgGAk5aknHx7gXBD2HmxAFIWiAlyz5iUIIjqdjuYqD2++
      e4qjDz2KkImp5hDNZzMUBB3R0CIObwVmg5ZvVOPWcAMKoKOprZOmtuKvR8qrVv9lz/6DGy6l
      rfsQbd3F/3/79TfpvvcJyl2WtYJSlldffQ3yaWwVdWRzwzzz2EPX32wNjRJsmRdoqOc0739y
      Fhlo7T6Iz6Fw2ocsIevMGHQyZeWVSIXcprZT4+5my9YBxhei7K4t46OzA6Rii9TV1JQW1Jl5
      4vhR0rKRxckh9u3X8gpp3Dq2bARwWIyUt+zBlpxjZHJBWVDKMzI6yshQH7F0nnc/Ujk0LRXi
      i7EFek59yMs//ymf947d+oZr3FVsmQJ4nWZOnPqC/fc9zDPHjykLCiJj4xNUV1dTXV2N3apy
      MFouxfjcErPJAl998WssB0dvfcM17iq2vwkkiDz31RcRBAEBmQfNJSbKl7EHaDTNkLJVkE+G
      aWrqvj2N17hr2P4mECCKYnEPgVyg5+wpIkmFiFJBpLGtk47GalJ5PaOTw7eh5Rp3E1s2Ahy7
      734ADtz3MAc2mixaNGD2+HFbFZotZfivf/99mtuL+w3molqMkYY6W6IAJ3rG+Wf/9serv9tq
      /fzsz3+Hr/3p3zI0dWXT/Hf/p29w7+5q/sN3voO/prhSPBvPceygwnqDzsJL3/otvF4fAJPT
      07evExp3Bdv/pHjRwLMvfYNAoHg27PCYumfn8stPNs7Zc+fxlVdiNa6/cpzJZjEZjbeixRp3
      EDekABMjfUTTJrp3N3Lh3FlSWYmuA/sZPv8F6bzMvkOHMN6q2YVcYPCLM5w+Z+PprxwnHlfP
      LTo+eJ6hySCSJPHIY49jMSg0JJ9m4OL46s/+yVlefOKRW9RojTuFG1KAuqZWBvonKCSWkWwB
      DrYInPmiF6u3hv2OJEMzK3RUO4oRntcGw8lSichPmUKhwLXCkiRRyCbIWPwca3Lz5rsnEcX0
      JdkSZJb5YiLOs48eR8olefPDD3nqEYWwCbnAyRMnOXTPoSt1KZWrcddyQwpwOamDIIogS0gF
      AZ3egCxJFCQJUVf02giCsDYYDqFEVojL166+LggCgsFOtc9OWXUrHYnznJ/KKWeVMLux5hZ5
      861fU8imqNt1QFlWZ+Eb33yJfKGAwWgmUFWlZavYgdxwNGgoFCFU6ceUC3N+RKJr7x5G+nro
      WxHYs8+BICikPxFKKUDR1blWVCC0kiQq2fi0dxJw09ISQBRFPuufIpe/8sXe21KFzWLA43ai
      89Szr7OZqenpkuUWu5HkV6/+ipqGBmKRIOUNXXg9nuu/HRp3NDcdDer37Fn9l47uvbeoWVf4
      pHeCP/2bX63+PtZVz3/4n3+LP/nrX1yVbeKn/9c/ZZdfZpkK/MujDE17mBgdVV5gy0SRrOV0
      d3cTXphgcHYJdml7EnYad1dWCHMZFjnG/vseZbbnQ5ZWVNYBrAEePtTImdOfEYwVuO/Ivs1r
      p8a2Yfu7Qa8HwcAD9x8F4OGnvrquuL+yHn9lPaQjvPzrd3n6iUcwrreZWeOu4q5SgO+9doq/
      /Mf3V38/d18nf/HPn+H3/s2PrpL7d//yeVw2A++/+QYGh5uF2Vm6jz2CQadNgncad5UCKPHJ
      hYmrfufyBYjOkvF0Ep45y1Nfe4mPPviQlmptp9lOY+eO9446DMt9uD0e3nj559Q0dmx1izS2
      AMUR4Nvf/jZ/+Id/uJlt2VwEPQ9/5ZnVn5/39ADlJUXT0UVee/NDEPJIkkD7wfvobq7epIZq
      3E5UR4Dvfve7JBKJzWrL5pJd4a++/Ve8/PLLvPzyy/SPzSqKxsOLNO1/EKurjBeefYzFJeVT
      blYWJvjRj3/Mx6d7kRMLfDqoBeRtZxRHgPr6ok/8rbfe4sUXX9y0Bm0aRhdfffF56usbAOgd
      HFQU9VS1UIgk2f/446RWgnQ0KWeyW1xY4MjxpwgNfMzAaJZo3nWrW65xC1FUgI2+9IlYhERG
      ptznIRlfIZUX8Lqdt6yBt4tgOE5asDI4uQiAv1zZpMmnY3z8/gdIsoRUyNF55DhV/tJ9bOno
      YmQ2woH7n+DzD9+kukFhIQ4AmfByGJfHgyjlSUuilvNok1FUgEwiwnsfnEBCoLF9L+2NVWuF
      cgl6h6eocUiMZHIsz8/j1GfAuB+v0qaVbcLfvXGav/3VZ6u/f+fpw/zJPzleUjaxskSgdT8T
      fSd56vGHODsagqYS9wOYnJnBV17HO796heVEjgf22BXbMPD5J0yuZMjLJp7a6+HjoJ9HO3w3
      1S+N60PxLV0c62Exa+OJo+1Y7QpfdL0ZKRlhLC7R3Ooh76+kzZ3hi/kV3PXu1RSJX6ZU1KUs
      y+TzeeRrokEvH7ZdWpa1svLVspIklzyQu5BfW64kSYqHdzsrmrDMfs7Bw4c5caqHow8eV5QN
      BefJCSayzmqeOeTk0/FZfF2lQyykQo6mrkPkZ87z6q8/Qt/1nHaA+CajqAA2dzkLI6/zRmSc
      3Yce4NDutXZvLh7CWFZDZ5WOgakUspBhIZvG7y9fTXV4beCbKIpr0iAKgoBer0e4JhpUp9Ot
      CWa7IstaWeFqWVEsyl6LTr+2XFEUS8oW0bP/SPH8gpoyC78+cYrnH3+gZFDf7t17Of3ZaVpb
      ullJRznYVqdYbsfhB4hG41DfimxyEWjwqrRB43ag6AVyBxrZ396I2eqitam2pIzB7qfSKTK5
      VKBrdxu1PgtJo5cq1921s6qQTTM5Ocnk5CQfnOnn+H2HFWVNVif3PfQILdV+jHqZU2fOKcp+
      cfIEGGTeeOcUK3MjLMa1/QibjaICTPV9wgLlPLK3gh+9/nFpIUGgsqaetpZG9KKAL1BDU13V
      mq/znU46GuSHP/wxE7NBxqemyGTzinsHJKlAJpMhk8kwuZzi4WPKmex8HicnT57GZLEQXUlg
      umXb6DQ2iuJ4G2jsJPL+f+VHFyUeeeG/3cw2bTtsvlr+5I//gA/e+Q1ufzXlHoei7MJoD9/5
      wWscOXKQC/29VFQ3UlVWeiJcs6sbTyBET/8oDc37KXcZFMtNrgR594NPCEVWaO3Yx9FD3Xfd
      h2YrKPnJmR3p5eL0Ek5PGa4yH6lEbLPbte0QRAMPPfYUv/X4ffRcnFCUq2zZx//yR7+PUSjQ
      3Llf8eW/VCo2l4+jR4+gyyxz4vMLipKnT3/Bg08+Q3V9LV7dMiNLyqHe+UySsfFJgrMTXBga
      X+Mw0LhCyRGgvK4V60oIz1eew2+VmQ7v7IzMydAk//Dzt/H7PJBLkvO20N2ivHnG5vLx5FPP
      kE+EGJoJ0VbtLSkXXxjnrU/O43E7CC4s8eSLX1csc3dbI++8+TouXxXeijIMDuV51icff4S7
      zMuJ0QWqnAIrtTW4LdrkuhQl74q+kOIH3/sbgvhpdecR647SWO3f7LZtOqlMjn/8zdmrrv3O
      04exlFVz/PiDtLY0Qy7J2ZE5xTJCk/289tF5nFYTpELomh9UVIDP+8Z55qvP8POfvMJLD7by
      8XiE422lt2XqjXr0og5DPsF7n83x7LPKCuiwmFlYWkbOpQitgF6nzS2UKP1ZMNp46unnmI7r
      qPE5qajaGYFfiXT2qv0EUFSAeCqPxx9gaaUYF9XeWKdYhqeqnkMHjXTuaobEAp9OKY+e+9vr
      CMclXvzqs8yP9tPd4FaUPdc7wqNfeZxXXnmN+zoqGAumaA9YS8ru3n+AobFZOpslxsMyNm1y
      rUhpBRD12M0C7/zw59gsBhrveZZvPLJztwz++d//hl9+3Lf6+4+/9RAPH2jhX/37X6xec9vN
      /Oc//Rai3lp8+QFsFRxtVy7XWdnE5SXG2go7n8xEONZcegTY09HE22++RbnbwcmBJZ55XjlJ
      8KcnTuAu8/Ju/yUTKNWqmUAKKN8VWWbP4WMkZ4dIp1Ob2KQ7g0wuf1UaR6+z+DX+vX/zo6s2
      4Pz57z/N8/fvLlnG5Ln3+MWZeWrKzBCdwnronyjW56ls4JnKBgAuXjjD6OQsnY2lR2bNBNo4
      igpgspfRtbeWqgePYbEru/001icYjvNJ7xWlcNrMHN/fTN3eB3gpsERloAISCwzHVVK/f4nq
      ujqW0srfrr1H7yeVyqAXZSan51DLDBkLzfL+ic+IJ3McOnY/zXWBHeVeVbyLspTjB//5P/Lo
      I/dT19ROU43CZpFElMnZJZpbmoiHF4llRWoCWkDXlxmeXroqtUtbrZ/j+5s5d3GeZDrHWHAc
      gM4G5Sjasd6znB2eQAQiwWn2P/XfUXp9vngSp9VaVCaHWWB0Ypb2ptJRqR+ePMeTzzzPRx9/
      yGDfOZprn7yS+WwHoKgAVneA3/5vim45h03hVBYpS9/QON27W8mlYgxPhSg3plmwuahwKC/q
      aBT5P77367XZsLsbSsp6vE52O+6jrdZHcKKHoKj8kp4/+SFDk/N0HLgfMR3BV9elKNtQ4eGN
      V1/FX9dKVcXOefEvo6gAyZUQp06dIrE0hW/vU7z08NpJcD4ZIRSN03fhPDabC4fHR607wxfB
      KD7rnRcNWio3aLHcDfQBiu0qJSttvL9K0aB2Xz02uZhD1ewsxyfqlCNS4xmeeu55PnjjF+Qt
      dpyVu8jnS88DHE4HppiMLjHHdNxOc9POikdSVACD2UZdXR05B4yGI6X/2OLCbbPR0ljG2FyG
      TDjEVDJNZc3uOzIatNRh3cVyN9AHKLarlKy48f4qRYOWMoEq3KXdoIcP7CWbl/nKc8/zwUef
      4rGb0etLTwT6Jxc51FLOuxeTOHVxdDrdLcmR+sm7bzIflXnmuSfp7b3A/u7teVyVogKMD/fy
      RU8/6Cz87u8qpAvRmdi9q465UILdHc1El4PEcgLlds38uVFGZpb44NyVw/2q/C6ePLILb7mP
      eyt3UeGxEJkfJWJQngRfHBlian6FmqZWyn0OEpmC4hkJjbU1eKrrOO6RCM1PqbZtdHISl5Bn
      ISMgZbN0de5SlI0WdDz5UBdvvvEWsYKkrgCyRHBxEaPNicteWqlvF6XvYmaZX37Qzx/8i/+e
      yXPv8Iv3zvLNx0pHNVodHpodRd+1y1uOtgP25ugdW7hqMe5YVz1PHtlF3uRFL8vFfKjWALV2
      5dMyc+k89z/yOJNffMA7vRN8vba0Gxagta2Y5NXrhNHz04xYy2ipKb3qf/78ObIFka8//wxv
      v/eOqgIc3NOFzubnoXv2MTQTUu6wlOeVn/0Mu1nHVEKgpbmV+w9t3mhRWgGSy0zMzfHKyz+H
      VIhFs+ZH3mpe/NffW5MM2G4xMTEfXr3md9torfVz4OgxcpLA3mOPUrcrhMOmPCJnE2F+8+4H
      pLJw9P6HqPQpe6IeOHyQicUVBGRaGppV23vm1KckMnnQGzFY7UBnaUEph2zx0NniwSwFSM1v
      7sGGpRXA3cRf/cX/tvpTp9NWEbcjb50aLJkK8p//5ctXyRVTQZYeMd5650Mef/o5PjnxEZ+f
      /pjnnnpasb6J0WHmIhmWZifA4qGxsUFRVrC6uLfTy7K5kanBU8qd0Ft46FA7fWOLBPxZqu97
      QFn2NlD6zRZEBLlAHj1mPSQyWfUDqjW2FSVTQSpQ43fx1muv4aysp3Gd8xEWIgkefOhRjKLE
      G2+/ryp7YO8eyrxeKgBzRmW0yKfoGV1ElwoSS5l458OPefrRzUtRWVoBcine+OnfMUUNB/wZ
      voiW8fsvPbxpjdK49bx3doTTA1cmuYfaazm+v5l9Rx/isoN7aHS09B9f4oFjhzn96QlkQeDQ
      4WOqsl7vlQjYqZFerJ7y0l4rUc/K/ARZSWCXP48sbK61oVCbjGiy40BEcNXz28eVt/Vp3Bmc
      Hpi6Kg0MwPH9zXzw1qssXzp4/NzoDP/7H/0LxTLs7nKOP1I8SPCjd15H6jpGbXnpCNbRyUm8
      Zpm3PzpDfWsX5S6FMA/RwLMvvMBAzzlkk4uHj6lED65DPp+/bjduaQUwWLnn0D7e7lnm0KED
      a/zgGncPrc1NmKrbKTOLBM6cUZVdmh3jk9NfkExLHHvwODV+ZZ/f4MgIJlnmmRde4L333kYQ
      WhVlBUGkY88BkHK8+87b7L/3MeXD0Evw7lu/JJ6BC4OD3PvAYzx0z8YjlxXdOzqjleDYOX7w
      g3/gTL/62bwady6VzZ2UXfLyHT2gcqgg8OnZfp5+9quUV3rp+eIzVVm/WSSaEzCJEl6nytwi
      n2ZgfJqpofP89OVf4qxoua6XH6CivAKT1U33wcM8eOT6julSjga1WNDJBULBBaIpLVnT3cjS
      SoLj//I7V13r+fs/UXyxqz1WfvXLX1Czay9VYka1bEGWMAA5ScTiUNkXXchycXIWUyHJiy++
      yNvvvwu0XFc/OvcdoSUZ4YevvntdfwcqCrAw1o+1ooFuv4XhmUU42FZSTi7k+OSzs9x7z2GG
      B3pJ5AS6u3ejHbZy5xJLZsjkrnz0bGYjBr2O2t2HVyNQ1zOLl9Nw394Gfv3+SfS6LLt3KSya
      GaxUm/OEcjbkfJKqCuXddkr8w/f/IzXNe/nGC89ddxiHclqUpk66dGEWBz9jz949SmJMjY+Q
      lWRy8SAZg4dWT5KRhThtAbVsCBrbmVI74O7tbuCl//XvVq95nVbe/3//R/rG5onEr2SoaKnx
      Ue6xE/B6sPkbaF+OcGIwjCLilax7ANHkynW311/fxp7mSt77zRuYyqp4+OjGnTYqI0AfY6Ey
      njq6h++fHOBg29pksLlkmNGZZQq5JOGVKDqDE5PJSCaWX43k1KJBry8aVKm/pdu19f39v3/4
      /qUznIv8n7/3FR4+0IzoqGBoYh7MAY4erlHOeSrl+E9/8//hry5u8p+N5zi89/rs+NrKShze
      AI898RXVHK+lUFSA2o57OPnjH/NfxmVefOmbJWV0JgcH9nUxODiA01fFdE8vZ+Zlug/Wobtk
      A2nRoNcXDarU39Lt2p797R1b5J/92x+vXmur9fOzP/8dIrEU+S8potNqxmi08PzXv0kgUIkg
      CAyPjV13ftSO1iseprdff4Xue59QdrteQ+maYrO8enoWd0U13zy6m1dO9/HVhw+tERN1epxO
      J4cPHwHgwGHlnJkaGv/DX/xwzQag1hofY0tZxpaKq9cu+8ZeXCVqd3Xjc2w8aqG0AuST9A5e
      hJUJ9tW7GJtViebT0LgJPu2d4F9/abvosa56/vqPvsb4/PLqNb1OpLlaeZvtqz/5B/J6GwCj
      SzH+1e8qn+BzLaUVwFpOd40Dqjs5M7LEY/dsz80MGncn4/PLJSfcSuzq2kd9aydGncCn6yzm
      XUtpBTA5ee7ZZ0r+k4bGdqO1/cp+hzK3cnKxUmhxzhp3PGtMIJVDDK9FUwCNO55bbwJpaGxD
      lBbdvmwCHT1wfZHLmgJo3DH8Pz/6YE3aSZ/LVnLNYaNom301djTaCKBxV/J3r39GMJJY/f31
      43toqCxbI3dzCiDlGRocIp1JU93cycL4AKmcwN59e9FrY4vGFvLKh71XrTrf29VwGxRAEGne
      1c7ieD+h+SlkWwW7HUmG52K0V9nXBIYBIMslr18brFUUlaHECVfKsmuqUpS9Vr7UtSvXr7mm
      UF+purT+KsvKsrwmIPDy9RuvS1as68zgND9+94vVay01vptXgJG+c+icARq8MhfDIjpRXI0C
      lWV5zfOUKd3oUg+/5EOSlR6+WrlrZddeVC53bSdKvFCXZbdjf6Xt3N/123U9dV1R1rV1TS1G
      rgrzPra7/uYmwXIuzvRijExsmZTOST48zbnRZVqrnYiiWIxAvCZsUxDENZGJIFyKNlwbWShc
      E/GIQMkoxqLs1X8vCMLGZUWhRLuUy10Ttcmldm3H/uq2b3/XbKwRuKm6hOus66ZGAMFg55GH
      ryQy2rP/4M0Up6Gx6WhTVY0djaYAGjsaTQE0djSaAmjsaDQF0NjRaAqgsaPRFEBjR6MpgMaO
      RlMAjR3NrVMAucD5M59z6tRpsiXiljQ0tiO3bD9AdmURfVkN+x1JhmZW6Kh2IMsyVV4HzVUe
      ZFlGEETsZgNmo46mSvelmBOB2nIX+Xyeap/jqhR8Rr2AzaynuepyGKtMwGOnUCjQUOnBbTcj
      y1Ixe5pOxGUzXVWX322jUChcVVexGAmPzfSlcsFjM4EsXVWXLBcjC8vdNpqrylbrctlMxVw1
      X6rL7bBQKBQIeOw0V3lW67KZ9Rj1wlV1Vfsc5PN5astdl/pbrMts0GE3G66qq8pbvCf1ATcu
      m3E1VkivE3BYjVfV5XdZyeVyNFeXrcaCybIEskSZw3KpDcW6yhwWBOSr6gIBSZLwu6yX7lmx
      LpfNhE7gqrpcdjO5XO7S8y1brctm0mM26q6q63I/i885t1qX2aDDatZfVVeV14F4qV2Xy3Q7
      rBQKhZt+l6xr3iUbglwyNPL6yUUXGFqSaHYkGcuV015ZfFEvBysVG30lGOna35qMJlPq9+2u
      95aNAAaHH3Gih74VgT37HAhC6ShCDY3txC0bAUpRKBRKhudqaGwXtM+zxo5GUwCNHY2mABo7
      Gk0BNHY0mgJo7Gg0BdDY0WgKoLGj0RRAY0ejKYDGjuYmc4NmGegfJpuJ461tZ358kHxBYs+h
      e7DotaPiNbY/Nx0KIcsSQz2fY3aWkRTstDrT9MdcdFY7kCRpTQCShsZ24oZHgLmpMUSrm/mx
      IapaunDrEwzO58hkspiM+tUgOC0YTmM7c8MKUFnbiJxLMFoQCc5OYKxrxJwfZTgosKfLzuUP
      vzYCaGxntGhQjR2NZp9o7Gg0BdDY0WgKoLGj0RRAY0ejKYDGjkZTAI0djaYAGjsaTQE0djSa
      AmjsaG5aAbLJCD/82S+QCxlOfvIpn378MXEtOajGHcINh0KkkgkEnYHR4UESuTzdDeWMxwy0
      OtP0RuzsrnVp0aAa254bDoZLpxLksmlCKwki4SBVPie5tERSl8Zm863GAGmxQBrbmVsSDDc7
      O0NVZRXjI0PEciJd7a0IghYMp7H90aJBNXY0tyw7dClkWb4qR/vla7B2n4AkSWs2z1yPbKlr
      20FW6+/1y5bidtV1WxVAFMUNN6RUKvXrkRUEYfW/jciWesi3Q1br7/XLluJ21aX7sz/7sz9b
      t/YbpFTHLj80Wcoz1N/L0kqSbDqD0+lQli1k6e/tIRxLkstLOOw2Rdl8Nkl/Xy/RWII8BuxW
      s2K7MskovRcukMlkyAlW7BaDomwyukzP+R6ysoygt2Axrv12XJaNLi9w/lwPBb0Rk9mCQVf6
      hQKYm53BYrUzMTKExe3FIJa+ZwALMxMMDI9RkGWcTieiwv0FmJkYYWhsBkEu4HA4KfWOXZad
      GBlkfDaIlM+rysqyxOhQP7NLYfLZLE6ns6RcLhVncHiEYDBIMBgkkweX015StuZS2tQAABGg
      SURBVNTztdusim29zOL0OHmDTfU5hBZm6OsbJCsLOJ2OkvdryxbCUuF5dK4A5LJEwiFV2ejc
      KLaaVqRshuUlddml6XHKG1vJZ9IsLQRVZWcmJ6mtr6MgFwjOLajKjk5M01wXIJfNsLy8oio7
      ObNAQ7mbdCpJJJFRlS1z2fn0448wuysw6dS+hBKLy1HK7GaSkTAp1aWWAsvRFHaznngkTE51
      lpcnmsxj1kEkvKza1nwqSlZnQy8XVGWNVgednZ2r/9VU+lXLjc6Nbfj5Xqa8pgG31agqM7sY
      otJjJx0JEyuUltkyBbCUVSHHFojFVvBX16vKOqvbSM4ME43HqaqrU5Utr2tmcWyYaDxFXWOt
      qmxdYyNTE5OEQjGaW9Rl25rrGZmcJxrPUFPpVZVtqqtmYmmFdLZAudOiICUzPTFKT/8wLo+H
      yNICOUntTRWp8ntYikQRbC6sqr4FHX6PnZVoDIOzDIPqU9bjcZiIRmM4vRWrx6iVlLS4MJMi
      Go3iqahWK5RcIsynn3zMBx+d4LOzvaqyzurWDT/fyyxOjxNJZlVl6qrKmV2OUjDZcCncry1S
      gALLwSUKsojNbieTSilL5jKEl5aQRSN2u42UiixAKr5CXtZjd1hVZdOxCOFYEoPJgs1qIplU
      L3dyap59hw7TXudlYUl9BJgPhqmtKiceCRPP5BSkBGrqm7AawFtRTUNDHeqplGRi8Tgms5nQ
      /Bx5lRFgJRImnc7gcNjJZjIo+/nkS7JZ7A476XR69XC9ktKFLPFEGrvDQXqd51DIZfBX1eNy
      uTEb1G38fHKFdEG3oec7dnGAvr4+JmfnmRy5SDRZeoSVZZmFpRUOHj6MW04RU7hft3USrIwO
      l8tOMLQEqN5zdAYTFn0Bb3UzFS7TuiWnEzEqG1opd6rLmh1u9KYUy8EghQ04gm1mPT09F5By
      GerbulRlpVyKkeUcTZUe8usUXlFZTTgaJpuMUV1XR4kpwCUEGlraARjr7yUnw9oZSxGX20Mu
      kyQZWkHl7QcEXG4P2VyeXCpGUkJ1BJAKOUwOL21N6qMlgNHuITc3QjoexmB1EU9lsVtKmyy5
      5AplVc3U+9fa/teSSuXY1dVNeHqUvCOA01r6OUdCC0zPzCDJMujMVCl86rfMBNIZzTS3tNLa
      2kJsnTmA3mzl3KfvM3zxIsF17G+Lw8PC5DD9/f0shWOqspNjo1Q37aKjowO3Q8lUKeIPVGIQ
      oLK2DotJ3fb0B2o41N3CUkLCqfDQL5NJp1haCrKwsKj6IbhsMvX395Mz2rGoPrkCc4thOjo6
      aG1uUHungTzzs7MsRlLkklHVr5GoM1JIRujv72diel611PRKEIu3hiNH78Vq1DEyNKgoq7d5
      ic6P0N/fz/xSWLXcluZ6+nsvsJSGcpeyeZmIJwgEAkiShJTLKM6DtmgEgEI2w+jYOJIMokH9
      5dMZrRw6dBAAUZQpSDK6Ep/KXCpBKltAJ4rIsrzOCwUOq5nB/j6sJj2Bmno8DuUv0PDwSNGu
      TiRIZUUaa3yKsjOzM0j5Ar4yJ6FYioBbudxILIXTYceuE0lLYFR5sRfm57E43MyMD5NJp9jV
      sQtjySGj6IkZGBhAb7LS3FivogR6/GVORJsXUcqpjwD5DOFoHLfbychgH+FIhL2720t6jcwu
      H+GefuKLBkwOD2ZLaVOwkMsQT6TQ6XTFZ6ZmgskyweAi0cU5yhpaiaVyuEpOhAVqGppJJ2LM
      LS6BLCh2a8tGgC+fHyzlkoxPzSnKxufGmAolSMQj9PUN0DcwVFLOYLHhcbswrHpT1FXAU16J
      UcgX3aqikkFRpLLCx/jULMGlMOV+t6psbVUFDm8FFruTMvtaN+yXaWhspK66koRoxrHOorne
      YKS2oZEyl5vWjnaFlx9AJBAoJ5PJkEmre6FAYm5hiZGLQywFg6q3TBB1GM1WGuvrcJX5MQrK
      ExFRZ8RhNWG0OXFajDQ0NJSU0xlMlHndyLksuVyOfF7BXQMM9/cyH4oQ8PtJJhLkCupRx8MX
      R4hEImQTUfLbbQRIR4OYy6qo8zsZGBikviagKGvxeMkF58iLBnyBaoS88kRpcXIEV3ULftv6
      XZscG6W6toZINEp0cg5Ph7IHYmkpSEPHPvzutWsQXya2EiGZzpCIRklERRpsLowq35mZiRFy
      sg4QyclgVJkD7Nm3j4mJSZo7uzGvYwJFYilMRhMGUUJC/UsnSxLZZIqUWd0G1xkt7OloZno+
      xN49u5GlguKIkVyeRbb7KUSXWUrGKS9XdoWGpy5icHhw2OwkVyJQWXp0be3YDXKB8dFRKl1+
      vHb1eZ7PX46UTTK7uKI4t9qyEcDs8hGeGaW/rxeD1aG6Gqg3O7Dq8ixH4jgdNlpaWkrKxcJL
      BKNJxvovMDAwQCgSV21DdW0tE2PjLC4sU9ek7tbz+vxMjgzQ3z9ATMHzAOBwuRFkCUmSyOdy
      65phhUIBo8mEyWRStdVXIhFmJidIptJMT02peoFAR6CyEofVQFYwrPOQRXZ1tNPS2kpjo7o7
      Wspl6BvoZ3pykrPn+zAYDIpttngC5MJzhMMhPBVVquW6Kmrx+7zEFqaxuZRHV0EQGB7oI5nN
      Ew7Ok8opjxaR0CLJVIp0QaDMW6Z4D7ZsBBBFPVaTgVS+gGmdRxSbG8NR18lut/qE0mzUUVbd
      QrffhZRLMLWQwOdZu8J8mXQ6jd5kwVdVgU3F+M4kIsgmNw7LIivxGIjqtoovUI23oprFqTHS
      2QK2EquVl8kVZMo9HkBQ8QCBy+0iuDADCMRjEQaHLtK5q1nxw7ESWiCZlTBanarlQp6+3n4q
      a2pIp9K4SqyyX6aQz2B1+RGE6Hq3ALmQoyALuNxu8jklV3CRTHKFxbiZ3Xv2qspFlpcIR6IE
      6hoxiAJ6lcTLiWiE2blFbHY39XXV228EiIfmECx27K5ycil1z465rJzZwfPregmkfI5orPjV
      z6aTJFPq9q+zzE+Fz8PsaB8T8xFFueX5WUSTGbvLR/euBoKL6p6K5cU5hoaGWIwkMOnVb7FZ
      r2N+YYGFhcV13LEy6Rx0dHTitVkwS1kiih9AiXReYPfu3ZCKor5BTySfz5JOp8lk1ReW9GYH
      TrMekSwmR5mqbDaxgs1bTWdnJ7XrrATrzC6CE330rfN89Xo9rR1duB12TEZjycn3Zaob27j/
      vvuo9lk5dfI0OYV7sHUrwc4yXE43+cQSZrv6pNJoceH32JBkcNjXxpRcxuTy4zZkuNDTw/BU
      mJZ1zJrocpClSJymjr3UB5TbUFYRYPjCOSRZpm9wDK/KJDgZi2AtC1DucaA3l45Vuapsn5dk
      LI7F4UA1EgKRSr+L3r5eckY7Lr9fYXVTYmRwkEwmXXSZ6kzrLLAJ1NdWEYvH0RvVbep8Ok4o
      mqKheRc1FeoKoLc4iS5O0t/fz/S8ekiKVMjTvucgjTUB0iqT9tDCPGa7E5fLBZk4y/G0ouzs
      xEVOnjzJclLinqOHFb1rW7cpXtQRXpwljw6jQd0DE50bQe9toKOtkfHRcRVJgcraJrq6u+nu
      bCsZhPZlkvEoJquDzMo847PKXx6TvYwDe7uw2WzsOXAIV4mgucvMz84iCDAxFyJg1xGMqq9s
      biReBSTGLw6xEIoiCgJSIYfb6y8Z3AVFz5rRaESWZfT69axcieVoln179xJemFWVFHV6grNT
      DA4OMjmjHjtV9PJJZAsCuVRCVdbscBOZHuLCyBw1VRWKck6njcGBQZaCi4xMLWA3K5vETo+X
      mpoaHFYzyUQCpSiTLZsDIAjodCK5bJ6CpDyZAbD7qhjuGSBqECkLbCxWZCPo9XqyiRSSlMW8
      jtdIpzfg8XjWLdNf7qPvi3NUNrSSTYRUHxIU41WGLk5gLatQjFcBgfrmVuKREBOzQfzeMpXR
      QqSlvRNkmdjKMguh6DoTcRG9kKW39wJ6y9rozi8jyxJubwV1tZXrjhaZeASDwwfJFWJx5eeb
      ioUZn55HxoDVCEvLEQK+0vfZU16DzZViKRzlwOEj6FWGTLvTg925/vPaMgUQBBFPmZeCLOD1
      KgeXSfksQxfHMOhFBFGHsK5fZWNkUkn0VjcuEsiCDZ/KYtX14PCUc/BQefGHz7Wu/MzMLFaH
      AyGXVnGDCgiCxNjkDFajnvDCPFZ3GTYFhRkb7iOWKhAKr3DvvUcVlUXKZ7k4fJGsJKLX61hv
      3UQ0mCn3OojG4ljtAk6VCbPO5sGXmmdgapk9h48qyhktVrKpBDmp6FHNqbm3BAGDyYLbKSHL
      BWRZd9NJF7bMBMqnokzNL4OUo39gWFFO0Blo3dWB1ainqa2DgE99vrBRCvkc6XQaQdQhCjIF
      aWtSueRyeZwuF263a113ZZnTynwwRFowqEaDOpwu9HqRfDZFMqU8sRX1Rto62jDoTXR2dkBO
      2aYGkPM55hdDBJdCLC+qmUAFhoZG0Uk5vNUNTI6NKkrq9Cb2HjjEoUOHOHBgL9FL8WFKjA33
      0/f5Z1ycmCIUX2+Rb322bgQQdUj5LMlkEp1e2aaWpQIL8/OEQiFE2xwetxtPic0V14ueNDmd
      A11ilvnlFUSzC+s65srtoKWtjaVQhMI6Y9vywgzBaIbKynKiaXWT0VdRja+8io6OThbm5yk4
      rComk+6SCdSHzqS+yAfFRbNUPIZJddFMoJCNMzQjcM+RA/RdGFCUlPIZBvoHyElFE6u2qV29
      flkGZELLEaqq1J0cG2FLFKCQzxLPyNRU+kln89SUK5tAgiDicDjp2LMPAMM6gWgbJR2LUTBY
      CIaTHNjXTv/wEhWeWze/2CjjY2NE42mMOh2BujrFCM+FUIQ97dWc61/Cb86RyINd7ekJxfiX
      QGXlum0wWyzkkln0KgkMZFlG0Jvo7t5NKp3FpuKNA5GuPfuQBRERgfaONmVJvYnObnX//5dx
      OOwsRWIYkdCv4+TYCFuiALIkFWPPAYNeRz6fV5QVRBFHia13N4uzsonlkYs0t+0ik0xR03Dz
      X5MbwepwYTYZWAxGVdcBRCnP4Mg0qViMxbQO5VC866XASjxHV1enulQuzejoBJcNRYvdrRq+
      8uVRfX1P1MbxBWrwVtRsaJFxI2yJAuiNxQ0oVX4n5wfG8fgDeFzKK7a3BUGkoeXyl8mCesja
      7cPttBNLGNh3eBdmlSXbXV0b/0peHyLZ5Ar9/f0YrQ6a6mpKLzDJMpIsrboTb2M2HVWWF+cI
      hmNkM1maAzc/AmzZjrBUMsXFixPsOXCQfFJ9JfhuZX5imGA0i8tl58L580i3yMO1cWTmZ6Zx
      ef0YjUYMKl9qvclKe0cnnR0d1NdVq7ogbyeSLCPLMqJOYGJkWHFH2EbZokmwngqfi6xYgUUn
      4S9f3069GwkncrR3tCAIAg0eK+Ec+DZ5Hm53uDBaipNqnV6tcomRwQGS2QKh5QhHjym7Nm8n
      oUiMzs5OlqbHkJzKO8I2ypZ5gfyVNVf+36++rH63EvB76O/vv/RLpGXTn4aA3bn+WsWqtCAg
      ijoEUdyypMcVHifnL1xAyku034JF0duaGlHjLkSWSSSihKMpaqqUJ8G3g9hKhGQyTigcBUQa
      Wlqw3uQkWFMAjTuGQiGP9KWgHr1ef9Mj0dbFAmloXCehxTlWViNABWoaGrEYbi75snZEksYd
      Q3llLU6LnlQmSyKZLpkY4XrRFEDjjiIcS9PdtZt6n51QTD3UfCNocwCNO4b56QlCkRiCTocs
      Q3NrG2bNBNLYKQRq6vG57eSyWaLhMNmNpPRbB20E0LgjCU2PkrMHVJOObQTNC6RxR7E0P830
      XBCdyUZ75c1HcGkmkMYdxUokjM3popCOkVFPjrQhNAXQuKNIZ7KYzWZMoszo+CSprHIo/UbQ
      5gAadxTpZJyZmTlsLhdmkwmbzY5Bf+OeIG0OoHFHMTUxRiYWJ6fT4zU7burlB80E0rjDMBoM
      hMPLzC2EMN9kIBxoJpDGHYQs5ZmbncPpLUdKRhCsZThUkpRtBG0E0LhjmBkbRjJY6T17ipGZ
      ZWzmmx8BNAXQuGNIJpKEgguEwlGMekirpEffKP8/QSLh54v8LYgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ecart Duration_region' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Feuille 21' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 22' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAASQUlEQVR4nO3d228c53nH8e/s+bxLLpdnihQPEmXF1sGW4gS24xRNgiRI0QZBUwQoil61
      QO/a/AEOWvSuQXLTBmibokiQAD0CbdIUhoOmbmxLcWRLJilSPCzJ5XJJLsnlns8z0wtSjKRw
      bZK7GpGa5wMIErmj4bMv57fvzOwzs4qu6zpCmJTlSRcgxJMkARCmJgEQp84/f+87fOtb3+KN
      d+40WELlrZ+/fah12VpXlhDGSJV0vvbVL/PDf3+dLpL815u3uPLKFylFb7C4mWX8+VdJLcfI
      rM0xGV3nU1/4Mu++/i+UKhVe/cofce1cz/66ZAYQp04ls8W3/+qbfPI3v8C7t2d4+VOvUNxe
      Zrvs44+/9iUK5SqlQo7VHPzpn/whUxN3aO8d4fe/8nnW1rYfWpcEQJw6faMX+caff4Opd/6H
      F55/lrfeuonL30XYXeBvv/+vqLpCe0cno51uvvnX/8jz1z5OKBTC7vQQ8LkeWpfS6tOguq6j
      KEorVynEoXxw6wZriQSDl19lfKD9UP+n5QFQVRWr1drKVQrx2MgukDA1CYAwNQmAMLWjvw+g
      1bh3b45KpUzf2XNsri5TqZQZHL9EyC1vK4jT5egHwbqGqkNyaZqyp58znX4Scx9A5Dz9bS5U
      VcVikYlFnA5Hf8lWLCzcvY010M1Id4DpD97HHe5nqN2Npmnouo40mIrT4sgB0Gs54skc3YqD
      1Bas7ZTotm2Rawvh9zjQdf1Qp0HVTBY1vXOsok8jxeHE3tP9pMsQj3hi7wNk/+M/Sf/gh638
      0SeaY3iY7r/8iyddhniE7KwLU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAI
      Uzt6AHSN+HKUqbszVOoaq7EoM/NLSPubOI2OFYBguJvBDjuz81E2CwodtgKxVPkxlCfE43X0
      dmiLjVJmhZXNMuMDQeJFJ+0BG4lUETVo32+J/iiaph2n3lNL13Xq9fqTLkM84hjt0AVuTy/z
      zPgoiitIJjrLxEadoWevYbXuTiiH6QY120UziqJgs8kVcyfN0X8jNjefuH4VHbA7PVx57iI1
      XcHjNNcGLZ4ORw6AoljwBwIPrMGKvZUVCWEgedkWpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQ
      piYBEKYmARCmdqwAaGqNQnG3+zOf2WEzlW5pUUIY5RgB0IhF55hbjKOVM0wvrlFYXyCerrS+
      OiEes2O0J1oYGh5hej6B4vBQzW2zomlcHXOgqqq0Qzcg7dAnU1P9ueX0Bv7uYYb9RZYTaZ4Z
      bAOkHfog0g59Mh19K9TqzM1HqVXyFC1Bws4qawU75wdCj6E8IR6vY10RNnb+wq++DvlbWI4Q
      xjLXfogQj5AACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIUztWO/TivQlu342C
      rjF1532mpqapmqu5UzwljtUOfXb0HNPzCaq5JGvpMpGQFU3TUXVN2qEbkHbok6mp/lyL1UZn
      Tx8Xe21MRpM8N9a5+/1DtDqbsR36MG3iwlhHD4BWZ25unnS6QKY7gl/ZZGqhxtgzH0NRFID9
      v8XDZFxOnuO1Q49fZGzvy3DwwocuLsRJZq79ECEeIQEQpiYBEKYmARCmJgEQpiYBEKYmARCm
      JgEQpiYBEKYmARCmdowA6KzFFphbWgNAq1d45+a7LS5LCGMcawYIhTuoV3Y/H2A5uoD60d3P
      QpxIx2iHVnC7XACUs5vEkjnqlRzZfAmv2yHXAzQg1wOcTMdrh56dZTWRoiNyiSvPXeDevRmc
      Dtt+v7vcHv3Xye3RT6bjtUNfeJaxB7qgr1273sKShDBOg5dhnUIuQ6laR1erpDJ5Y6sSwiAH
      BkCvpPjmt/+G7/7d35PfXOT7P/650XUJYYiGO+Leth5+94uv8L0f/tuhDmqFOI0OPgZwtPMH
      X/0Car3KZz//JarOdoPLEsIYBwZAURTq6Rg/+MkvOTcQYI0+njnba3RtQjx2DXeBnN4AlXyK
      t26+z+igbPzi6dTwNKi/4wy/89u/RVXVifR0GFmTEIZpOAOsTt/g9XfuUi6VqNVUI2sSwjAN
      ZwC3P0Ry5W3uWosonjAD3WEj6xLCEAcGYCuxRF4J8tKLVwHwe12GFiWEUQ4MgMPlwWnRGRkZ
      ASD0yIdhlwoZcmWdzvYAG2urZIp1RoaHsFrk1n/idDkwAKV8mrd/8cH+1+eeu07Hfgg00qlt
      tvIQCXqwugN0awnmNwqc7/EZUbMQLdPwGEDXVGqqjk3RUbUH3wm20NPbR3o+gWJzoFQ2mNmo
      8cJVL6qqSjt0A9IOfTIdGIBwzxAXB+aZyEX49JDKj2biXBkf3H1Q18jncxSKBcqFNFMLa1z6
      2DiqqmO3STt0I9IOfTIduBXa7A7GLn2S4vIt/un1W3zi8rkHHtXJFSp0R0JUNRujQ73kclnq
      qrle0cXToeFLUq1SolwqUamprG/tMH4msvuAYqWnt29/uYBf9vvF6dVwP2Rj6S6eriGuX7nI
      YjxpZE1CPHa1xBqFN/+v8Qxw5uInuaTeIZ0t8PJV+RCMk6YWj5P/2f8+6TIMo9hshH7vqy1b
      X3lykp3v/kPjAGwsvM+bt+a5MODmpzfuMPqV32jZDxfNq21skPvRj590GYZRnM6WBuC+hrtA
      gUgfaj7Jz29McPniWKPFhDjVDpwBdpJxJmaWef7adXQg4ncaXJYQxjhwBnC6fSj5VeY3q3TY
      C7z1QdTouoQwxIEB8PhDPP/iy+ws3uanb08y3N9pdF1CGKLhQbCnvZ8/+/rXjaxFCMM1PAje
      js8xGV03shYhDNcwABYL/OC73+HHP/kJM4uJhx7TNZVqbbexq1YpUyxXHm+VQjwmDQPgC/fx
      pc+9is1iQXmozV9jaX6ayXuL6PUS792ZZHbifTJl6QUSp0/DY4C12V/y07dvMdQVIGPr5PzQ
      /TtDWDg7MkZ5PkE5u02oZ5CxQJnJtTQXzwSlHbqBVrdDayZsPmzp+O1tf43vCtHexcevXyc2
      eZOgs8H9s9weyhtZdtQioWBE7g79IVrdDm2xmmv8gNaO3972d+Aa9eI2r9+c5aWXXuIzn375
      4Qe1OnNzC5RKVdLVCBGvxlbNw7l2uW5YnD4HR8rdzudeeYEb7/yMH62sMv7iZ/jU1fO7j1ls
      jI0/86tlg9IOLU6vg+fReokbN26SSKYIhLsZlBtjiadUw52q85df5LN9XVgUudODeHodfHNc
      u4ez/R6jaxHCcOY7lSDEAyQAwtQkAMLUJADC1CQAwtQkAMLUJADC1JrqLtLrFe5M3EVXVUae
      vULA+dFNcEKcJM0FQKtR0xR8dp1yVcNnVw7d5qzp5mrn1dFR1dZ91JSume+zm1s6fvpHtEMf
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 23' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='L&apos;ecart type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Livraison_region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAATVUlEQVR4nO3daXAb93nH8e9iF/dBgABJ8ZJEUaQoiZItS7Ll+oidOHabmUxnktrTNmn7
      qtNpZ9ppX/S9p687mem7vGg60zROO5k0bRLbae2kcS5ZsSPJkixRvC8cBAiAuG/s9oVkJbHJ
      RBYI8NjnM8OxIQI7zy7xwy52/8/+FcMwDIQwKctOFyDETpIACFOTAAhTkwAIU5MACFOTAAhT
      a2sA5Ayr2O3aGgBd19u5eCFaJodAwtQkAMLUJADC1CQAwtQkAMLUHigAybVVFlZiACzPT3P9
      5jQ6sDg7xY2pWeTkp9grHigAdrebaqGEXtlgo2ZntMfK7Zk5CvgY9jRZSpa3u04h2kJ7kBd5
      vR5gA71eRbM7sLsMSksRvAMBXM460VKVZtOGruu78mLYytwtVtNVLpw/Qz4Z5dqtBc4//jgu
      m0qlkOHdy1cZHjuFXy1y6do0Q4ePceSAm3eu3OLc47+Dx/5Am03sQsrHb4hpMj89xdzCGmcv
      nGVxehoDnWOnH+b2teuAweS5x3BbLTSbTVRVbUvhD67Ia9/+OWdO+FkouMlFZnnu+edBsWCz
      asSjYXyhPl5/7bv0e32cfvY5PCq8/u3/5pnnPskPfvQun/3Mp3Z6JcQ2eYCPMpXRY5OMHpsE
      IHThwr3fPPb4ha1etIvYUfQU08t1cpYo4alV3mh+l57Rh3lscpRQT4j/e+NVxk6eo9ta4uL3
      /5eaYke3OnC5fVjr1Z1eAbGNTHgWSOOhc4/S5bZx7OhjDI72cOzoCJVqhbm5eX7y5muERk8z
      0NNFtaZzcvIEjWoJN3Xm56ZRurp3egXENnqAQ6D7tzsPgSARXaGCg4MDvVSKWZajaUb6HNyK
      NhjsMogmNnB4AxwZCDI7v8yR8Qms1JidX2Hs2Biqouz0KohtYsoACPGBXXM6I1uo8C+vv7fT
      ZewaqqrwN59/bKfL2Pd2TQDKtQZvvbe002XsGlbNIgHogF0TALEfGfzozdfJFps88dzvEp+7
      Srxo8OwTd84Wzty4zFIsRSJb5osv/j5Xf/oaFfcpurV1VmJJuvoO8ehDE22t0IRngUTn5CiU
      vHzyydNcfu99Ro8/jNrM3fvt+KmzXDh1kMHDE+STq+TrkE0XGT3+EI89Mkkilmh7hRIA0UZd
      HBqy8s6Vm6Ao2O32D/3e4CfvTvPUuWP85ze+STaT4ubt26zOvs9bv5jlhU8/1fYK5RBItFWt
      XqdUgyeenOTtH7/BrVszDB6eYHkhzBNnx/AfGEVT4M/+8m8xSlG6369x+fIP8fUOMTW7xOmJ
      kbbWt2tOg66lC/zFP77arlL2HKtm4Zv/8NJOl9EW9UKKgtJFwL3zn787X4EwHasnSGCni7hL
      AmBCkWSev/rSaztdxq7QUgD0eokr16Zo1mtMPvIIt69do6EbPHTuURyaDBcQu19LAaiXc1h9
      vUz4a0zduIWnf5TDzhyLaznG+z0fqx+g2Wy2Usr+Y0Cj0WjLopvN9ix3L2opAHZvHwPFCMvh
      BF5/L416nZpax2bTsFjunGH94L+/jYwZ+hClfdtEVeXI9wOtXQdQdLLZPLhCjI2OYKsmWUw3
      Gelxo9wdMakoyn39iI+63233cX/EL7X4UaBydOL4vUdjxydbLEeIzpIrwcLUJADC1CQAwtQk
      AMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1FoOwMb6GkvhO5NlZFJxIvFUy0UJ0Smt
      DYar5ZmLZDkSaDK7Ctl0jpC1xLq7ix6PDLkVu19L71JDc9AoJJjOGxwZcWCEehh0FZhO5eh2
      dklDTCukIaYjWgpAo5jGGhhkPGSwsmFQra0TyZXpOzhwr5njfps6pCHmQxTQtPbsRaUh5pda
      2hJWTy8joRjJqsHJYwNk0wmKjSChXXC7CyHuR2vvVEUh2DdA8O5Df7APf+s1CdExchpUmJoE
      QJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJhaS2OBmrUys/OLVIo5ekYm
      KSYWKTdUTk2ewCI3IRZ7QEt7ANXmZOL4CVTVRkDLU7P3MBLUWFwvbVd9QrRVy+OWa8UNcAaw
      NBtoVhc2m5VapU6z2ZSGmFZIQ0xHtByAlZUIR0aPY9d0ivNXua4rnD53GFW9cwwkDTEPSBpi
      OqLlLXH03qQYKmfPP9rq4oToKDkLJExNAiBMTQIgTE0CIExNAiBMTQIgTG2LABgU81kqtQZG
      o0Y6W+hsVUJ0yKYBMCopvvRPX+Yr//wVcokFvv69i52uS4iO2PIQyNPdz4ufeYqv/ce37ns4
      gxB7zeZXgu1Bvvi5T6E5vXzi6Wew9R7tcFlCdMamAVAUhULsNj+eSpIOLxI4bjB+sLfTtQnR
      dlseAvUMj5GORnj6mac4MnSgkzUJ0TFbDoaz2l34fU4SqTTu/i0CYOjcuHoF1eHiyOgR3rty
      FQyDU+cv4LbKGVax+20ZgNjCDayhEer5GLO1KE8/PPqR5zSLSWK5Gn0WlVwySmB4nBFnnrm1
      HMcGvNIP0ArpB+iILQNw8OQTDMXfZL0Q5KXnL2z6HIvVQU9PH5OjPq7dWMUWcFAyqrhcdpkg
      o1XSD9ARmx6nRObf599e+XeWY0lK+Q1mFsObvlixe+n1wK3ZOCfPnMFNjnBR5VC3s61FC7Fd
      Nv0oGByd5AtDh3n9tdcpN60cPTy0xcsVBg+NMnj30cjRifZUKUSbbPlNNTz1LhXPKM+e7uOb
      b17qZE1CdMyme4DI/Pu8dWWWVLbKq4sWjpx9rtN1CdERm+4BBkcn+cMXP0fQY6Vc17Hb5Auq
      2J+2PgSavgLePh49M8lCNN3JmoTomC0DMDT+CBfOPkR4NcyFUx+9BiDEfrDlCeFCOsb1mQyf
      f+kLWBS5z6HYn7bcAyhWF/GFq3zta69w9fZSB0sSonN+w4AdA6+vC6fbQ6hbpr8W+9OWAXD7
      uhnoCZBdj7G6lupkTUJ0zKbfAUr5DPl8EU9wkE9NTOIPSi+A2J823QMUc2nKDWhUi4TDYbIF
      ud252J823QPUKiV+9NPL9x67Q8OMDG72TLh1/SpoDkaOjrM6f0smyBB7ypZXgv/kj1/C79I4
      cmQEh9O1xcvrrMUSePzdaJWETJAh9pwtrwMs3bhIzTVEoxDnp5cbnBzp2/Tlzz7/POnVaaZX
      Gmhd/TJBxnaRhpiO2Loh5vh5fnb161wvG/zBH/3eps/RaxWmZueplUsMj59kefqmTJCxXaQh
      piM23RKGYfCtb7yCbvNh5JIoW7w5LTYnJ09O3nsckgkyxB6z+Z3h8stEm/386Re/wJ+/+Azf
      +f7bna5LiI7Y4r5AdurZVb761X/FaFQ4NLF5T7AQe93mAfD28/d/99edrkWIjttyKEQqPMPN
      xXgnaxGi47YMgEWBV77yZV773veYXop1siYhOmbru0OHhvjsC59As1iQdgCxX20ZgOj0O/zg
      4mXWYytcX0h0siYhOmbLAPi6D/DYo49SyWVwSFO82Kc2vxBWSvLGO7M8+eSTfPrZpzpdkxAd
      s/k1cWeQF54+x6W33+K7q2FOPP4CT58Z73BpQrTf5odAjTKXLl0ikkjTFRrgUH+ww2UJ0Rmb
      7wEMmHj4cZ4f7JM7Qoh9bdM9gGJzcXjowH29+avFDb7xX69iNCtcevttLl28SLGub3uhQrRD
      a+NiDYP5hTBHDg9SySRkgoztJP0AHdFSACr5JKlcicxGgoGgl3pNkwkytov0A3RES1vC4evh
      qSd6iEYjDPQPUJ2fJlzUODkkE2SIvWFbPgoGBu50zMsEGWKvkakchalJAISpSQCEqUkAhKlJ
      AISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISptTYWSK8zfXuWSq3G0eOTRBamZIIMsae0tgdQ
      NMaPH6fbCfHYikyQIfac1vYAikJqLUymquNVa2j2LpkgY7tIQ0xHtBSAZq1EPJUBw8Dm6yO1
      PCsTZGwXaYjpiJa2hGpz/doEGQO9MkGG2FvkLJAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAw
      NQmAMDUJgDA1CYAwNQmAMDUJgDC1FhtiakxNzVIr5wkMjRFdnAHD4NT5C7itki2x+7UWAIuN
      8WNj3Lr2HmptQybI2E7SD9ARLc4Q0+S9K1cYmzyDS8+ysVaVCTK2i/QDdERLxylGvYKu2gkv
      zVNUunCTI1xUOdQtE2SIvaGljwLF5ub82TP3HnfJBBlij5FvqsLUJADC1CQAwtQkAMLUJADC
      1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1FoOQLmQYT2VBSARW2VxNcb9DYAWYue1GACdTDrF
      2nqaZnmDcLqGrbzOWq62PdUJ0WYtDgy30D84QGYuTrWYw+MP0OuyMr1RoNfdJQ0xrZCGmI5o
      sSFGJ58vUCoVUYeHyK6sMK/WGBwflIaYVklDTEe0uCUMCsUafT1d1LFzYmyYalMl4JQ3s9gb
      WpwjTKV/cPBX/sGBu7V6hOgoOQ0qTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTG1bA5BJxYnE
      U9u5SCHaatsCoFezzIUz1FIrrBdkrInYG7YtAJV8Bl+oh6H+IPFUbrsWK0RbbVsAHN4A+dQ6
      kbU0fSHfdi1WiLbatmGBFruP0cEyxUaQkFtGG4q9YVvfqf5gH/67/28Yxr2f+6Eo0OW2b2c5
      e5qmWu57231cFtnW9yhGm7ayrus0m00Z598hsq0fTNsCAHf2AoqitGvx4lfItn4wbb0Qthv+
      IIahU6lUf+3fdL1Jo/HRFsxSIU++UNzy0KNer2PoTRbn5yiWKjT1tpT8QD7Y1nqzQT6fp6lv
      vg6NRgN9i/UrFXLUGjqGXicciZHP5cjlC79xe9wXw6CQz5PL5WjoLWw0w6BcrgB31rNSrd35
      m9ytL5/L3Pub5LNZqpUSxfKH+9MNCrkcuVyOpm6gvvzyyy8/eEW7Xza+xMXrCxw5OEg2tUYs
      mcNrt1CoGZRzSWKpHH6fD0WBK1cuo+h14tkqjdIGmWIdn9dNIrpCoWpQqZTIRGaYWSvS7dKw
      OH0U0zGSuQpd3t3QCqTz3uVfgEVDszvJrkep6BrodVKJNSq6hfff+Rnr5QY+h4NSKU+tCeHl
      RSx2F7lkBIuzm3x8iWpDJ5LIoKkWvC4HC/NzWOxuLI0K84ur2K0Wvv+DH+ILhKBeJLFRxOO0
      UsznyRWKlIsF4uksfp8XpVHh8o0pHDYbDoedeqNJvVJG15sUCwXKdYN8ao1iHawYrMWjVJsq
      boeVpcUF7G4fVtUC9RLf+Z+3GD82RmT+Bu/Pp/C7NWxON6m1CDenZ+gfGiYVW2VqegG/10Gu
      oqA0CiQ2inf/RiUuvzODw2XD5Xbv/6EQaxsVTg752Kg0mJlbwOd106jkyRQrGCjk15aJZYrA
      nS/iimJBURQUi0pk7ibR8DIbTRc+t4NkMkmwp5ex8WPUMutkc0nC6Sohv2eH1/KuUgrFN8Sh
      QwexlOKkanbCi7OEVxZQHH7WVpcJhvoYHztKNrrATHQDh1XB7nBy4/qNuwsxSBXqBN1WSoU8
      hWKZpt6485wbN5iZmaGruxurw8PQ8DB93W5mlmIoxSTRxBo//8UUPrvBdDiNkUlTunuTnEq5
      RC6Xp1rOs5bIEFldIBWPcOX2CkopRaZuI7Uyx9palJrmJbI0x/z0TTzBPqZv3yaZiFEoVxk9
      3MNyJE2hbuB3aGQ2kmSTMTaqGr3dXWTjKxRwEQp476yNXmd2MYJSSpHIVu7WUiSXz2Po+v4O
      gNGskk6lyZSqrC4uMTExwcLUbaq6AXqdpXAcv89z73DIZncS7BtkfNjHajRHl9dOuVTH6XFh
      s1l/Zcm/PNywO1zYbLYdWLtN2D00Cml0XadSLrMWXUU3VHTVRqDLg6qqWCwKTd1AUTXGx46S
      ii1Tt9ixW++cEGzWilhsHhRF4dDRcSbGRliPLNNQHdg1jdHxYxRTUWLrGcDA0Juk19dIFyuo
      ioWjY+PYNQuBQAC7qvHBgWbf4EFOnJjAoanohn7n8MmiMj4+jtFs4nA6cFhVGroFt8uJVbNS
      qZRZWVrEanficnuwaio2Ty+lxG2s7tC91a7XqrjcHgzDoFar4na77x0WGYZOKhEjXahgvXuO
      4MDQYU4cn6C8Ht7fh0CNahl/3yAHh4awGHVK+RwWp5e+UDea1YHaLFMzNEKhIHarhtVqw+/v
      QrFYKeWSKHYPgyOj5KILlBsW/D4PLpcb1WrH6bDh6e6lkV1jo1gn0OXd6dUFixWHVWdpJUL3
      wCG0Rhmry0tPMIDT6URVLfT2BllaChMMhnC4XLgcNtYTCbr8AQIBPxvxOD3Dh3FoCpHVFVKZ
      AgP9B+48J9CNZtTJFusMDg6g6RVKTSu9fjd1XaW3N4TdbsfhsGFRrbhcduxOJ5oC67Eo68k0
      XcE+sskohuqktyeE3eGky99FKraC4urGp9ZZCMfo7R/k0PAAuWwOX6CbYHcATVWxaBo2zUb/
      wAGsVg2P14M/2EsyuoihORk+eIj46iKKzUUo2I3N7sLvcVDXLfT0hNBUC4lImORGmu4DA+09
      CyT2nng8Tm9fHzt1+qK4kcZwefHYrb/9ydtAAiBMbV9/BxDit/l/FlO60IXYo5wAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Livrason_country' width='192'>
      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
      B1EnIWG4ceFgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table de duration' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3Ak6Xnn+cvMyvKogit4NEwboNHejOPQi5S00ukUG1qdvNvbW9nT6uIu
      4mIj7gPvLu4iLvZCok5mQytpJYVISiRFUiQ15Mxwpnume9qi0QbeFoCqQnlvMyvdfWjD6eme
      HgNUN9CD36eZ7KqsJxP55vs+z/t//69gWZbFLrt8RBGfdAC77PIk2W0AuwBQLpefdAhPhN0G
      sAsAhmG844jFP/7VH3NrOX7fsR9872Xe+cm76KUkf/vVfwbgrVe/yf/7h3/E1777OuZ7jLIT
      yze5vhhHzW1wdWb1oZ/57tf+li9+8Yv84MIN/vpv/hrD/OAj942Fy+TqkA3P8X//X/8Pf/YX
      f4PtA59ll48EWimG5uxg5uYEg95R/uLv/omjx47xjW/8E2nDhkMr8vnnxzg7X8ZZXODq1Cq/
      /Ou/du/72XyJX/53v8vVb/9Xbky3kC+7yIVvMTbQyUuXZ/j8Zz/N5XNnqNpaOODK8Ppchd/8
      xc8RzTofGk+qYvC7v/s7/Je/+mucTjuVXJQvf/mfwN/LaIvBdCiJ7O+nR84QSpVp7j9El5Bk
      Yi7ET/x3v8rl736JkqbzG7//PGqlwLFP/Dc801vd7QF2eThzE5e5NbfEhUtXmL81wY/+wm/y
      4z/+Y3z8+Rf42Z/6HIqiYJk6ilLBkn0c3NPCRur+YZSAgMftRNM06nWdmqKg1xVOfeonGQq4
      6Nt7GK1S4PDho/zEz/wivX4HSl17aDxaIc6f/tmfM3riRQAqhSJDY8dQimlUS+Lnf+03kJUi
      ls3Jr/3Gf0+tlGZ2JczHnj9Ban0aW+AoP/dTn73vnG6Pd7cB7PIwLCJFgf/zC/8bv/ETz+Db
      /wxnv/aXvHrhBt3tdr7+nddwmmW+9K0f4HW7WA8uEU4VcbsctDb7AfA4bfzdf/kTQlorR4b6
      mHzrJYKxHE6Pj842P4ZWZ3ryJoYo07FnH9de/Tqxskmz18X5M28QXZthZjVxL6LOwTF+//f/
      Az/y/FFaW1rR6xUmb91CsDlo8vmxiSKtrS34/M1IokhrSzPHD+7l2s15mjqGMVKTvPTmDSQB
      bE43V1//Z/7iH19HuFsGLZfLDxkH7vJRoVqt4na7n3QYj517OYDX632SceyyDfD7/U86hMfO
      A0Mgo17h29/9PiaQ21jij774l9Tu/NvcxHmytXd+4xGYOt979QcfMCSLhZlbzM0vopkf8KuP
      oFbKEQzFAIiHVkgVqg/5lEpoPfHA0Uw6iW5CtVh43zEplRxr4fh7f/AjiFJM8uabb/HW5QkM
      XeHyW+e5PjnP3Vs7df0Kb75xlkxJbXgs0he+8IUvvP1AePYqb16YoG3fcX7wlT8lVHLgtivc
      uDqOKLno6O/mpX/4Oy5cuUVnVzPryRrLk9dpafXw93/zN5QsD4O9HcRXZ/m7L3+VtVQJt1mn
      pauVy5duMbCn99ERGRVWw0UOjOzFIUtbdqGlVJLFSJw9fT0sTI5jutupZqKsReI0+zwsLc5T
      0U2qpTqVUhbZZjG/sIRmSSzeukpFt+HAQvZI3LoxQzKVpr2jlYWZGcIbSQLdnfe9TUKra2RK
      Zbo7mglH0tipkq1ohNZWyJUUtEqW9XCMUq2OpFdZWllFdjhYXligohq0NPu27NrfD6qq4nQ+
      vAKz1axP3SJw+Bn01ArJeIKc4aSt2UegtRlB0FlYCvGxZ44yOR+kv6ezobE80AOMX7vF2KFB
      Lp6/wqmTz/JvfvnnCU3d5OjHPkc+skR4eRKx+zhDrTL5QpZousjq0jKXz76Cu2cfF8+9DsC5
      c5f4xX/77wg0OQivrqKbdYLB0HtHJDjo6WpmceoG2aq+pRfb1eImFgsjezvAstANg2o2TaZY
      oqyJDPa0EV6eRrN5WV1cwBQkFhcX6ejuYd++YWqFApql4fJ10O0RCa2H8fUO43PK3N8xWEQ2
      wlSSG6RqIoV8ivBGCp/bhmXBRiRMuaqwf3QUtVIkFE9x+PBhqrFVyqbEytLyu9banwYGjx4n
      PneDjWQOVVEY2H+QWmaNdKUOWAiCiCCKWNYWDgHehfsagGUoxAoa7YF+KslljDtzDW5/gN6O
      ljv/3cbc1TNcubWA7HBx5cxLTC6G6B0YJBUJsX90DIBmj42vf+3rZEoqglHia//4DSoPr3Dd
      h6rUUOoaggCiIGzpxTZ3dDN1c5ahgQCWrpItVnE57FhAS8vt6+sfPkgxGcLX2o7b7WFk/z4c
      so1oNM7dqRdBEBAEAVeTh3g4RCKZue93arkofaPP8onPfIrk+hqtHhu5ukg5lUR0uLFJIggC
      cPs8HllibX0dyePH63IxMrL/qS7PWaaOZpq0dA9z6tlniUxfoaBK1GJLrCUVPLLBWxevsf/A
      aMNjEd4uhrMsg5qi43Y5qNWqSKKIINkxdBWHw0VdqWJzulHKRc699M+c+OlfxqUWkWwyHo+b
      UrGAZHficTkxDZ1iuYrdLiNLAjVVR7bZcLneq5u1qFWrIMm4HPYtu1DTMLAEEUPXkG0ShiWg
      1xUQJGTZhgXYJBFdN8EyECQbSrWC7HAhSwKVqoLT6UCUREzDQsTCtAziiRQbG3FOP3eauwM2
      Q9cRJAkR0HQdSRTQTZBtIpVKFbvdgSgKSJKEYRhIkkilXMHl8aDWqog2O84tvPb3Q6FQeOJJ
      cDaTobm1DXFr33uPRPiwatBSIYezqQV5i15VhmHsQD2KRSqZwOH24/O6ADDNxnfbjeCjWgb9
      QA2gUswhufw4t+qpf8owTRNFUZ50GB+Kcrn8kSyFv+NJNvnH//rn/NEXv8jUcpRaTUGvq9R1
      A6Va5sKr3yCYrjc0IMuoMzM1xdT0HLqpc2P8KvPzm08K6+Us0VSWpflZ3rpwgY1E5r2/tAnK
      +SRzy+8j6f+IYGhVLr/2XWYjRWrFDFeuXuW1189SLGT5/j99m0z9bsHD4tK5M7x59jXi+Q9S
      c/9wPCCGK5eK9Awe58BQG9/46nc5PegmIvUxfuZ76NUMfS82NiCtnEZ3ttJUT5DPpYkXNE4O
      B9hsQdSoVynVHIyMjlG+dZPezrYtiffdSCRz6LqJZaqsrCbo8omUxSYK6Rg6Nnx2k7Jigs1B
      m1skVajQ2dFOJJLA6fUyum+oofE9biTZzYmjoyypFq6mFvxOiUrNgauplUP7h/jhOKSCJbby
      wukBbi2s0HXicEPjekcPYPEzv/JbHO4w+Pr3L2EYOoqiUM7GGD7xaV48NdbQYAAMbOjlDCXV
      QnK18a9+5GPkIwtkaztobG0ZJOJx1HySWMFEU8tEMmV8soFuWGSzGTQT9h0YQTQ10sUqY2Nj
      KOkYhiyTT2ee6jKohcDI4eO4hRoV9Z2lbhkLDVNXEW2Ohsfyjh7A5Nwr3yaUrfHTP/vzXH/t
      G0yslnnh8y9y88x3WNYs9rsaO/4XsDBMEwwdpZxnOpikpooM2jdXGhAECUm6fQ7Z1lgVeDUb
      Z+DQaXqaZZaCEQLNTiJ50JQaumUh22xI0u0+zWaT8Mk25ubmaG8NIMWz+Ds7n7oyqFYtcGMh
      RMnI0Cx0sxFNIHrasCoZgok4sm6SFOs0Dx2hvdnGxPQaJ04/2/C4PnQVaJcH2U2CN0etVsPl
      cj3W37z3KtxVg24NO7UMqmkaqtp47c2jEEXxscfwSDWoqtSw2WQ0w8LpkN/1JGqtgs3hQdrx
      /baFrpvYbFunQdopiKLY8IkwXVOxRBlZEtHqCoLkQBKhXCwgOdy4nbcn/6rlIjVVo8nfjL3B
      f4sHHtlaPsp//I//BzUTzrz0dSJr8/zzmzcfeZLI6jzl9yFzeH+YzNy6wdzcElupBCokIly6
      Pg3AzLXzrMRyD/lUjaXFyANHV5fnqRsfTA2aS6xz9eb8JiJ+ujDqVcbPvsRMpIihlHjr1W+x
      klbJp6KsRWK8dfZN6nfu7eULF8hksmh643vTB7LB+ZvXefH5Ma5M//BBGH/zZWYvvsrv/Oav
      8U9f/waK3MzxgMl0SsUUPIx4FQ61dfOf/+pvsdzt/K//07//0ElcJblGRpUIOAUE02Kr5sUN
      zcDSVVTDoFZTsOk6oeAS8WSW/SP7mJiYYN/YQUxd5cbNSbrbvEQzJWSHm1xkhYpup8lUad0P
      59+cwS1bjB0/zNzcMmqlxvOf/jhvFy8kMlU8NgPDUJmeXaXXL6K6OiikNqioJs0OA8WU0UyB
      VpdAUdFpb2kiHM9hk+2cPHaIx6gIaDiS3c2JY4dYUEFyNnHyyCgJAVo6eqirCimvD9udC3a6
      7CQSUfyBHjzOdx95bAUPlEEvX7nK3NIi4xcv3Dt6+pM/xmdP7mVxZZW+fYfQqiUEwcHP/8Zv
      4ZNvJ32p9SWaekfY2+5nc9MXFu2dvXR5TNZSWyuN6OluY/HWDZp7hrCMOtl8EVNVqNQ1+odH
      GexpI7a+gsvXTiaVQrLJ6Jp+Rw06dO9mdfcPMdzdSjKRYWBkjJ7O9vuvwFRJJhIo5SyhpIJd
      1ImVdLzUqBsmpVIRQXYycnAMlyxSrhscOXwYo5hDkO1Yus7OzCQ+ONmNZRbiNT798WexjDp1
      XeXw8Rc4eWgfa2uNn0h8hxq0xuCJz/K//M//kWODPlo6unG6m4jOXWEhK3Cgv53g4jytgQ5a
      O7uwi9Db20t7dy9DB0/grEXJKcamrCY8gUEoRAila/S0ejZ3dW9Ddjrxt3RQ06E/4MfjdCBJ
      Eg63B4fdTpPHDUgcOHoSu16gs38QwTRpbmkm0NbGynIQu8eDTbDhcdmxuzwEerqIrywQjt6/
      iKaayzJ66nlOPvsxLCVPd4cfyd6EzSYhIOBrasLldiMCHo+H7rZmpmdmcHf2YbcMfM3NT10Z
      tF4tcGMpTnZtnnQ6wfR6ntjSFPmyjqSXuX5zmqmJq+RrJtH1RWaCCY4dPtDwuHbLoJvArNdY
      WF6lqlk7fsiyHdSglmUhbLEE/r3YNg1gZ6pBH6Reb6xWqlE8iRr8dmDbNICnga2YCKtWqzhd
      ri1fDPRePI6JsGoxgy778LlkEhtrFOoS+wd6mJ+Zomf4IH7PbelDZHWRWLrI/rEjNHsaK4fY
      dkNNy6wzMT7O3NwSlUKcy+M3uXLpErVN1kRr2QjzazGW5mf57r98t8Fq0Crnz1xk6uYEG6kS
      SrVENl+iVkly7s2rlKsK+UyKfLGMqWtUq1UqNZVyMc/s/MKHsv3b7hhalYVb46ynq5TTa4Rz
      Fn0drUxOXKVj8ADjF9+6l/hvJPKcPn0Kv7vxi4K2XQMoxdcomXZUtYYl2DANDQsRcQsiFUQb
      +0fH6Ovvb7gatLm1nUCbH11TmF9YpRBfo6SLuJwuZJuEoqoEF+co5mJcvDFPvVogFMti30Ij
      gO2EJLsZG9mLAESD6xTLWS5cvITd7WF+ZopaqYpyR4jgdsDFt95k/aFzNVvLtmsAdpeLjo4e
      hjvdTM2s0rvvIL1tTvLvZ0HxNqJWKbKwmqA34CaXLaCYArIk4XK7kcwK8XQJSTDQDZF9B0YR
      jTrNbQE87qd/HN7Z14PP1067z0Fz5x6eOXUcf3srolIgXynhb+tndG8fuXyh4bFsuwbgbO7D
      pWcI5QxOnzpMKbZKQXfS7t2cgtPmbKLFd/vh6gh0bEWoj/o1hvbv58XnjhNNltm3txtBtOGw
      +3A5VAoKuGwmssuHy9OEz23D195FOR2mXNMf+/j/caBVC0yu56nFl5HaBunxaLTtOUjAZ2du
      eo7Tzz3H+uoast2Dy1YnUZY4fnCw4XHdS4J1XWc3H94clmXtWDVopVLB49m6eZedwr3Xqq7r
      O1bJuJ2wNXitQaOQJGnHxr4Z7l3xXVcwy9QJbcQZ6O9jdXGGtu5e1jfyHBkdfGxBFbJpDNFB
      a3PTlp1T1xQqioG/yUO1VECwe3A53vkH18hkqrS13T8hpCg17A4XmlJFcrixvY+Bo6GrVBQD
      n3dnOC1omtZQVwjLMllfnMbVdYCAB27emMThDzDY2cTM/Aretk4O7htEABamrpOraIwcPkaL
      t7FudQ/8KTOhGf7wP32RWFlnfmqCXCHL1ZuL5FMRzrxxgbpRZ3JigrPnLnLz2kWWQglSkSCv
      /OAMFVUnujrPm+fOk8rkmZ66yZmz56nrBrM3rjC1sMZ7jbLqxRgr8SKJtTlyW7gMspiIMzE1
      hwXM3rjEeiJHfGOd5dUwulYnk0oQTSZJJvJkM2l0vc7y4gLFSo2r588wuxCkVqliWHXC6yGW
      VtaxLItYeI3F5bUHljDGQqtMzS+BWSebL2OoFQqlCsuL88TTeYqFHOurKyQzBTS1ysL8PJWa
      ytrKEun8zp8QfCemroJWJV5QSKzcwtk9SjkWRJN9nDx1injwh8YHkUSGg2OHaG7www8PaQCT
      t+b5rd/8OS5dnrrv+De/8S3cZpqXL0zw2msXic5dJKbYePWlV8mmU6zNXOGl1y/wte/8AIoR
      ppfDfO+18xQjk5y/fIUL0xtceP17VLRHL7qR3X7KqQ3SpToex1YmgwKtHhuFcglB9iIItx3e
      oisLpPJ5JueWaW/1EwstkchVWV9aoL13gNXgyj1rxFIyRd2skcipuPUy0XiUkuUGtfpAAyip
      Fr1NNiqGjUholfDaGqJsQxAEpqYmSUQj+AO9JOMbLC4uMTi8l0J0Bam5m+h68KkTw0myi67A
      bfc9T3Mnq9NXySombrvE1MQl6qID4c7LcWT/XlYXJ5lZflCavtXc3wAsg8npaV75wQUWZ6/z
      9pd1IR1jNpSl3Wens2+Qwf5uRg8fw2mD8xevcPTwQfS6giBKaNptOUDvwDB7B3qp1+ssz08j
      yB4sHt0FFOJhuvYdYX+Pn1huaxPKju4ebly6Qv/wAJZWYyNdZrC3C9M06R8YxG4TCXR0Ua2U
      0es1FhcWkGQnAsJ9q+U8Xi+yTUQ3DCSbjfo7VjEZtRyZXIlyvU5oPYrXIZKtC1Rja9hbumjx
      eRBsMm6X47b73p2qj2nqrCwuYAq297hLOw9drbKyGiKytkYsmqS1qwtZMAiFQriaO5AthXQ8
      QqJQIJstAbcX6TSa+60RDYXl9RT7h/sILi9jk0XaAh3EkiXaXAZXb8xx6oXnKGVLeOwa7sAe
      4uvrOIQasbxCR08f0fkb3Lx5nZM//qt0eqHZYaI7AyRWbpFVZV587iTSIzT+lmkQXl9FF50M
      7unbMps8tVrGtDnJZ1IEWn1UdJFSOoaBTKCjHcOwaPLaKeQVMGrIniY21tfwtXfR4pZY30jT
      3d6Kw+eiWtZxCBqCy0N0fZXwRpqPffKFewmVUi5iOTw4bQK5XAGvSyJfhXafg+XgOh5/M01u
      B16vj1KpiNspE1wL0zcwSDKyjuxpobc78FjFdY0Ww5m6Rq5QBAR8zX6UcgnR7sJllygUijg9
      XuLhdfqG92GoVVTNwufzNvwebLEWyOCt114ho7n4iR/7FPIHaME7UQxnGXWWV4LILj+D/d1P
      OpxNsWuN+ITZJmFsCsuyqNUa72bWCD7y8wBPmrfrwDPJKNmSxvBAN2urq0hOHwN93WxmglRX
      q5RVk1Q0RLWu0d7Zt+V6oLfr2etKiUxRo7ujdUt/o5E0Uotfr+S5Mb2IKUicOnGE6fHzdB/+
      JB0ug+vXb+Bu6eTQgWEAbo1fpI79o6kGNWpZIhmVwf5uLMuiZ2AYNROmtEkpkFbJksjX2D86
      hmlZDRfDxTZixOIxMFXiiSz1So50rsDCwjxr4RjpRIT5+QVC0SSVQobZ2VnypTLzs7NEYqmG
      xvYkkN1+nn3mJGY1h6KZ9Ha0UFENgtO3MOwumv3N9z67uh7C42+7J49uJNuuAZQyCQrlMjcn
      xskpAumNILGijkvaSUMki1Qmi1ArkFNtZDJxwpE4Hvftqk84HKJYqjK8/wC1Up71jTgHDx6k
      lljDcDQRWV996qwRBQGW52YwJCeCaMNlvz34KBbLDOwbJTR3/d4GKj/9Mz9Hp8fg+sxKw+Pa
      NkOguzQFenClIrR7vZQKObxNAXpbyuRqOh3exjoEbBX1UgpPWz89rXZikTB+l0SyAr7EBjZP
      M/ZcAQTuVTjskkAmmwXZiV6t09nVvaOXVz6MUjpBtqJiGQZKOcfc7BJFh8LzYweYnBhHFFzk
      IwsUW7qILcxTqyv07z/a8Li2TRL8diqlAjUd2vxekokEsqtp07IIU9eomwJOu61hy//urgjT
      VBVBtmMToKao2GUBRQO3UyaVSuHx+rBJIna7nXq9jl2WSKYytLa1U8pnkBxe/E2PtyKzHawR
      E/E4ga6uxzos2d0oe4vRtJ21buEuu2uCd/lIsx1cIZ4ED/Q2L3/ry/zxH/9/XJ1avu/4N7/1
      jfv+f2nyMonNlmYegmVqzE5PMbe0uqXnrRbSzK/cNloKr8wSyz1s0k1hdSX6wNFkfOMDb5Rd
      LaZZDDZey7JTUEsZLly8xOuvn6FUKnD2+99gNVOnkIpy6dJlzpy7dE//dPXCG5x9/TVSpcY7
      bDyQBK9spPjRz32a8+Pj+OoxvvfmNX7yZ3+VbDZLOrLA33/tewQGRzgUAK+h8bd/8ReUVZF/
      /W9+gnDKQNtY5MBzR/j6l77O3uOf4F996vQHCiizvoK//wBGbJ5URSfg2Zo8XSlVSCRTHBje
      QyIapskeQMvFyBRrjOwfYmF+npbuLhRFZ2lxkc5AM6uhOL7WAOH5m7T2qwRcNnxuG9fH55Ft
      EoePHWRhZh6lbnL8mRO8PUWPRpOU6waWGSC4nqLLJ1Ky3GSTG2Bz4bMb5CsastNDu0ckmsrT
      3dNNOBTB7WthZO/Allz3dsHubeWF507x5tmzYPdycmyYhGHiC3TRlcsTjObu6J8qqLqXF58f
      4vr8IoFTj3WHGNBqZZaXV7E73bx+/hKnTx7k2tXrAFw4e5Ff+u3fAyVLNrnB+uIkbaOfYrTX
      T7VWIZUrkdjY4PK5s3QdOMrS7KNNdR9GS28/6bUFUtksan1rc5Ludi/h9RUc/h6wTNS6hlrI
      kS1XEJy+extl42whHAyCJBEOR+6pQeuVCrql42vtodfvIBzaoH3wAC1e1/3iNcskGo1SS8eI
      l6BWzhFO5PA5BUzTIhGPoWgGB0YPYtRrxNIFDh8+TC0RQhVkYuHIU1cGNXWF1199nSPPfoIm
      x/0L/5vb2pEMhdtCYREEE8s0EMTGGwQ80ADqtTIrq2tUqioHBnu5dmOe/oE+AAYHOvjLP/1z
      QokiAL72XibOfJPz4zPITg+XfvBNrk6vsHdkhMVb12kOfHB9jCTakGUJ095CV/PWToT42ruZ
      m1thsLcFy9DI5Av3FId3KyD9+w5RTq7R1B7AMi36+/twO+wsLa38UKIs3K5re1qaWV+YfcAa
      sZLZoP/Qs7zwyU+SjqzR1iSTVyVqhRyqYSG8TeEnAE1OG9MzM0i+ViRTp6e/b/tN0GySYmIN
      RXSxvDBHIZvi5kKYldlbrK+uML8UxO5tJjxzjUgOfG6DyxNzjI7ub3hcDyTBj8qJw0uTvHHx
      OpqjlX/78/8tt/98Fme++Q8c+slfoPMhz+sHnl63rPt2ZN8q3k+uLwi854Kd+86pq4RjSRLJ
      DKdPn7j30N79rdt358PxuC0Ct0MSXCqV8DY1PdY5kA9UBTL0OoVimSZ/M/LbdsNQlRo2hwtp
      E5HvRDUoWFQrFSTZiePOzOZOLSXvqkF32TS7e4TtPLadFAJMJq5cxu1vZ2igh5XgOvW6zuFj
      x9jMBvVqKU2iIqDmE2zEk+w/eKShgrhiJspaSuHo6HDDfmMnUa/kuDG9RD6X5eSJQ0xMriCJ
      IsdHurm1nEAQJT77yRcQsDj3+itYgsjwkY/RH2hso9x+DUArkSubtPf6cDg9DA30szA3j2ay
      qQZgagq1+p2NstV6w9WgyUwJm2limiqLSxt0+UVqcgvFdAxVF/A5DKqaiCnYaHUL5MoqgbZm
      IrEMdqeTQ6P7nyo9kN3TTKtHJldwkl4PcfLjnyIzf4kb83E+8SOfYP7SBWoGuKUyNkc3z5wc
      4MbCKv2BIw2Na/sVG2Q/n/vsi4jVBPGiRq1awSZL1LWt3DGswVg6yXgCpZRmI6uDqRLLKzSJ
      dTTDolDMYwo29h8YQRZMCtU6Y2Nj1HNpkGVq5cpTtyjesmDfoWP0tNioWVCpqtQ1ixa3RFU1
      0Czu2M04sFDR61VscuMX6Gy7BqBWi0zPzJAsGTjNMrFkFsMS70u6PwyCJOOw364ru5yN1bxU
      s0mGjz3DiWdeoF5M0dnqxhBcWKaBZYHT4cRudyAADoeDdp+bubk5nO2dSIZOS1vb9vvDbJJy
      NsHV8WvUbX6OnHqW7PINJH83J585zvKNK/i7B1i5fpFo3qCnw8PN+SiHDw41PK7dJHgL2U2C
      N4emacjy45W8726UvcXsVHtJXdef+EbZwPbaKPvhmKTTOdrbG5tEPhlMFEXH6Wz8xgzbjcex
      UfZdaqU84VgSRBtDQ4PotRKCownnnSqHUimSzFfp7+1qeCHggaHmn/yn/50vfvGP+NuvvYRp
      6OTyBUwLatUK+Xwe07KIhDdQazUq5RI1dYsVoabG7I2rLISSmPUSV66Mc3X8BsYmB2q52Dpv
      XrmtTbp58TUWIhlUpUqlqmBZJrqmoaglVoMxNE3Dsiwq5TKGYTJ9c5xMvkIxm0E1TFRFoVK9
      7f6gKjXKleoDM76pjRUuXJsGy0TTDSzTQNcNKuUSqqaj6zq1aoW6pmNZJuVSCcM0qVUraPrT
      3RPb7E7a2toILsyg1sqMn3+ZUO7uc2Rx4eIl1HyE2ZVY42N554FarYZNcOHyeHn5m18mnC6w
      58hnmT77FTwuN4d/9BdYunaLyPQlEqKbSlXk9/+HX9q6iESZAwf2EszoZCIh+g8eQ0wtkCob
      dDV9eHGUZYBDNKjpOoYBWCa5bJZkIknvwB4mrl3n6KmjGPUqM7OLBPwyJU2iXteplYqUymXE
      YpaWJhvXxxfxOywGRvcSDMYxqhWOf+zZ+zbKzhTrtLpAs3RmZ5fp8klY/h7UUt6iZEcAACAA
      SURBVI50dhWf3QRHM5VKFa/dRHR4cOWSJEoGpqZy4viRp6oM+nZkhxOfVsQTGMLr9XHs4H4S
      9y62jt3hY3jfKBdvLcDexvotPdADtPTu4z/8/u8RX5llLZpg7MgJHCj0Dh/iZ3/qM+QLt4Vw
      oujlZ37pV/AI1YYFJ9tl6nUdTbew2zb/OPT0dDB7bZzWPXuxdJXIRoxqoURN0xkeOURXm4/E
      Rgi7x0c+m0NVFQRBxN/SRldXx70HsqO7j562JrLpAj1Dw7S2+O77HcuokUymUGsF1qNlHJJJ
      omLgUPNk8wUKxdsbZQ8MDuCQRRQDhgYH0SslVF1DFMSnrgx6PxYT12c5dWLsvqNGvUapCrpR
      o5hN4vE2fpj9QA/Q7oI/+c9/ydHnPsOAV+WlM5d44Ud+Cpc4hMPXTh8O/MYQzXYRO7Bv39Yq
      9kytxmIwRFGB7rERKsElsHvpc22uMGh3e/A7veTSeXrb/GQUAavioC7JuJ0uZMkEbBw8fgq9
      nqdpaB/hSAxvk5cWp4eV5SCdfj+yIONrcuHExNXczvrCAslUjj0HR+/9VrVQ5PDp52lxSYQ3
      4nR2txErWDjdTiShQGtLK01NPkQBfD4fXofI9MwMvX0DuENhHB7/U1cGvQ/LYvDAQVyyiFLK
      MLNRwZSmqNl0ekZOcGzsAKvxAseOjL33uTbJbhl0E9zdKLtuSRw7NPKkw9kU20EN+iTYNg1g
      Z6pB78eyrB27UbaiKPc2SfkosW0awNtRalUsQcLldKBUK1iSjMuxudKkZRoYpkWtVsWyQLY7
      cDm3dsHN2yfCTNNA000c9p3hZdToiTDLssjEQoi+blo8NpbmpnG29NDT7mVhfh5XcxdD/bfL
      nquLM6QLtY+mNWK9lGRqYY3F6RvEYyFmVjaYu/VD17APi5KPsbyRplwscnV8nJra2Dd1Mhzk
      +tQ8mBqlioKpq1RqCuvBFXLFCtVqhfhGmFypimVoBFdWUDSdWGSdYvXJT0htNaaukI6usZGr
      kV6dRvP0EFueJleosGffQWLLc9TvZP7JXIVnnjnd8IcftmEDsDndKOU8ZcXE5/NRLWapaWDf
      guWhgiDR3dtHW3sbrf6t23/sYRQUk64mmZolEloLEl1fva1odTqZm50hFgpi87YSi6yzMD9P
      d18f+Y0gdbmZ9ZXFp64KJMkuhvb0IAC5dImOrnb8TXYEp4/V2Rt4u/Zgv/M0+j0yF86dZSmU
      bHhc264BFJNRuobH2NvjY25uhT0jh+lvd5Ip7xzDKbNeIpstUlVrRCJpXLJIri6g52KoyDjs
      NgTZgd/rRhIlECVkmw1TrxOLhhElx1O3Q8zdDTKKhQLtvR2szC+SymsUVm9Stbezp7udaj5F
      plRCkn30drWjPAZZxLZbD+DvGiK1vEJBdHPs2AGCKytga6avaXNjadnlJ2C73Y30dvdsRajv
      iqroHD11ErcskM7kaGrvIlu2aG62k1nboLW9gxafG1GAQKAdj8PGyvIyPf17CURC2NxN2+/N
      tElMQ6Ms+Olw6rg7htgrJbDvfRabqWAlM+QLRfRamf59I8gdPoq1Jg73NHpD87clwYqi7Fgh
      13bBsqxtISj7MHxUrRHv9QA2m+2p2KXlSWO371whXVNTY/Oi7ch9DQBgeW6SdFHhwNgRNpZu
      0n/wWZpdt4cOG0tTmG376G/9YG8KtZxhajnJ6eMH3/uz1SIraxEQBIb2HqBezpAp6/cSqA+L
      oSnU6iaxyBqaAf62zoYui9TrVfJlnfZW33t/eBsgSVJDtfiWZTJ3/RK+oZP0tbqol9OMz8R4
      /sQwV65ep7lrD2P7brvhrcxNEstWeeb553BsxmrkfSB94Qtf+MLbD3z5y39HV2eAb3//LEdH
      h/G3dXDptX8hURVQYnOU3P3E5y5xYzFGf8DF5PQssUyBQr6IUkihIvH6975D0XCgpNd49Y2r
      DAwNoOlQL0R59c1xBoeH33WFl2SzEwgESEfD+JocrMYqDPW2I8nyphqAWogTKZjsHx5gIxZl
      //BQQ713wqsrhBJp+jpbSGbK2IU6hUqd0FqQmgamWiYS2UDRBeyCxuJyEIfbQyi4TN2y0eR5
      vMMRVVUbOhFm6QrUyyR1L50+O+MTt1BqVarpOIMnP8bG3CSdA4NIgsrUzDqnj/QzvZyit7Ox
      W0w98BTWilkuX75C78A+Zm9eYWXyCos5G9fOvEzVhGpyhWsrBZyFJS7dmOV7b0ww2N/GzVtz
      rM1NsTR3k+uLMbAs3jjzOoIItVKGW1OLfOu7rxBw1Xjj6ty7BiQIAoZSQpd9VFMxqkqFyVs3
      qahbIxG++9A31njKIleq4BPqFDQb8WiY0HoYh9OOKAosLi6QzqTp2TNMPpNgObjOgZERytEg
      lredyNrKU1cGFWUXvjt1/fjKNIKnjVqlTFGx8DgkHKKIbgLUEQUXssODXq80Pq53HnD5WvnY
      ix8nurqIBchOByuzt3D5W7EskOwuipkY67EMHpedYyefxe9xsbE6z8T0PKKzhdHBDs688SYj
      Y2Osz4yzmiyDIKBV8qxEC7T5H/12CwZXGRoepDnQgcvpoavFTXWLGsDjQK9k0AUX3pYWNtYj
      +JwS+bpAKbqGq60bt8OGIErIsg1REBGxqGsaliCQS2do8j19mpx6tcD4jSlmbt7E8gRodQmU
      SmUG9gQ4d+ZNsoZELb5CNCdh1GOcv3CFvoG9DY/rASnE7RygxoGxo+iVDM2BXqLBOWqCh94W
      J5a7FTUTIa/JDHc3k6uatLc0EVyYQbB7CXR2EFyYpWdoFGoZNnIKh/b1kyko+J0ws7jGwcNH
      8DjffbxZLBZp8vkQsMil4lQMmd7O9k3tEmloCooh4nHaKZZK+BqY8KnVCoLDhSze/iO7HRIl
      1aLZ6yAYXKOlvQOnLOF0u6lWqnhcdlaCa/QNDJGOrWPztNHZ3vxUbZT9zgKLIAgPHIuEwvTu
      6b933Y/DHnJbaoG2knq9/lj37t2pt/Ojao247SbCthq73f7YSpM72RWiXq/v6BLuh+Vpm3B8
      V2qlHMHQ7TWm8dAKqcLDVrKphNYTDxzNpJMfcIcYjfnpGRYWl6gb5n3H06n8I78ZjW6gG09b
      CgymrjLx1msEk2XMeo3Lb3yfSL5OOhZifHycf3npFbQ7nefU9Su8df48hVrjzdCe+h7gLrVC
      kdBGisH+biJryzQN+ahlNshV6ozsG2Q1uIKrpYVaxWAtGCQQaGZlNUJrRw/BqXFa+w/S1eTE
      65aZvLGIZLNx+MgoS7NzKBocOXHkbW8TDVH2s6fbztp6ErtZoKIJ9HZ5mJhY4pkXTlFIRVEM
      ieHeVhbXE3R2d1NIxdhI5Qh0NnYd7JNAEG2M7O1nTTUQJCf7B7rJaSZ93XtobWvh4sQysgBQ
      o1i18cyJYaYWlzl9bPS9Tr0pPjI9AEBXi5tYLIzs7QDLQjcMqtk0mWKJsibe2yFGs3lZXVzA
      FCQWF5fu7RBTKxTQLA2Xr4Nuj0hoPYyvd5gmp/xA2TIeDnJzZpWuDicra3HqhRh53UFvTz8t
      TS4MwySfjlIqVzAdzTiNCp62Pvq7G69/eRIIonRv7keQbPfNA03fnOTQ8btbIVkIgoggiliP
      QZrzkWoAzR3dTN2cZWgggKWrZIs1XA47FtDS0gJA//BBiskQvtZ23G4PI/v34pBtRKPx+zbu
      EAQBV5OHeDhEIpl54Le6+ofpbPVSKNcJtDXT3jNEh9+DUsuRz6cp1cAhSyAI+P1+HE4XqXiE
      ZDr7+G7IY0SrFrg+s8zq/DSZTJJbC2sszU5RVRQ0m4dmp0xkaZpoXsAhVbg8PsXeA09gh5in
      FdMwsAQRQ9eQbRKGJaDXFRBu1+MtwCaJ6LoJloEg2ahVK9gdLmRJoFJVcDodiJKIaViIWJiW
      QTyRYmMjzunnTiPcS4ItdN1EkkQ0TUPAQtUMPG43dbWKINkxNBXRJiNLEpYgIomg1GpYgoTT
      YX/sO8RsB2vEbDZLS2vrk9khZtca8cNgkUomcLj9+Ly3J/d0fQe5WL+Nj6oa9CPTA+zyaD6q
      rhAP5ADf+spf8cU//mPOXp585BeV3Abjs6t86Stf3tKATF1hbnaGW5NTVGtVZmdmuDU5g2Zu
      rp2Wswmm5oMArM7dJJIuPeRTNZYWww8cjUbW0YwPUgZVmbgyweStW5QU/b7jofX4I78ZDC6j
      PYVlUKNe5cIr32I6XMBQSpz5l6+ynFJJRde5fPkyX/ry1+7cW4u3zr7KmddeIZZr/ATmA2XQ
      SDLLM6eeYXF1hdcTSwTTOZ47eYSXX3uTZz/9k2QXLrJREviZH3uebFHc+llWwcaB0THW529Q
      UgVGxsZYmbpGpW7R7Pzwo8N6VSGXz2JYw2TSCZq8vYSCcVL5MiP7h5memqJrcABd05mdmaWr
      o5n1jRRefyux5WmyZYNWWaDZJTJ+eR67TeDw8UPMTc+hqianXjj9to2yddxNAfYNulkKJzCr
      ceqGyJ497UxOzuP2ecgnwxRrOiODAa7NhhnZN0QiGiGVK9K/5+nbVkmyuzl1fIwF1UJyNnHq
      yAESlkWgZ4BmnxNdarqzA1AFS2zj488OcX1+ie5TRxsa18OrQIKIoelks2l+6ud+hanr4zz7
      3PNE1lZxOB1IkoRZr5Ivb70toihJLE7fQPD10uF3MHdzAmdgCL9z8wWr3g4/q0tzuNv2gGlQ
      qSlopRL5ag1vW/e9MqjcFCAWCiHZZNKp9L0yqKEqGJi0dPSxp81DJBSle98Y7c3eB9bwxtaX
      OHNhir17vETjZUSjShUH/X2DtDbJ1BSNaiFFtVon0L8Ph1mjo38/A31dm77OnYXFtYlZTp64
      u1bEhoWOoauI0pNwhdBqjF+7jmh30uRrx+d1cOzQQcbHr+Fva6NWUyjmMqimgNMub3nipOaj
      hDI1aqUsmWiQeMmgnE+jvr+xx7siSBK+ti7WwwkGu/1IgkWlWsNmsyGJIh6PGxAYGj2Gmg3T
      0tmNaRp0dXfh87hZWlpBsNkQEZAkEVGS8He0E3rIRtkg0L93lOOjewjHy3QFPMjuFtqa/Ki1
      FOlsjmpNwybbESQbHpcTr7+ZyOoCG4kMT6Mrbr1aYGJunejSDOl0gsnlGGvzk1QVFX9nLy6b
      yOKNy0RyFoEWG+OTQQ6N7ZZBtzV3rRHzpRrPPXdqR0+qbIck+ElUorZNA3garBFhtwy609g2
      DeBpYCerQR/HRJiuqViijE0UqJZLYLPjcTmoVspYgozHfXtJZrVSQlE1vD4/dtsWOKI9gm0n
      htNrBW7NrWGaFmMjg6yHoyTjMU59/DM02T/8IEMpJIiVRfRSirVIlLEjJxq6KD6fDLOSqHHq
      yIGG/cZOwtCqXD/3Gs79n2Kfr05wI00mHmFkdD/BaJ6erg6G3Lf9msYvX6J3YC8Od9NHrwEU
      kgna+oex51fI6W4Oju5Hqet4N/HwA1iGRt14fBtlp3JVPDYTw1CZm1+n2y9SdwUopmNUVQOf
      3US1ZOoGtLoFSopBW7OXSKKALMscPTz6VOXCkuzm2JGDLKngbg7QX6+TTrtZX1pBbGpmIxJl
      T18PkgBOp51kIoavreuRKwe3gm2Xt7X2D2Hko6zFc7jsItG1ID0DwzvqYTDrVVLZHGq1SDhV
      xSkbxIo6HmoodZ1sLocgO9h/YASXLFJRdEZGRjAqBXQE1FrtqVsU/3ZrxGxijQs3ljhy5BDd
      XR00twQQtRL5TIpMqUJH9wC9Ha0kUqmGx7XtegDBsjAMk/59h2nz2Eh4muls2fzY9PFaI6oc
      O/XMD60Re7vJli3cXjtOe5HhocF3sUbcd8ca8enbKPvt1oiSs5WRvX0UCgUG9h8ml4rSdfw5
      srF1eveOILd4KdY8u9aIO41da8Sdx6414hazk9fV7lojcr81YmvTg2+EqVvXGTl8Ertocv7S
      ZT7xsY+968lXl2ZJZIoM7T9EZ9v7v7n1WhnVkmly21ldmkc1ZPaP7mMz9QBNqZCraHS0NVPI
      JBFczfjc73xY6yQTFTo6W+47WikXcXl8KKUCstd/R7PyaHatEd8dU69z8cJ5nL4ODo8McP3G
      JN62bo6O3vYBWlucIZwqcPrZ53G9n5u9CR5pjdjZ5MLb7md2eolMOs7C3AKroRV6OjvZSBZv
      ywnyca5cHaeky5ilGC+9fJaugWE8Dpl/+Mrf093bT3NLC1fefIVgokynX+bb3/4OkjdAOb7M
      a29NMDi894dL5EyNlYU5iqadNrfBRsbi4Mjg7VVYm7jQQjzG1GqEwf4epq+dR3W0ouYTRFM5
      /E0uErEN8tUahayCaSjYZZHFxSVE2cWtK+coaza8Tjs2p8TKUpBEJkdbWwuh4BLRRJbWwP3j
      9l1rxEf8VnGD6WCRo8fGCE3fYviZF0ku3sTfM4hdMrk5vcDzxw9wcy5EX3egobE80hpx5sYN
      6mad8as3eeu17+Fu78WsFPj7f/gWgY42rlwbZ35ygs7hQ1x66yyKouIQSnz/9avA7WVwly9f
      Jl2oYIkyb7z2MjMTlwmlK1hWjZdeucSRQS8vvTb+tohkhocHEAHLsmFpBa6NX0PRNz88a/fa
      yeQyiI7bplOiKJIOr5PKF1gJJ+juaCG6Ok++arC2uIA/0ElwZfmeGK6YSKKaCjXDQYugEtkI
      Y3gCyJbO/UuJdq0RH4WjqZsXnzvEzMRFWgeGmbpykXgqg6ZbgIEk2rDJLnS98ZOKD7dG/Pgn
      iK4uotVLnDvzBmUNPO19nDw0jCQ7aGuyky3dlkFLsp2+vn5km8i5N87h9Hqx7sgB3O39/MEf
      /AG9zgIzwRQ2ScQX6KerSeDcWxOYWpnllXWcnocbMql1jf7BvfgdoG5FA+ju4eaVCQaGerG0
      GvG8Qne7H9Oy6O7pxSYKdPbuoVTIIooW2Wwef3MzIsJ9Ege73Y4k3V64rdU1Ku+QcOxaIz6a
      cj7DwuIS1bqF2+1Etkn4AnsQi2FCKRWrXuTcWxfp62+8LPyR1oh2vUQoXcLvdiOK0N3dTSIe
      o7W1lUQ6B5aBUxbxtXaRTETx2gVS5TpNria6utqIbETo6+3DsgzmZ2Zw+lrpavMxO7fI/rGj
      iGqelY0cRw4dQLyzBtbUbgvMLEugf3CYQjKC3NRGR9vmrAI1pYZps1MpFvA3uVEMkXImjmVz
      09zchGlauF0ylXIdwVQRXV5i60H8gV78bom1cILujnbsbjuKYmJHA9lJfCNEaCPF8y8+dy+h
      2rVGfDTvVmyJhkN09u/5Ya63yWHv+2HbaIF2pBjO1AkGgzia2u7NLG+T2/mB+ahaI26bBvA0
      sCuG23lsuwlHy9RZXpwnuL4BmKwuLbAaim76vHqtRCZfZGl+lomJidsLTxqIUskT2mj8Np87
      hbdbI+pKifPnznNlYhILSIVXeOPqzXuffZzWiNuuAWQjQezt/VilBKG1IJq7A6OYoFjfXEel
      1Qqkiyr7R8cQbVLDxXDxWIJsLo1lqkQ2kijFFKlsgYWFeZbXwiQ21pmfX2A1HKWYSTA7O0uu
      UGBmeoa1cKyhsT0J7lojVlWDyMI0w8dfwGOVyFdqBGN5RO3uZhh3rRFHWVpcbnhc264B+AKd
      pNeXKZaLJJIFfH4vPo9MubaTPIssotEo1XSMTE2iWEgTiabxumxYJsSiUSqKyt79B6hXy0QS
      GQ4ePEg1sU7FFFkLBtlJV/t+eLs1ommCKImIIly/cJZ8VWV5ZZVa3eBxWyNuOzGcLDtpa20h
      kzY5PLKHqcV5RF3l6EBjdeFbiZKP03PgJHva7SyshGhx24iWoDmTQnC6sEn3W7K47SKhcBiH
      24cXi+59w9vvzbRJ7lojpvUknzh9gBtXzyO7m/js528rCW7ccpFZn0MM7L1njXj49IsNj2v7
      JcGWRaVSRna4sMs21FoVS5Jx2jc3TW+ZBoYlYLtjV9iIaf+7SbCh6wiShAhouoEkgW6AbJOo
      VirIDgeiICBJEoZhIEkilUoVl9tNXakhSHacjscjS7jLdkiCd60RnwJ21wTvLLZfD7DLE2E7
      uEI8CR4YakZXZvizP/kTrs4E3+cpdL7ypa9uWUBmvcrMzAy3Jqep6xozk7eYmV9+wHjqg7Jr
      jfhkUUsZLly8xCuvvEJZNYitzfH1b79GLrHBxUuXePUHb3Bb7fJErRFNvv291/n1f//b2DD5
      zj/+NTPreX79l/81X/qHb6HWJX7nt36Or37la9jbh/iRI518/eW3KKt2Vqau8O1XznHiUz/J
      Z54Z+9ABCbKLsbGDzN28RnR1GU/PfsTMEtmaSZvrw6eGu9aITxZHUxsvPHOC114/C2ad1ViJ
      Dp+dls5eTnk9nH3r+p1PPlFrRBNBcuCyyzhk8LT2sacZQokCIyc/zYk9HhIFhX1jx8klI1y5
      Ocdv/97/yJ5AE3VD4NnTx1lZWdpUQIIgEAuvoVk2NLWO3W7DbhPvKAU3x6414pPDUEu8/Oob
      vPjZzxOdm6Cg1FlcXCK+sc7rFyf53Oc/g02AJ2yNaOP4gS7+8A//kPPjk1y/Nk4kmUe2yTj+
      //bO/EeOMz/vn7r6PqavuU/ODG+KlERptYe89tqOvQkQ29nYRrxAgARIjMA5ECP/hYGNbSBe
      JIbXjjeO1+v1xsbaq7VWSx2UeIuc+756+r7v7uquKz8MSYmkpKU0bGqG4gM0wGkW6v12Vb31
      fq/3eWwydqeTZjnD9Ru3aOsWx0b7+OY3/yellkFsa5WZhRUkaX/ZC7VeplhtYVkmweFRYiuz
      7JYMIp79pUGfUiN+uqgVUogON/Ozs4ye+Txf/bkv8fLPfAm1XMTlVpiZXWDp5lNqxEOFp9SI
      jxZPqREPWzfoB+BpGvRw4cBMgCcBT7tBPxyWZVKrVpFsDtxOB3qnDZINWRKwDJ1Wx8Dl3PP5
      tY5Kq2Pg87i7Zs8dHMBV22Rx9hbLy+s06wVu3prlxq35fW8RVCsZthM51leW+PFrr3W9G7Sc
      jfHu/FpXxzhM0Fo14qks1y+9Rbla5dKFH7Bd6ACwsjDDTy5duX2kxaWLb7G+8C7bqUrX7Tpw
      vUCN7A6FtkTEIVBMZemfmKaTWCbfMOh1f/JA+Ck14qcLm8uHrG9Sa4t4vF7OnTxKVrBolTOo
      cgC/4w6fUg3F3s8zZ8e4tbzDxMDZrtp1AFcAi3DfEP1uE9UzgJqPkynV7xFWPuiwzA65XA61
      USKeb6OIBpm6jttq0dFN6vXavdSIbZOTJ05g1MoIioKp60/cpnit0+HIibNM9DrJVzt3v9/a
      2katF9jY3KbRUunodgyrTqtWwu4KfMQZHw0O3ArgjozD/AK7JkwdVYiWNHy9IwT2oQ8GICoO
      XI69n+v1dJcAqlUucvTsC4TcEtF4iv6Ij1QFJFlGEAQ8Hi9OpwsBcLtduGwCyysr9PcNYUuk
      cfr9B/HNtC/oaoOltS1srgg+scFcrIwuLfL8c+dx2mRGhofYWbpF79HnmBztZS1R5dzZM123
      62kQ/AjxNAjeHyzLeuwC4XdXgKfdoI8Gh/V9ous6nU7npx/4hOHuBHhw9pukUjkGBvrA7LCb
      KDA6MvCYzXvcMGjUO7g9n8F8uCB0txBmWUQ3V9AUP1OjA+xsLOMIDtMXcLOyMEdweIq+4J5r
      Witm2M03OXV0onv23MYD1Iiv//13+N4PXsV0eLh15So+vw+v10U0nsVuk6iW8piSA9FoE0vm
      8Pm8j3TZMjtNllbW2N5YxRvsZXX2KjXchHz7o+woxrd4e3aDybEhbrz5Q8pCD3ZUqo0OTodC
      W1VptGrEY2U8bhuSLJHPZlDsTm5cegNdcmO16wgOJ61ajUq9idvlpFYpUq41cbld92Rt0tFV
      3l2JMz4YptXWkQSTtmZQzGcxRQVMnVqlhIGMIkEmncHmdFEp5rEkG0qXlVHuR7epEdv1Ik3R
      S3FnnlqtQkUIkV6boZpN45s6w+r1K4xMHkHE4K2LVxkNyeyUBPqC3XXL7guCddbjdf7b7/4u
      gtDhnR98nwuVOKe+8ivM3Vpm/vKreCO9pKs23O0kgiQw8vxX+fK5RzdTRZuLgNdBuazgcDg4
      Nj1F6pHIEUv4XRKNThtBciKJoLZUErE4HDnCzMwc5z93jma1wPq2So/dBFeQ5OoqdocDj8dF
      PRlD7nEwu7RNxGUhiDrJTA2hWSUQCfF+qt1S02TAp9C2YG1tnYhbxBYZpa3pbC0sEvJIOHoG
      KSU3sIsGgb5B8vFNKqYbNb7MuXPPPFFpULsnCJllqnhxVmuMPPss+cYWsjvE7OV3kCQbogUI
      dRy2MJHBcaKLm0BfV+0S7/9TVytUW20ajSaj06f5xZfP0+5oe//rDvGrv/ZPkTstsvkyY1PH
      cYiPtvRvWRYDI0eY6HOTLT/afvCBgT4Wrl2nd2wCS1eJp3MogkjbMJiYPk7A66TVqCPINuq1
      KqViHpvNgcPpwvO+qmQo0kfA46BWaRDuH8DlutdlsvQGuVyBllpjN17CKVvkVAtqOeptHdPU
      ERQHfX0RFFlCs0QioRCm2qRSLSHLticuDdoo7LJZMPnZL7xI32CI+G6CYqVDJpnipZdfxk2T
      arVMua7Q0Qvkkrv4gkNdt+s+F0hgcmyA737nr7CHhgn7vfT3hVHcPXhdDvoiQQYG+tF0kefP
      jHPx2ixnzj1PyP/oStadZpWVtU1UU2a418fmdpRarY4/ENyXYJplWdi9fjodjdGBMILixFTr
      6EhEenuxKQoupx2HO4BT6hAeHKZaruDy+ugP+4nGMwSDPTjdLgQk3A4Fb28/2e114qkc40fG
      71L6NSsV+sanGR0ept2q0xv2ouMiEvSQyxVwON2EgwFcLjeWZdEX9LK2uU14eIJ2tYzN5SEc
      fLzUiN12gUzDIJ9Nk0hnGJ0+jVFJ0Dt+gpPHp9henmfk2DPkY1sE+ocZCnnINAROTg51PSt0
      YNKglmUdukYyU1NZ3djCEu2cPDb5aZuzL9Rqtc+kQMaBmQCHOYd+B4dZ//fiewAAG4hJREFU
      Iumzyg16YCrBoijevQF6R0WzJJx2hWqpgKU48XtctFtNBMX+iVwhU9foGCalQg7DBJfXT9D/
      aN94pmneXrJNMqkMguIgEg68z5UxUVsaDueH73Qql0t4fT1I4uMNgXVd76oLpKt15hZXkJ0+
      Tp84iqlWWNjMcnQkyPL6Np5AL0cnRxGAtcUZKk2d6ZNn6HF3d1fYwau4mxobywvspIu0qxk2
      EiW2lxdpNBsszs6Sr36ywLhdzbCTKePx+NiN7eK0d1PLSyWbqWG28uwkipRyaaLxNLVyijff
      vEyxUiexu0UsmUVvN8lksxQrdTLJGHNLq5gHY1F+pBBlO6efOUe7GKfWNpidX6GYy2BzeTl7
      7hzp6HtseKlsiWPHT+Dv8sMPB3ECiApTUxNIApQyOQbHxxgMO6loNo6MD+8rMBQQ8fp8OF0u
      nI7uXtxyMU+h3MBpt9hNVXCZFRqim6HBEQI+N4IgsL22SLWcZy1WQDEa1A0bA5FgV+36tCDK
      MtHVeXINi1Z2G1fvGHZpjxxsceYaHdGGcHveT02Os7O+wPJmovt2dX2EfcAX8FHMlyjVOvhc
      B8Zbeyj09g9i6CZup0I+HSdTaWMXBSwMtFaRUlNiIOLHRGRkdAwBE1GU0LQnsx2hVsyhK256
      nHtqOfVcjPWNTbZ3ojj9EWyWSiGTIFupUi7t7QwUxe4/ngcmCL4DU2uxur6JZghMTE1RzSbA
      7iPstbGxHcUSZaamj+H4mOqBertJQxfxux0Ui0WCwUf/pn0vkNepVtp4PDbypSqy2aFYbzM+
      NkYuGcXhD1PNp5EdbkIBP7pgw20XScaidLAxNjyI+JhjgK7vCDMNqtUqst2J27kXa3Q6HWRJ
      pFKt4XC5ySZiDI4fwWw3UXXwed2PTyHmaTPc/mFZ1qFtKFNV9bGpRB4k3J0AB2wheIrHjGq1
      is93ODSNHyXu+hGCICAIAp1mlTd+8mNimdLd74R2mTevzb339wd8Fm9ep9Yx9v597RqVjv6R
      x3/YByySsR22duJYQHJ3m2Sm8InO9f5Pp1Ujcfs8xUyccqP9AcdppJIPjlWtlDAtgVatim49
      3HiaWieVKe7b7sf1ef8z0JXzmzqzV14nmm9i6i0uXbzIu7NLNMtZ3rl0mZvzK3uieILArWtv
      c/XqtQ+5R4/280A36Lf/5JuMHD+Hy+Vk/eZb/OPFGU5ODfD6jXUGXB2+/Z2/ZfDIUWYv/ZhX
      f/wm8dgWK7ES7dwWF69cQ1d82AWNQDjID7/3FyTrAhMj/Q/ty1maiiE5oZogV2nSFLxohV0c
      oQFs0if3CKuZNEvRJOMjgyzdvILuCNEsJImlcvR43ezubFJRO9QrHTpqDZsisLy8hiXZWXr3
      Eg1dxilLKC6RxbllsvkS4UiQzZUlEqk8ob7IPRmF3Z0t0sUyQ309JNNl7IJKsdYmurNJtalj
      tMrsxBK0OgaKqbK6vonN6WJ7bZWWIeD3dp8R4f3odiuEZRk4UMnqHjqxebxHX6STWSefq9B3
      /Bmym6uMHJlABN55+yKD48cYHeztegxwXySpYUg9nD97mmGfyY3tOl85HeDVK8uAyd//6E3+
      9dd/hR/+3Sts7KT4+c9NIUVOkd1ZBEHiq//iN7h56QIby0ssv/smJbmfucsXPpbGr2hz0qlm
      yah2PGaLYDhA0Gen2tx/m0Sf30Eml0Z2BcGyECWJWjZDrlIlXVYZGwgR31ykYShsra7i8vnZ
      3Fi/S43YKBTomB0Ud5g+h8nu7i723jFcinhf85pFNldAbJYptmUK+RTR3SRujwNZFNmNblOp
      1Zk+epxGpcRWLMXp06dpprbQHX52tzafOIUYUbLhvK15oHUMHHYFRRbA5SGxOocl27gjCPO1
      3/w6/R6D6/P7o9l8KLvu/VPBb2vx3e//HfPbOdTCLq9fnmegNwQIeO0Wr/zox3hCEexOF3ab
      DbfbvSd3g8ml11/DkPcyCZ5AmOTWEoH+EcSPwe2s1XOsJ6tMjg/hj0RIRaOkiipBz/7ToIG+
      QeZuzDE21o+lq2RKDfxeFxYWkUgEQYChsSlqhRROt5OOpjM4OLiXqahU7/6KO8unzWGnUshT
      LJXvGaddzeCJjDF14jipaBS/U6KsSdRSMWRvAJsigSDcXfLtEuQKBQSbA73dZmBw8IlqhQbo
      NCtcn11mdX6WnvEjzLx9gXRDwm+3MEzQNI3M9grJUoUbl6+wtBGjNxzuul0PpEFNQ2M3ukuw
      bwhRb1Jq6Iz0BSjUWvS4bEQTGUbHRqlVynicNtqWQrtVw2W3kcnm6R0cRmvWcfv9FDNJdNHB
      QG8Y4SHvqKG1SWVygEBv/wBqrXS3FWI/0LUOlrinOONy2OiYIu16GUu04XY7MS2w2yRUVUew
      NESbg2Iui9sXwGUTyRYqBPxeZLuC1jGRMbBEkXw+z85OnBc//+LdblCtrSIoNmRBoKWq2GQR
      VQOXUyabyeH2+lBkEZvNTrvdxm6TyWRyhCK9VEt5JLuHHt/jdYEOAjViOpWid2DgsRanDkwd
      4FBSI1om0e0tXD29RIJ7GZQDcjk/Nj6rzXAHZgI8CTjMHa0HgRXi08CB6y+wTI3lpRUEu4cT
      0xPsbKzSMmSOHZvc19KoNSsUWxbVXJJipcbw+FRX2eFatQKJQpup8cGujXGYYGhNrl98g+CJ
      lxlxd5hb2aSlajx7aoKbC1s4PF4+//weC9y7Vy7SUHVOnv8iYU83mxYP4AQoRDfxjxzFSK0Q
      3d2ioMqMDYX3HRTqao1yY48a8dbsTNepEVPpPM2OgWWGiMYK9PoEaqaLcj4FkgOvzaDS1JDt
      bkIukVShQn9/H8l4CqfPz9T4SFfte9wQZSfPnp5mvW3i8AYZ7i2xtpNieXmHF1/+IiuXL9My
      wSk2aetuXnpxjNnVDcLPfnK1oYeyq6tn/wQIDI2Q31klVyxSzJVQnE4KsTVytUPUYmCZpFMp
      WsUM2bpAs1EmnqngdQiYpkU2m0HVDKamj2F2WqSLFU6eOIGai9MWZNKJ5BOXBhXuy4J4ewLY
      JQPdMDFNsLBuv+QEECws00QQu8+MceBWAEmUURSZji3AM6enePfWEm3BZEA5PELZzWKSoePP
      MxKysbK+S8gjEyuDWi3TNqwHGt28DpnllRWC/gBirkr/4ODBezPtE1qzws3lbcpGnh4GSaQy
      oLh55vg4M5cv4Q6ESK3cwj54HK9T5/qtVZ554aWu23XwgmDLuifffse8+98gH/+0752nWxR8
      d4Lgu2PBJ1a37IZ9H4WDEATXajU8Xu9ToezDjMN6DT+radCPoEZ8is8SJEn61AthnwYecDU3
      56/yB7//+1yee38fRotXfvjmh57kH/7PH5Ou1/jH197hJz/8ER8Wrl65comO/lMon0yd9YUZ
      dtJFsAyWF+ZYXt3cN1FULZ/i3flVANZmr7KT+SD1kSbLS9EHvo3tbND5WELZUMknuLW4sQ+L
      n1zUChmuXLnCt771LfKFFN/767/j5szS3cD/zdde4fXXfsR2stR1W+4Lgg1effMG/+E//idE
      q8Of/dHvk660+fJXXuJ7f/MdnKEedt79CZmmxG//zu/g1Ar84R99i0wyzYmfLTN18iSX/+H7
      bM+9RVGeJD57kYnhHi5cmePosy+jF6P0uS3+6se3+PLPfI5LFy4g9wzzn//919/z+wSRkZFB
      disa1fQ2ZU2i12Pf2y+6D+dQUzu0mnU006RareANdtjdWidTqHD06CSzMzOMTk9hGRrzcwv0
      R3zEMyUcbh+5nVUqqkiPaBCYELj8zjIOGU6dO8Xy4hrtVocXXn7pHmrEdK6CbJqYZpvl1RiD
      fpGWEqScS9DWBfx2k4YmYgoSIbdIsabSGw4QS+SwOV08c+rYE9cPdAfeUB8vel2ouoQLDXeg
      B83Qbt/jDqLdz5deOMPluXUmBrsrkvFgskEQkSUJoVnAjBzjt3/j50g2JT7/0s/y8tleUhUb
      J8f6yFcaJDcWOP9LX+fnXjyNKzzC5G1jR46dYe36BTTJxdJGjP/yX3+X/PYyLbWFoWuceunn
      6RMqeIdPErYJtO4f/zbtidbpEOobxqEXSVb2z7cz2NfD5tICnt4xLFOnUmtgNJvU1DaRoQnG
      B0Mktlew+SNkkykkWaFeq9/tBrV0HROLyMAo470+kokMI8dO0hfuuXcgSyeTSqNWc8QKOhgq
      yZKKV+qgGRblcglTlDl24gQ20aLcaHPmzBk6pRyWzU6rXn/iqBHvx/zNGc48exbFN8Av/8KX
      cWglKm0TkDAtA11rISvdZ+m+bwJIfPG5ab7xjW9waaOCu7bDH3//bb70/PPInThvz+UZDZts
      p0q47BKDU6d599W/ZH4nf1vlG3qCQSR7AIeWZ/rMc7x4+ih/8N+/wcjJ5wgEgtidbgYiAUaO
      n6OVXqXaNu8xwtT2tHdT8Si28CiN1AaZqk5onxVBSVHwh/rJleqM9/dgl0V0w0Cx21FkGY/b
      BYhMnXoO6hnCQ8NYpkE4Eibg97OxsYlkdyAhYrfJyDY74f4+YmvLDwhlNwoZpp/7POc//yXa
      lQwDYTe66MQyDUwLnE4nNpsdAbDb7UT8bhYWFnCGB5ANjWA4/MSlQe+BZeIODxJ02WjXily5
      fBnD3U9+5Srb2SZjA0Guz21y7vTxrpty8NKghwh3hLJrLY0Xnj97qF2Wg9ANqmkaiqI81jEP
      zAQ4lN2gHwBN0z5tEz4RngplP8W+8bQb9OFgWRbZVByHL4zP7SCdiOEJ9uF17ZGVlfJpCuUG
      /UMjeJzdbYY7cK6m3ipz7cYtbly7RrVWY3FxkWtXrtDa545ItZRiPZZhfWWJV370o64LZReS
      21y9tQSWiaYbWKaBbhg0GnU6mo6u66itJh1Nx7LMvUKkadJqNtD0w1lMe1hkNhfINCxuXnmH
      jcUZyrrE9Utv300xL6+sEQwG9kWH/7A4cL1AsPcmFbGQ7G78LhuNhsJ+ZYIty8C05McmlF2o
      dQg4BHTLYHV1i16vCL4B2vUyxVIFj2KC3U+j2cRrsxBsbhzlHLmaiWm0eeb0yUMdU3wUZEUh
      F02gtRs0OiHKiRhqq0JNNQi6JNwOGyvLiwxPnmK0v7tUkQduBWhWigQGxhgIuig32gyNTxJw
      WlSah8e3tgyVfL5AW60SS9WxSya5poGtXaFUqVKp7Qllj46OYJdFVB3GRkcwmnU6hsbeDusn
      F8GhI3zxpRcIBoJMnzjBF148TzAQwSV2qLdUBsemOHtiklQm23VbDtwEcAf7aJeSFJrgosni
      4jKq4MLv3N9iJdlc+G6zDQcD3S2utKpVTjx7ntNnz6PQYqA/iMPZg8PlQhIEAj0BPB4fggA+
      n4+hviDLKyu4+kZwCgZOt/vg3ZhHCovVxTlGjz6DQzJZWpjjyKlzxDeWUQ2BTqPMerzMs6eP
      dt2Sp0HwI8TTIPjw4alQ9lMAe2now5rC3Q8e6Aa1TINKpYrT7cVu+3C3w7JMVFXDaRNY3opz
      YvrIIzPKNHQMS0CRpb1x2h2c+2QtMw2djm7isNvQ2ipINhT5fkdDp1JW8ffc+ybUdQ1JUjB0
      DVFWeBjiZtPU0XQLu+3xFnb2g8dVCLMMjaWFedzhYcYGI2RiGzgjR/A797I+O+tLpAs1pk+e
      2bc+9E/DA67mK9/7Nt/9/t8yu7pFKplkZydGrZRlbnEN07KIba2yvBEln1zk937vmySzJdrt
      DppaZ2Z2Ad3cp0dlaqzO32Q9ngOgkNzljXdu7O+cQDkV4+0bswDMXnmdjWSBfDpONJ7GNDTq
      tQqZfJZkskCtWsGwTHa2Nmm1NS69/iqLq1vUymU0UyOfzbK9m9yzL5Ngayf+QNCajm5ybWYR
      TI1aXcXUVBpNle2NNQqVBs1Gg2QsSrHaxDI0NtbWaXV0ErvbVBuHU2fsYbG7eAvX0DHiqzNU
      6zVS0XUytffy3KlsmZde+lzXH374AGrERMnk3/3bf8OLZ8b5k//xh8TzFf7sW3/KztJl/vGd
      BRbmbvGXf/q/SJRvNz3rKtdn5vnrv/g2iZ0lfvCTa/u0SGF6ehJZFDB1lWRZZSD4KLS8RAIu
      hWqriaC4EAWwBIns7gbZYonL127i9XkpZuNEkwV2VxfxhPpYXV293Qw3QT2Xp2M2WYvmkBpF
      0rkUmTpo9Qr3lykqqsmgT6FliWxvrRPf2aRjWSgOJ4vzcySi68jeEMndbZYWFxkcHaEU36Bj
      C7C1vvxEZ4ECfb1szt+iXK/RMh0cGem/p9M36Hdy8c0LLG7Gu27LfRNAxuqU2E6kyBXKTJx8
      ni8+dwxRcTM5MUqznCCabjM6EMIT7CMUDNBze5ZWyiXalo2Q79GV04vpJB1NIxaPUWnsP7js
      H+hn7so1BsYnsDSVWCpPj9uNbppMTB3FZZOw22zoho6qttjd2UaxOxEQ7iG8CgSCOGwSrWYH
      t8+LZd77uJrtKvlCmYbaYnc3i8smUmwLaIUkbRTsdhlBcdDjdSNJEogSNkXB1NokYlFEyf6J
      t1IeBrh7Ipw4MY3PF6bHae2lhstlGuU82VINQXExOtiLqnZ/JXxAKPvo9BHefuMNvJERBiIB
      Ir0RIj4b8ztlvvpLP08jv0vP4CRTU8cRmkk6SoDBvjAvnT/L2sYOx08/Q3Afwtmm1mJ1M0qr
      0aB35AgTI4MEAj2EAvv0TwURu8eHLEkMRILIDheC1sCQ7ITDYRx2G067HbvLh88uEBoYplmr
      4QsEGYgEicbShCMhHE4XiiTjdjnwhnuppKIksyVGx0fvUiOqjQZ9Y0cYHhrE1DtEQn4E2UMk
      1EM2k8HrCxAK9uB0OJEkkb5IgI3NbXpHJ7HUGk5vDwH/490b22126PdDECVK+RyTx08hWx0K
      TQGHoFMplwj3D+KxCbQsO8cnRx+aUvMT23JQ0qCHMYVoaSorG1tIdg9Hj4x+2ubsC5/VNOiB
      mQCHUSn+fliWdegm8R00Gg3c7sdLyHsQcGB6gQRBuNsLXivnyZZVjowPsbO+QttQmD4+xX5a
      owxNpdUxScV30Azwh/oeeT+QaZrI8t4l1TstKg2NUOBwyA5JknTX9m7AskxWZ67iGz9HxKEx
      M7+CoLg4c3yIq9eWCPT1c+b4JABbqwtkSi2ee+E89n2IojwMDlzF3WxX2YiXGO4LYWpVGoZn
      37ygAJ1ankShwdTRE7S1DoO93W2ySsVjbO/ugtkhV6igtaqUKnU21tdIpPOUC1m2NjdIZYu0
      G1VWV1aoNVpsrq+SyZd/+gCHDJbeIdTjpVjvgGjjuRdegGaO+NYGuivA+Ojw7SM7JLMNzh0f
      ZGF5u+t2HbgJUM0lqLVU5udmKTfA0ircuH4D9WOozHwU3q+H1T1YlOstPIJGVZfIphPEYwls
      DgVRENjYXKdQLNI/PEalmGMrGmNyepp6ZhtcIRK7O09cGlRUHHd7sWRF5ualt/AOHmXs6DOc
      PdLLjUvv0DEBOoiCA9nmxtAaXbfrwLhAd+AJ9eEuFRlyixSqTUbGJ8luLdDWLZzy4WgQ1ptF
      dMFBwK+QiiXxOkSKqoA7tYsj2IerXEEQRRRZ3lObwULTdRAEysUiPu/hcJs+DrRmhXdnF0lo
      aZxlma2CxqQrT1bWiacyGJKNanobzdWP0Ulz6UqWqWe+0HW7DkwQ/H6UCxmqbYGRgQiJ6BaK
      N0RvqGdfaUFDU1ENEbfDRrVWw+d9FMW1e3Enk9VuNhDsThRRoF5v4LSL1Nvgd9uJRqP4gxHs
      iojD6aLV3FOs2Y7GGBoZpZCOI7sCe6nTR27hh6PrQtkP8Zgl4nEGh4fv/u7HQQ/5lBrxEeOw
      CmU/3RP8FJ9pHARWiE8DDwTBb7/29/zf7/w1qUL1kQ1y4cKFhz7W1Nusraywur6FYWisryyz
      E0/t24ZWrcTW7t550rub5CrNDziqzW4088C3hXwW3fx41Ihqo8ROLL0Pi58sdBplLl26zBtv
      vU2z2eCdn/yAWKmDWk3xyo9eZ2bpPSrOqxcvcOXKVUr17tdUHgiCFzZ3+dV/9lX+4s//nK//
      y1/ib/72FZ59+Zcx8+us78Q4/uIv4mrucHFmm6//1tf4h7/5f5RUnYBDYOjUFwgYad68vsKv
      /9a/YvnGFWq4aBbTzF97m77jL9Drs3+kQYIoMzE1xe7yDCtLLULjk5S3Fqj19eNVPrlP2KpU
      2U3kGB8ZIL6zgXfCR6uQoNTocGxqnO2tTZyBAK2Gwc7WFpFID5vbcYK9g2zNXyc4coJ+rwOP
      S2Hu1hqSLHP6zHHWl5ZRNTjz7Jl7LmYynqao6owNBYglSkR8IlXdRiGTQHZ48dkMCpUWDo+f
      sFtiN5VjaGSERDSKuyfMkbGhT/xbDyJkh5fPvfQil9+8QMeSOTYxSFEzKefidCSFcPC9tHQ6
      m2N0ur/rjBDwASuAJNvoHx6nP2in2TY5deYsN66+QzyZ42u/9ess3bjKq6+9w2RI5I0rM2i2
      MEeDNl7+tV9jY3YRQXFxbNjL9ZkV3p1b45985UtEF69yaa3wUx9+2OsTySWjpCodhob7SW2u
      UatVaKj7Twz2B1ykUjEUTy9YFrph0CzmKVRr1DWR8cEQsY0FNNnD9toqpiCxtvaeUHarUkGz
      NJy+XgbcIrvRGL6hI3gdygNC2fFEjEY2Qa4lUinniCVy+FwylgWJeIx6U2X6+HHajSq76dxt
      oext6qbE5vrGE6cQAwZvvfYqY6fO0+O2o9xmOeg/+gL//Be+wNb8Le7c4l/52m9ypN/Fzfm1
      rlv1wApQze7yv//0W2i2CNGlG6wXTDTDQpLt2O02REQGenvItmReOBNmptpBFmzYHTYELK6+
      cxFZkQh6Jxken8Blkxk9/hyikSdbVen1fXTDVbtRoW3KhH12GrpEMNhD3rSIePZPkdHTO8DM
      lWt84XOnSFbaFKstnHYbFhC4vU945MgJqtldIqEwqqkQCUfoVDMkk+m7F+uOULbT6yYZ20Ut
      FRk98d44rVKSoeMvMtFrZ2lth6BbJl6FQC6LaHchS9U9oWz2zuNWJHaiURxuPx7BYujY9MEr
      0OwT5cQqRc1OIrqFTx7l1tI2NXsb+5EIyVQW3H6y63NIvWMkl5doaSqTJ8933a4HguB6tUzH
      gJ4eP5ahU2+q2BR5j8fSYUdVOyiyQLXWxOf3oWk6Iiay3U671UESDDQDFEXBtEycDgetVgtF
      FjEs6SN3mcFeybzZaCBICk6HnWajjs3hQtknR4xpGFiCiKFrKLKEYQnoHRUECUWRsQBZEtF1
      EywDQZJpNRvY7E4USaDRVHE47IiSiGlYiFiYlkE6kyORSHP+c+fvtmoYuo4gSYiAputIooBu
      giKLNBpNbDY7oiggSRKGYSBJIo16A6fbTbvVRJRtOOzdX/7fj4MQBBcLBQKh0KejEPNp43BS
      I1rkshnsLj8+z14K0TQPZw33s6oQ8/8Btbmuk9sKwbAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
