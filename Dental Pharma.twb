<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
        <range granularity='5.0' max='30.0' min='-10.0' />
      </column>
      <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
        <calculation class='tableau' formula='&quot;Deliverable&quot;' />
        <aliases>
          <alias key='&quot;Cost&quot;' value='Cost' />
        </aliases>
        <members>
          <member alias='Cost' value='&quot;Cost&quot;' />
          <member value='&quot;Duration&quot;' />
          <member value='&quot;Deliverable&quot;' />
        </members>
      </column>
      <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
        <range granularity='5.0' max='30.0' min='-10.0' />
      </column>
      <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
        <calculation class='tableau' formula='90.0' />
        <range granularity='5.0' max='100.0' min='85.0' />
      </column>
    </datasource>
    <datasource caption='cleaned_BigPharma-ProjectData+' inline='true' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_BigPharma-ProjectData' name='textscan.1brumtx1b3mw8414hvf6l0uia78g'>
            <connection class='textscan' directory='C:/Users/diall/Downloads/PwC+-+Projet+Tableau+Datasets(2)/cleaned_data' filename='cleaned_BigPharma-ProjectData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=','>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
              <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=','>
              <column datatype='integer' name='Project ID' ordinal='0' />
              <column datatype='string' name='Project Type' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Phase' ordinal='3' />
              <column datatype='datetime' name='Start Date' ordinal='4' />
              <column datatype='real' name='Actual_Duration' ordinal='5' />
              <column datatype='real' name='Actual_Cost' ordinal='6' />
              <column datatype='real' name='Planned_Duration' ordinal='7' />
              <column datatype='real' name='Planned_Cost' ordinal='8' />
              <column datatype='real' name='Var_Deliverables' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Cost]' />
          <map key='[Actual_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Actual_Duration]' />
          <map key='[Country (cleaned_BigPharma-CountryProfile.csv)]' value='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
          <map key='[Country]' value='[cleaned_BigPharma-ProjectData.csv].[Country]' />
          <map key='[Phase]' value='[cleaned_BigPharma-ProjectData.csv].[Phase]' />
          <map key='[Planned_Cost]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Cost]' />
          <map key='[Planned_Duration]' value='[cleaned_BigPharma-ProjectData.csv].[Planned_Duration]' />
          <map key='[Project ID]' value='[cleaned_BigPharma-ProjectData.csv].[Project ID]' />
          <map key='[Project Type]' value='[cleaned_BigPharma-ProjectData.csv].[Project Type]' />
          <map key='[Region]' value='[cleaned_BigPharma-CountryProfile.csv].[Region]' />
          <map key='[Start Date]' value='[cleaned_BigPharma-ProjectData.csv].[Start Date]' />
          <map key='[Type]' value='[cleaned_BigPharma-CountryProfile.csv].[Type]' />
          <map key='[Var_Deliverables]' value='[cleaned_BigPharma-ProjectData.csv].[Var_Deliverables]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Project ID]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Project Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Project Type]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Project Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Actual_Cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Duration]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Duration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Planned_Cost]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Planned_Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var_Deliverables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Var_Deliverables]</local-name>
            <parent-name>[cleaned_BigPharma-ProjectData.csv]</parent-name>
            <remote-alias>Var_Deliverables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cleaned_BigPharma-CountryProfile.csv)]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[cleaned_BigPharma-CountryProfile.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
      </column>
      <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
      </column>
      <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
      </column>
      <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
      </column>
      <column caption='Country (cleaned BigPharma-CountryProfile.csv)' datatype='string' hidden='true' name='[Country (cleaned_BigPharma-CountryProfile.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
          <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
          <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
        </semantic-values>
      </column>
      <column caption='Ecart Duration' datatype='real' name='[Ecart Cost (copie)_294704351038754824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Duration] - [Planned_Duration]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Project ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
          <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
        </aliases>
      </column>
      <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
      </column>
      <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
      </column>
      <column caption='Ecart Cost' datatype='real' name='[Var Cost (copie)_294704351038488583]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Actual_Cost] - [Planned_Cost]' />
      </column>
      <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
      </column>
      <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_BigPharma-ProjectData.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4]' role='measure' type='quantitative' />
      <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.847793' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.152207' rowDisplayCount='620' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Var KPI (copie)_294704351040008201:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Pas de dépassement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pas de retard livraison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Respect délai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dépassement de coût&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Délai non respecter&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Retard de livraison&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Project ID' />
        <field-sort-custom-order field='Project Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Start Date' />
        <field-sort-custom-order field='Actual_Duration' />
        <field-sort-custom-order field='Calculation_294704351035158529' />
        <field-sort-custom-order field='Actual_Cost' />
        <field-sort-custom-order field='Calculation_294704351034511360' />
        <field-sort-custom-order field='Var Cost (copie)_294704351038488583' />
        <field-sort-custom-order field='Ecart Cost (copie)_294704351038754824' />
        <field-sort-custom-order field='Var Cost (copie)_294704351036514308' />
        <field-sort-custom-order field='Categ Cost  (copie)_294704351036919813' />
        <field-sort-custom-order field='Categ Duration (copie)_294704351037169670' />
        <field-sort-custom-order field='Var Cost (copie)_294704351035977731' />
        <field-sort-custom-order field='Var KPI (copie)_294704351040008201' />
        <field-sort-custom-order field='Planned_Duration' />
        <field-sort-custom-order field='Planned_Cost' />
        <field-sort-custom-order field='Var_Deliverables' />
        <field-sort-custom-order field='Var_Deliverables (copie)_294704351035543554' />
        <field-sort-custom-order field='Country (cleaned_BigPharma-CountryProfile.csv)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' max='30.0' min='-10.0' />
        </column>
        <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
          <calculation class='tableau' formula='&quot;Deliverable&quot;' />
          <aliases>
            <alias key='&quot;Cost&quot;' value='Cost' />
          </aliases>
        </column>
        <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' max='30.0' min='-10.0' />
        </column>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
          <calculation class='tableau' formula='90.0' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_BigPharma-ProjectData.csv' id='cleaned_BigPharma-ProjectData.csv_8CA916FA9A6A4DB2B30CD2E55CCE8DB4'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[cleaned_BigPharma-ProjectData.csv].[Country]' />
                    <expression op='[cleaned_BigPharma-CountryProfile.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-ProjectData.csv' table='[cleaned_BigPharma-ProjectData#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=','>
                    <column datatype='integer' name='Project ID' ordinal='0' />
                    <column datatype='string' name='Project Type' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Phase' ordinal='3' />
                    <column datatype='datetime' name='Start Date' ordinal='4' />
                    <column datatype='real' name='Actual_Duration' ordinal='5' />
                    <column datatype='real' name='Actual_Cost' ordinal='6' />
                    <column datatype='real' name='Planned_Duration' ordinal='7' />
                    <column datatype='real' name='Planned_Cost' ordinal='8' />
                    <column datatype='real' name='Var_Deliverables' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.1brumtx1b3mw8414hvf6l0uia78g' name='cleaned_BigPharma-CountryProfile.csv' table='[cleaned_BigPharma-CountryProfile#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='fr_FR'>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                    <column datatype='string' name='Type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
      <datasources>
        <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
      </datasources>
      <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
            <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
            <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
            <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
          </aliases>
        </column>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
        </column>
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
        </groupfilter>
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Project Type:nk]' />
          <groupfilter function='member' level='[none:Project Type:nk]' member='%null%' />
        </groupfilter>
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Region:nk]' />
          <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
        </groupfilter>
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Type:nk]' />
          <groupfilter function='member' level='[none:Type:nk]' member='%null%' />
        </groupfilter>
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]'>
        <groupfilter from='1' function='range' level='[qr:Start Date:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]' />
      </filter>
      <filter class='quantitative' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]' included-values='in-range'>
        <min>91.439999999999998</min>
        <max>100.0</max>
      </filter>
      <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:Start Date:ok]' member='2017' />
          <groupfilter function='member' level='[yr:Start Date:ok]' member='2018' />
        </groupfilter>
        <target field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Diagramme Cost_country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_294704351034511360]' derivation='User' name='[usr:Calculation_294704351034511360:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351034511360:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351034511360:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{BDE33D9A-F56C-4900-836C-555BE7F9C3E9}' />
    </worksheet>
    <worksheet name='Diagramme Cost_region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='20'>&lt;</run>
            <run fontalignment='1' fontsize='20'>Sheet Name</run>
            <run fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_294704351034511360]' derivation='User' name='[usr:Calculation_294704351034511360:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351034511360:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351034511360:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{5C98A385-712F-4143-87F4-26283655E1CE}' />
    </worksheet>
    <worksheet name='Diagramme Deliverable_country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{184EF826-AF99-471C-A938-89335E2DCBF9}' />
    </worksheet>
    <worksheet name='Diagramme Deliverable_region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{3969A7D1-25DA-464D-B128-AF29A7A453E3}' />
    </worksheet>
    <worksheet name='Diagramme Kpi_ProjectType'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <text column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</cols>
      </table>
      <simple-id uuid='{C0BAA97E-E51F-4E38-B306-B76D5CE5B135}' />
    </worksheet>
    <worksheet name='Diagramme Kpi_country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontsize='22'>&lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontsize='22'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontsize='22'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_294704351035158529]' derivation='User' name='[usr:Calculation_294704351035158529:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351035158529:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351035158529:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{B4B018D7-BC0D-4A6A-9464-20F90B9A2E23}' />
    </worksheet>
    <worksheet name='Diagramme Kpi_region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_294704351035158529]' derivation='User' name='[usr:Calculation_294704351035158529:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <text column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Calculation_294704351035158529:qk]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{83E89C3F-C625-4145-8EED-0F330BAF1D9D}' />
    </worksheet>
    <worksheet name='Total Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light'>&lt;</run>
            <run fontalignment='1' fontname='Tableau Light'>Sheet Name</run>
            <run fontalignment='1' fontname='Tableau Light'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
          </datasources>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afrique du Sud&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albanie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Allemagne&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgique&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bielorussie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bresil&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chine&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Danemark&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypte&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equateur&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Espagne&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grece&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hollande&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hongrie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ile Maurice&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordanie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;La Reunion&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liban&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lituanie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedoine&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malte&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norvege&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pologne&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republique Chèque&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovaquie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suede&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suisse&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turquie&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='62' />
            <format attr='color' value='#d37295' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' value='76' />
            <format attr='total-label' data-class='total' field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' value='Total ' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[ctd:Country:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</rows>
        <cols total='true' />
      </table>
      <simple-id uuid='{B48C715E-8B7B-435E-9C8F-750DD39C6094}' />
    </worksheet>
    <worksheet name='carte générale'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='20'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
              <calculation class='tableau' formula='&quot;Deliverable&quot;' />
              <aliases>
                <alias key='&quot;Cost&quot;' value='Cost' />
              </aliases>
            </column>
            <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' max='30.0' min='-10.0' />
            </column>
            <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
              <calculation class='tableau' formula='90.0' />
              <range granularity='5.0' max='100.0' min='85.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
            <column datatype='real' name='[Actual_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Actual_Duration]' role='measure' type='quantitative' />
            <column caption='Var Cost' datatype='real' name='[Calculation_294704351034511360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Actual_Cost])-SUM([Planned_Cost]))/SUM([Planned_Cost]))*100' />
            </column>
            <column caption='Var Duration' datatype='real' name='[Calculation_294704351035158529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Actual_Duration])-SUM([Planned_Duration]))*100/SUM([Planned_Duration])' />
            </column>
            <column caption='Categ Duration' datatype='string' name='[Categ Cost  (copie)_294704351036919813]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351035158529] &lt; [Parameters].[Paramètre 2] THEN&#13;&#10;    &quot;Respect délai&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Délai non respecter&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ Deliverables' datatype='string' name='[Categ Duration (copie)_294704351037169670]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Var_Deliverables (copie)_294704351035543554] &lt; [Parameters].[Paramètre 3] THEN&#13;&#10;    &quot;Retard de livraison&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Pas de retard livraison&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
                <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
                <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Planned_Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Planned_Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
                <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='Var KPI' datatype='real' name='[Var Cost (copie)_294704351035977731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Calculation_294704351034511360]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Calculation_294704351035158529]&#13;&#10;ELSE&#13;&#10;   [Var_Deliverables (copie)_294704351035543554]&#13;&#10;END' />
            </column>
            <column caption='Categ Cost ' datatype='string' name='[Var Cost (copie)_294704351036514308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_294704351034511360] &lt; [Parameters].[Param (copie)_294704351057637386] THEN&#13;&#10;    &quot;Pas de dépassement&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Dépassement de coût&quot;&#13;&#10;END' />
            </column>
            <column caption='Categ KPI ' datatype='string' name='[Var KPI (copie)_294704351040008201]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Parameters].[Paramètre 1] = &apos;Cost&apos; THEN   [Var Cost (copie)_294704351036514308]&#13;&#10;ELSEIF  [Parameters].[Paramètre 1] = &apos;Duration&apos; THEN  [Categ Cost  (copie)_294704351036919813]&#13;&#10;ELSE&#13;&#10;   [Categ Duration (copie)_294704351037169670]&#13;&#10;END' />
            </column>
            <column caption='Var_DeliverablesRec' datatype='real' name='[Var_Deliverables (copie)_294704351035543554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(100+[Var_Deliverables]* 100)' />
            </column>
            <column datatype='real' name='[Var_Deliverables]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Var Cost (copie)_294704351035977731]' derivation='User' name='[usr:Var Cost (copie)_294704351035977731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Var KPI (copie)_294704351040008201]' derivation='User' name='[usr:Var KPI (copie)_294704351040008201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var_Deliverables (copie)_294704351035543554]' derivation='User' name='[usr:Var_Deliverables (copie)_294704351035543554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</column>
            <column>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#9fd7b3' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' />
              <text column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var Cost (copie)_294704351035977731:qk]' />
              <color column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' />
              <lod column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' />
              <geometry column='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[Latitude (generated)]</rows>
        <cols>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F7BD99F8-49A6-4E84-B22B-5084984FC9B7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard Géneral'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Paramètres' name='Parameters' />
        <datasource caption='cleaned_BigPharma-ProjectData+' name='federated.1ra44rv1vvkuds1bz08r01dcymx7' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SeuilCost' datatype='real' name='[Param (copie)_294704351057637386]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' max='30.0' min='-10.0' />
        </column>
        <column caption='KPI' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Deliverable&quot;'>
          <calculation class='tableau' formula='&quot;Deliverable&quot;' />
          <aliases>
            <alias key='&quot;Cost&quot;' value='Cost' />
          </aliases>
          <members>
            <member alias='Cost' value='&quot;Cost&quot;' />
            <member value='&quot;Duration&quot;' />
            <member value='&quot;Deliverable&quot;' />
          </members>
        </column>
        <column caption='SeuilDuration' datatype='real' name='[Paramètre 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' max='30.0' min='-10.0' />
        </column>
        <column caption='SeuilLivrable' datatype='real' name='[Paramètre 3]' param-domain-type='range' role='measure' type='quantitative' value='90.0'>
          <calculation class='tableau' formula='90.0' />
          <range granularity='5.0' max='100.0' min='85.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ra44rv1vvkuds1bz08r01dcymx7'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Ile Maurice&quot;' value='&quot;Maurice&quot;' />
            <semantic-value key='&quot;Malaysie&quot;' value='&quot;Malaisie&quot;' />
            <semantic-value key='&quot;Republique Chèque&quot;' value='&quot;Tchéquie&quot;' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Project Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;IT -  CRM Implementation&quot;' value='IT' />
            <alias key='&quot;Marketing - Launch of new product&quot;' value='Marketing' />
          </aliases>
        </column>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='datetime' name='[Start Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Project Type]' derivation='None' name='[none:Project Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Start Date]' derivation='Quarter' name='[qr:Start Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89028' id='7' param='horz' type-v2='layout-flow' w='98858' x='571' y='9972'>
            <zone fixed-size='868' h='89028' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='98858' x='571' y='9972'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#e7dfe381' />
              </zone-style>
            </zone>
          </zone>
          <zone h='8972' id='19' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6667' id='8' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]' type-v2='filter' w='9882' x='941' y='10222'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6667' id='9' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' type-v2='filter' w='9941' x='882' y='17778'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6667' id='10' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]' type-v2='filter' w='9882' x='824' y='25889'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6667' id='11' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]' type-v2='filter' w='9765' x='941' y='34000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6667' id='12' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]' type-v2='filter' w='9824' x='941' y='42222'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6667' id='13' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]' type-v2='filter' w='9765' x='1000' y='50556'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='7889' id='15' mode='compact' param='[Parameters].[Paramètre 1]' type-v2='paramctrl' w='9412' x='13176' y='1444'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='8333' id='16' mode='slider' param='[Parameters].[Paramètre 2]' type-v2='paramctrl' w='9706' x='1000' y='59000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='8333' id='17' mode='slider' param='[Parameters].[Paramètre 3]' type-v2='paramctrl' w='9647' x='1059' y='69333'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='8889' id='14' name='carte générale' pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type-v2='color' w='9882' x='941' y='88667'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='39000' id='3' name='carte générale' w='40143' x='11571' y='11000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='38625' id='18' name='Diagramme Kpi_country' w='45643' x='52857' y='11000'>
          <layout-cache minheight='355' type-h='scalable' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='8222' id='20' is-centered='0' is-scaled='1' param='C:/Users/diall/Downloads/dental pharma.png' type-v2='bitmap' w='12235' x='588' y='1222'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='8333' id='23' mode='slider' param='[Parameters].[Param (copie)_294704351057637386]' type-v2='paramctrl' w='9882' x='941' y='79000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='45000' id='24' name='Diagramme Kpi_region' w='40571' x='11500' y='52125'>
          <layout-cache minheight='230' type-h='scalable' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='44750' id='25' name='Diagramme Kpi_ProjectType' w='45357' x='53071' y='52375'>
          <layout-cache minheight='219' type-h='scalable' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='64' h='8222' id='20' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/diall/Downloads/dental pharma.png' type-v2='bitmap' w='12235' x='588' y='1222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7889' id='15' mode='compact' param='[Parameters].[Paramètre 1]' type-v2='paramctrl' w='9412' x='13176' y='1444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='8' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]' type-v2='filter' w='9882' x='941' y='10222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='9' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' type-v2='filter' w='9941' x='882' y='17778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='10' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]' type-v2='filter' w='9882' x='824' y='25889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='11' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]' type-v2='filter' w='9765' x='941' y='34000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='12' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]' type-v2='filter' w='9824' x='941' y='42222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='13' mode='checkdropdown' name='carte générale' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]' type-v2='filter' w='9765' x='1000' y='50556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39000' id='3' is-fixed='true' name='carte générale' w='40143' x='11571' y='11000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8889' id='14' name='carte générale' pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type-v2='color' w='9882' x='941' y='88667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='18' is-fixed='true' name='Diagramme Kpi_country' w='45643' x='52857' y='11000'>
                  <layout-cache minheight='355' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45000' id='24' is-fixed='true' name='Diagramme Kpi_region' w='40571' x='11500' y='52125'>
                  <layout-cache minheight='230' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44750' id='25' is-fixed='true' name='Diagramme Kpi_ProjectType' w='45357' x='53071' y='52375'>
                  <layout-cache minheight='219' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='16' mode='slider' param='[Parameters].[Paramètre 2]' type-v2='paramctrl' w='9706' x='1000' y='59000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='17' mode='slider' param='[Parameters].[Paramètre 3]' type-v2='paramctrl' w='9647' x='1059' y='69333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='23' mode='slider' param='[Parameters].[Param (copie)_294704351057637386]' type-v2='paramctrl' w='9882' x='941' y='79000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F224EDA-8757-443D-83F1-E77EE532C855}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='carte générale'>
      <cards>
        <edge name='left'>
          <strip size='219'>
            <card size='9' type='pages' />
            <card size='172' type='filters' />
            <card size='289' type='marks' />
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' size='50' type='color' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' size='27' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Paramètre 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Paramètre 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Param (copie)_294704351057637386]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project ID:ok]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[qr:Start Date:ok]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4824311-56EC-4C2F-BA53-0200E08BC3E6}' />
    </window>
    <window class='worksheet' name='Diagramme Kpi_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{544EBC87-8159-4506-A0E7-A881B06B3A05}' />
    </window>
    <window class='worksheet' name='Diagramme Cost_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F5C9207-B978-4F54-AFC2-5F6730FFB736}' />
    </window>
    <window class='worksheet' name='Diagramme Deliverable_country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE590845-E5D2-4FDC-8780-C7F202D6EA0D}' />
    </window>
    <window class='worksheet' name='Diagramme Cost_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8456540-8C59-400D-B6A0-E16681D7AAE1}' />
    </window>
    <window class='worksheet' name='Diagramme Kpi_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C6F9914-2186-416E-B5B6-3946945561CA}' />
    </window>
    <window class='worksheet' name='Diagramme Deliverable_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F02356EA-983F-49DA-B6F5-FB8FB1BE0D7A}' />
    </window>
    <window class='worksheet' name='Diagramme Kpi_ProjectType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Project Type:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Region:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Type:nk]</field>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A7426D3-F32B-4418-8C75-9A74180E20A4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Géneral'>
      <viewpoints>
        <viewpoint name='Diagramme Kpi_ProjectType'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Diagramme Kpi_country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Diagramme Kpi_region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='carte générale'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var KPI (copie)_294704351040008201:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{EE99F01F-AE8A-4B8C-8981-DB44A8D33265}' />
    </window>
    <window class='worksheet' name='Total Country'>
      <cards>
        <edge name='left'>
          <strip size='235'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ra44rv1vvkuds1bz08r01dcymx7].[usr:Var_Deliverables (copie)_294704351035543554:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Param (copie)_294704351057637386]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ra44rv1vvkuds1bz08r01dcymx7].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4004B920-DEFE-4D9F-99AF-71538382F601}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard Géneral' width='192'>
      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
      2tE6xIcHefvvz9XB4kRJJKdsn/NE/SHyKjNdp7OqBMkb5Pzrh86YcWY53y7Xk5suQYYiS3R8
      dpC2Zj9Pf21sQNrBlnYctXVsePpuhppbOLL1FAB5VcUcffsTDKwjeGbsAoBw0Ryk/0QbhY2r
      uO1L6+g7eJgj+/tnrN62why0osjtX32E/BIngZ4+RMf4EOei2cYD33qId3/xBoU/+gY6QEmn
      Sadl0kE/LfvaWP3NW8cLmISL789enItG1LPxpcfILbTh6+zFkGOZsn3Ok1dRSPPOI9y+pZH2
      HQexVhUxN4lSxzLvHWJmkte+/3eg0VBQV81D/+V5bJaxt1+8ooH9777C//nGARruWTk6N176
      xXuIxT7myDufUVZfNOn1y9cs4/CPf88vPvqUpXfMbNArnauATY+vYdvf/1+i4SQ5VWVs/s/P
      Tlg2t2ExK9e1seOVT9j8+FLSAS+v/Kd/JJmCJQ/dRU1DHhC76joY80vZ8MXlvPPDnxOLpsmr
      LefBHzx7Re2z/rmH+fBnr/PzP76Du7Kc+777xFXLnw3mvUPMfNgJDg8Ng8GC1WGkfcdu9u/z
      8Ox/fXJO63SlnJ+Tf/3HL05a5tT7u4nGxq6HmnLzWL7pypR4PrbPle4Ez0uHmEg0Oq/8kwNd
      3Wz/zXYigRj24kLu+fb86L1miqUPTs/8ZSG3T9Yh5gooW7eaF9etnutqXBO63OIpe/+ZYCG3
      zyXvACpv/+m3jETgyeefZ5yJvhThaOsQbU2HWVaVy6fHuygoqeSxzXdNLiHlZ8fBbjatLKFl
      MMGymtKZvocsWa6ZcQowODjEsg0Pkeg7xS+37aa0sh6dHGFlmYMBwUVXlx8BCPmHeehLL9L0
      0e/Ys/tDcuo3cfTTdyAeQLWXUpOrY/feo2zctI5tW3dSYn2Q9oCG/R/+mZCk4Z71y9hxrAuj
      wci3vzK5/2+to4z15fMvYV6W+c2RM3tHj606M6tyJ95buEQBFB576kX2fPgaA5Y8ymqX4zAK
      BEcCmei+ZtfY4qqML5ygoARSyTjJtIzdnsejjzzEW2+8RqFDxFFUzS2r01QU2GkZ8SC6qrjV
      nWIolOSuzY/Stm/8psnFWHUmCs05U5bJMjnJaJCIJJLjmPt3u7nCqjOxynVFCiBweO9OZFct
      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
    </thumbnail>
    <thumbnail height='192' name='Diagramme Cost_country' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagramme Cost_region' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Diagramme Deliverable_country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diagramme Deliverable_region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAATgklEQVR4nO3daWwj93nH8e/wviRREnXf12q98h4O7DZXUzcBUqRokzRp4aTOhTRA0bQv
      8q59E8AoGrR90VcB+qJBAqRBGucs0ia2YTROijhx7Ni72pVWNw+JokSJpCje90xfyLuObXKl
      eCjuauf5AAtIi9n/PhzOby7+H46iaZqGEAZlutsFCHE3SQCEoUkAxJmXP9zhX//5n/jyv32F
      WLpYd5nNlasE93Nv+ntFrgHEWZeOrvH0izs82J0mpE2S9T9PKFHhLz/7F3zzK/9OxWzj0gNT
      jFx+lF//6BvspCp84pMf5zvf+JoEQJx96egaX/zHL1O2tPGlL/4tX/3at5kd8WJxd6B2X6A9
      eYP9dJ6+mYcIh2P8wXkXv/SXUKslOQUSZ5+imPj9DzzG5z70Dl5Y2KbTUcMfTTExe4FXnvkW
      P/nVPGaLlXbfEKnQVb76g59xaW4Ci9VyukeAW0MrinJa/4UQDdWKh/z8hRuEQgH+7PFP47G9
      eTs81QCoqgqAySQHGnFvsryVf6RpGgcHSbq7u6iWCwQ2d5mamoBaEX9ol8mpCUxoqKqKpmm3
      gyDEveYtBSAW3WZjK8Y7u7tYuLHIufMz3Li5ilZMM3vhHAs317jy4Lnbe345BRL3qrcUgN6B
      ERIH2VdHsOL2eKEaQrFacbu9UAuhKIpcA4h7nu6Tc6VWo1jIoFgccOtns6MZtQlx6t7SRfBu
      OEg8mcXT6WPI5yGwGWVyegoqeQJbu0xMTWK3mOUiWNzz5C6QMDTZMoWhvaWL4NPwxNN/TyIX
      v9tltMzbx9/N4w9/5m6XYXj3TACShQMSeeMEIFvO3O0SBHIKJAxOAiAMTQIgDE0CIAxNAiAM
      7Z65CyT0qak1UsXDu11GS7ltHuwWu64xJAD3iUQuzhf+66/udhkt9fl3f4F3Tz6qawzdAQht
      rJDK5ukbmUHL7bOXTNM3NMWAr13v0EKcOt3XAMlsgUuXL7Md2iCaSHPl0mWi20F+c4qRpmnH
      /sForfnaydbLSf8YbwWC1oR1qPsIMOjrZHl1g0pNxWIxg6IA2us6wU7SD2C0t6/ZnXJG7LrT
      NFX369YdAA2olXKMTkxTOggzP38Nr2/kdTNATzIb1Gg9M4pJwWw2N208k6l5Y50VJpNJ9zrU
      HYD+4XH6h8ePfunp0DucEC0lnwMIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhD
      kwAIQ5MACEOTAAhD0x2Ag9guNxcXOUjnyRzss7CwSDpfbkZtQpw63QEIbe0we/4cQf8666Ew
      Fx6Ywb++1ozahDh1uqdDOy2wsLCAq72XUiaO2WIHrYqqqr/VI5KM9rBWTdWoVqtNG69WqzVt
      rLNCram616HuAORKZQaGRojuJ3GYNDY3/dhdXmmIOYZiUrBYmvedBM1srjkrTGaT7nWo+x24
      8tDbSGVyXL48hEmrkUpnGfFKY4w4G3QHwGK1091167tZLHR2evUOKUTLyG1QYWgSAGFoEgBh
      aBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFouucChYPr5Eo12rw++rs9BLd2GZ8Y
      x2Iy2PROcSbpPgIMjU4yPtRN7CDN9es36O/tYPGmNMSIs0H3EcBkNuEPbHN+7jLLiyk8bV1o
      tS1piDmGNMTod080xFSLGSpmNw6LCWo1isUsitkhDTHHkIYY/ZrREKP7FKhaVZmZmQJg7oFZ
      gqEdHjg/o3dYIVpC9y7I4XmtAcbmauOB8216hxSiZeQ2qDA0CYAwNAmAMDQJgDA0CYAwtIYB
      KKV3efb/XqaaP+Tp555vZU1CtEzD26BarcpLv/oFHnWfrajxPmUUxtDwCODoHOaxP3oHiaKV
      D73/Pa2sSYiWaRiA4sEW3336RdRKhu//z1OtrEmIlmkYAJPNhbmWY/6Vl/H1DbWyJiFapuE1
      QDpT5E8f+zjDvZ2s+MOtrEmIlqkfgEqGr3z92/S1KezlTfzxRx5rOICmHU3rNZstKApUq1Us
      FguK0aZ3ijOpfgDKeQ4yWbwW0OyjFHKZhgNsbqyQryn09A0SD2+gmi2YHZ2cnxo5rZqFaJr6
      AXD6+LsvfJ58oUilVMDd2ddwgHAkQld3L7l8kZKqcOXSRa7NX0dVh6Qh5g6kIUa/02uIMZlx
      qkl+8LNrxIMrdExc5G8+9dG6i7rbu7hw8RLXrl49Ou3RVMAkDTHHkIYY/U71CTFWdxcJ/yIP
      P/p+EoeFhgNMjw2xcOMGAyOTOLQc8zcWGZ+a1VWUEK3SOABOLw9duYimqYyPDDYcoL27j0vd
      t06RvHT2yi1TcXY0PDfJxdZZT7lwK3levDrfypqEaJmGAXD1TDPqSnFt0c/73vfeVtYkRMvU
      DUByN8B/fOM/SeartLW1EY3utbouIVqi7jWAt3+CT396nMDqItHDEleuXGx1XUK0RN0jgKIo
      FGIbPPn0S3SY83z9uz9udV1CtETdI0Bqb5On/veXFA+jLK5aUBR59q+4P9UNQJtviA9++KNM
      z7/CXjLL5Mh0q+sSoiXqngKZzBbIbPPT518iU1aZly+7FfephrdBbe29PPTI70IygtvjaWVN
      QrRMw0+Ca+UCqqWNj332rw03T0cYR8MAmExWfvajJ9mPrDE2Pcd7HpFboeL+c4fJcN187M8/
      RE6z0eltb2VNQrRMwwAUEgGeeXGDt53r5uWFVR6YGau73PryAmXVRHf/EOXDKAeZPF1944wO
      dJ1a0UI0S+MjgMfHhbEeCsUq73vP7zUcQAE0tUalUiORzvPQlYe4Nn+d4T6vNMTcgTTE6He6
      T4jRFKqlDOlckUQq23Cx0alZrFYL165dR1EUNK0KJrM0xBxDGmL0O9WGmKMt8mir1O6wB4/t
      hklm8oxOncNayXBjcZnJaWmIEWdD3QCotSoqZh5516N0trsxW6wNBxgam+K1Fhg3l339za9S
      iFNSNwCHe5vspCrcvHEdgIHJC3IbVNyX6gZAUUxc/fVLt3+vVJp3sSbEvaRBP8AYjz8+wnZw
      nUwF2tu7W12XEC3RoB/AROkgxDf/++dsb27ww2eebXVdQrREw/uTVo8Pj5bmpV+9xIR8zYm4
      TzW8DRoOrOPp6sbjG+CdD19qZU1CtEz9I0Alw3eeeoHHP/FJPvzet/Gt7/+oxWUJ0RoNvhy3
      wH5sl+9++0moFkmk5Vl64v5UPwCuHv7lS/+A9uoEHaVW5DBfwetq/IGYEGdR/V27omC1WrHZ
      bNhsNkz5PVZ3G88HEuKsknMbYWgNA1ArZdlLpABQHF76O+wtK0qIVmkcgEqB733nByQzWcqW
      DsZ8rrrLaZrG/C+eJRjLEVpfYn7+KqFI/NQKFqKZ7tAPAL4uF88+9eM7ToZLRjext3VSralk
      c6XbDTFjg923G2G0k3S7GK0hRtOa2sRykqaj+42q6l+Hd+gHgPDaTXKKjZTW3iAANeYXVml3
      KWSru3hNyqutXUd9BLcelCcPzHszBaWp68WI61hR9K/DhgGo5A7oGJ1lqt1DKH7QYCkz733/
      H1JIbJNQulDSEeavX6dvaPJ1xZ2kIwyjvX/KCdfLSYczZAD0r8P6AVCrlO39PPaRD7K/HeTt
      PfUb4m9xdg8zDNA1gzwfRpwl9QNQq/D8c8+wl8jg7R3gXccEQIizqv7xw+rkA3/yYd7zzodJ
      72zww2d/3uKyhGiNBnOBsnzrye8xMnWBj37ic7R76t8CFeKsqx8Am4dPfuozra1EiLtApkII
      Q5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEPT/QX1kU0/yXSOjp4hnGqO7dgBQ2Mz9Hjd
      zahPiFOl+wgwODrJ5Pgw8ViMrb04Vy5dZDvkb0ZtQpw63UeAcj7NRjCM0+WlmCuAYgJUVFWV
      RyTdgTwiSb/TfUTSCUUiEcxmM+VSCZdFYX7+Gh7vgDwi6RjyiCT9TvcRSSc0ee6C3iGEuGvk
      LpAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA03QHIHMZZ
      WloimclTyCRZWlohX2reNF8hTpPuAFRVE7Oz59hYXWF5zc/01Cirq2vNqE2IU6d7OrTHZWP+
      lVcYn71IJLiKze4CtSwNMceQhhj97omGmOvzN5h44CJuhwVFrZGIR7HY26Qh5hjSEKNfMxpi
      dJ8CjY2PkT6Ik87muXjpIvmiyoXZSb3DCtESundBPf1D9PzG7yPDg3qHFKJl5DaoMDQJgDA0
      CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA03QHQNI1sNosGqNUy0eg+NdVg
      c5vFmaU7APHoNvMLywAs3rgBWoml1YDuwoRoBf2zQQdGiCezAKgmM/0DI+zuzUtDzDGkIUa/
      e6Ih5jdpqkqlUkAx2aQh5hjSEKPfPdEQsxsOUigWCYV3mJ0eZ3UtyMy5Gb3DCtESundBAyMT
      DIy89vuDc916hxSiZeQ2qDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwtKYGILkfYf76
      dZKZYjOHFeLUNDUAwcgeVy7NEfLL16OLs6GpATApCihm4PjZn0LcC5oaALsZlpeXcLbJfCBx
      NjR1OvT5By9TKlew22zNHFaIU9PUACiKCYfdDnC7IQaO2iaPc853nl53fzPLuacNtg03tYnF
      rJiZ67vUtPHOgnZbh+51qGgn2TrfolsBOElDjKivVqsZstmlme60Dpt6BHgjxWhtXqdAdh76
      3WkdnuraVRSlxSHQiMfjb/q7TCb7piVz6SR+f4BUtlB3JLVSIlsok0pE2diMkE6nTqHe4ymK
      AprGQSzK7n6i4XK53Jtf4y0H8RhVFWqFJIGtKEG/n8BmuOG3d9xprDdK7O/i9/tJHGZO/G/q
      KebSt9+L1EGcQrlKJvPamLH92Gs/x2IcJhOUKm+421irEAoG8PuDlGuvvbY7bYP31e6lnDvk
      6stXyZRVcqkES0vLFMoq5XKRYjbF8tISqezRh3Sh7R0GB/tZW1oklz1kaWmZVO7V5ZZXKJWL
      5AtFXnr5FRSgWCiiVsusry4TPzz5BtIM8UiAvWwNh81CpZhjZWWFbKFMLBphbXWFdCbDT3/6
      HBuhbQ6TScKbQTKZNMtLSxxmCiTjMWoabG3t4bZW0GxtDPb1olWLrC4vsZdIkU8fsLS0TDp1
      yE+ee46tyB6pg31W1wNUqxXisX22tqNEd8KsLK9QKB81o0f39xkcHKTd4yKZPETTyiTiaQ4S
      MUKhMJlUguWVVUqVGtGdLZaXVylWaiRju6wHNm+HMBENsbgaAjSWr75AOJ6jXCpTq5RYW1lm
      PbBFrVpifWWFNf8W6cMDytUaO+Egm5E9NIBSisOKjcHBASwn3LLvqwDsRff5nXc9wlYwTCgY
      oK2zC7NJYX9/D8VkAq3K4s0VALRqiUAgSFWxHB0i1Qo3l1ZY2wgyPT2NtZollqsxPDrO1NgQ
      O5EdAuur9I1O0eG2t/R1heNpzk8M0entYHV1jbGJMQL+DSK7u4yPjbC1E2NoeJjp8WFC68vg
      aMdmMYFWY3Fp6dVRahRUcJg1dsKbhMLbaJgwmRQWFhfYDAbweDtxuNsYGRlmdKgbf3CH4S4b
      /q1dri2u0NPjY2d3j6mxboLhoyNtIZsiEAiQTOfY3d0FioS3YiwtXMfr8+EPbDE9Ocryyhq7
      +wmmJ4fYWF0msJ3A51QJhiPcXN1Aw4TdpJFNxXB29gGwv7ePf32NockZOtwOAmvrDE5M0eFx
      AFDKJjjIm1CzMVKFo0Du74YJBDY56aXxfRWAWCJBZGuH1GGcydk5LKUE/q2jN2ptbZ3RySlc
      tqOLIcXqZG5ujnc88hDrqxuMT83gtN06Zat/anC3rml8bhuReJpSqUQpl2ZldR2b043d4cRm
      MaMooGhQU1Ucnk4G+7pZX11jdHIal/3oMq+QiuHs6EHBxMT0LOdnpogG1mgfGKPD42L83AVs
      1UM2NmNoGqgaJGO7BCJxPA4Lg8NjOO0WHC4XVov1aAHA3dHN3NwcvV3tqKpKqZCnBnT1DeL1
      OF/3OixWG1qthslsJr4XIbx/SFubl7nZaUyKwthINy+8ssFQ32ufI9VUFbMClWoVVVUxvfrz
      EZXtUIDDfBXrq1vy0Ng0c3OzWLQa+UKRQj6Heof7POYnnnjiiWa9UXeVVsPu6mBsbJQ2l51a
      tUz8sMTExDBOu41ubweRaJze3l7cbidWqxWn42hP4nZaiewl6O3tZbC3i+BmmPYuH06Hgza3
      A4fDidVqY2BokHAwgNnuwelo3Wcd7V0+UnvbJHNlzk1Pkslk8PX009HmxuFwYbVa8XW4icRS
      9Pq6cDodeFx2tndj9Pb20tHRTjQaY3R8FIvZRCS8Sfwww/DoCNHtbXy9fdiUKnsHBSbGh3Fb
      FQ7SJcZHB8iVagz09+Ny2nHa7VisFpxOFxarDafDSjmfJhzZRTXZaLMrxNNlent8dHS4cTqc
      eFw2QuFdzp2bIRxYpVA1Mz0zg8/rplCB/r5eLGYTJrMVV1s3boeZ7u4u7A4HHpeDgf5eAoEQ
      nb4eRob7CQY36ezuodPbgbutizaHgmJ10tPdiclkZn8nTCyWoN3bQTpToFLK43B5jmYp1HGq
      t0HFvWM/FqO3p+f4Be/zGt5IAiAM7b66BhDit/X/AbZzAhhlPQYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagramme Kpi_ProjectType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAMuklEQVR4nO3dWWxc133H8e/cIWeGIoebuImLKIsUtVC0ZdXyEqFoYyNFYqQp4nQD6sc2
      fSjQFijalz46D0FRtEWBNk1aI04CuQacOjGS1i6y1LGjxpWjhZs2ihS34SKSM+SQQ87Ge/tA
      27IRMhDmXt7h8Pw+TySoOfOnMD/Ovef855yA4zgOIoayil2ASDEpAGI0BUD2vNWFcf7my1/m
      n7/2DVYzm7/w8810kh9fvLTtY+fHBhgYuwfAD75zgRdeeIGvfP1lcu8PE9A9gOx1S+PXeOtW
      lhMVM4xmG5i+cZWuvnNMD7/Lwjp88Q+f5+LPr3MotMaPfjbAM59/npkrb3J3CRrCCd4bzfDX
      f/FnNDZG+eq/fo0//qMv8u1/f5nPPfcsZcX+5UQexNtvfJvRtlZ++7ljLC128WRXFW+mzvGp
      1jSX+sdYTiaZmrjBU08+xvjIVeLJCH/6J3/A2JUf0nT2GI2N0Y+Nd7Slkldefk2XQLL3Bawg
      z3z29/irv/xzGqMRmpqaiDYfYf7GO3zzPy/x8Il2wOLEsQ7+7/IABxs7qbIW+cd/epFwQzvv
      vH6BxcVVAEKhEACnHz/P1eG73l8CfTBcIBDwcliRHU3evMy1WJbPPfPUAz9m4tZVhqY3vA2A
      bdtsbm7dXSgAUgoKugdwHJt4YoWD9XUALC/MEapp4kBo64oqEAgoAFISCroHmJ+ZYmR0AoB8
      NsXglXdZWMt7WpiIHwoKQEtbJ9WVYcBhdGSUo11HPS5LxB/uZoHsPBuZLFNTU8zMzHpUkoh/
      CroJjk2MEk+uU13fRGdbM9nUCrnyKJUhC9u2dQ8gJcPzaVAFQEqJFsLEaGqFKBqHbDZHeXk5
      4LCeWicUqaC8LAhANpMmbweIhIKk1jcACIfDZDIZACoOVFIW1N8vt/Q/WCTzU2P8y0vfAmD8
      1hBX+/v5zvf+C4Dc6jzf/f6b/M8brzESW2B4cJDXLrzI0GiMwcFBXv3Gv3FnIVXM8vcNvQMU
      SXNHF30nJgE4cryPwK1+kumtn1mhCPl0ilXHpra2np6OZu4tLnHmxBEsp4PFxTjHm6O/ZHR5
      UK5XgpOJBWbuLXO0u4uQ3pILcrv/Z8xmo3zm6U8AsDI3QWvPY/TWLHN9apGcM8mhE+ewAgFG
      rl7koUeeQnMM3ih4Jfj2+yvBNmV0dR6iv3/Y08L2u8k7w8zGZnn74mXiyTUyiRn+9/IA3/+P
      Vwm39OAsj/PenWXOdreQcCp57FgL4JApr6f3cH2xy983Cp4GvX79BqdOnWRjNcG1a9do7nqE
      Iy21aoZzKZPJEA6Hi12GMVzeA9hk7SBPfOI8l69d52jr1l8mr9cB8rEYdjLp2Xh7WTlgF7uI
      IrGqqijr6PD1OQsKQGxilHw+x0TsHhVWjpmZWXpP93pd24fWXnqJ9E9+smvjy94Qfvxx6r70
      JV+fs6AAtHV20faR75sOeVSNiM80bSNGUwDEaAqAGE0BEKMpAGI0BUCMpgCI0QoKwMLsFJeu
      DAIwOXabocEBRif1mWApPQUthNU3HWIhsQZA+5Fu1pNLjMYSOE4LjuPgOI6nrRDavdcMDlsf
      qfVTQQEIBu8/7N70XeZWN+k7dexjL35PP2qsDayN4fdm5QX3As3OzlJZU09sfIKag83Mzcdp
      azkIeN8Mp85SMwSAYDDo63MW3gvU2QVAZ1uzpwWJ+EmzQGI0BUCMpgCI0RQAMZoCIEZTAMRo
      CoAYraAAOI5NPJ74ha9FSk3BG2PdGh0H4N7MNDff/1qk1BS0EtzS1kl8ZR2A5rbDLCa3Nmrd
      rVMibfUCGcFxHPJ5f8+a83RzXMvanVMiLfUCGSEQCFBW5u9+zQVdAt3fGGue2MQom7kcE7E5
      r2sT2XUebIzV/LFNskRKiaZBxWgKgBhNARCjKQBiNAVAjKYAiNEUADFaQQHYWFv58JC8lcU5
      BgeHSGX8XcIW8UJBAcjkNkmvb22MNToZ49TJbm7fvOVpYSJ+KGgluLaunpnZeWCr/ydYFgEn
      p2Y4caVkmuFWEkskEgkSK6sEnU0mxu9QET2oZjhxpRjNcAU9m2VZHD/eg2VZ9PY9wvJqisO1
      NV7XJrLrCgpAtKaO6Ee+r6+r9agcEX9pGlSMpgCI0RQAMZoCIEZTAMRoCoAYTQEQo7lcdnMY
      uPIeNhBtfIiujkZPihLxi8sA2GTzAU4/3Mu1gRs81HZQvUBSsJLpBbovSO+pY8RiMUKRCvUC
      iSslszHWRyXicVKpND3He7yoR8RXruPWevgorYe9KEXEf5oFEqMpAGI0BUCMpgCI0RQAMZoC
      IEZTAMRorgOwNB9jeHiY5VTai3pEfOU6AOPTcxzv6WJsZMSLekR85XolOGxtMjg4RFV9mzbG
      EldKsBnOZiOzSfvhVmYW4ljWIUDNcFKYEmyGszhz9lHKQxWc6TvlTUUiPnIdt/JQhIaGiBe1
      iPhu+wBk13jpWxdIpbeuxzpP/Qqf/eSTftYl4ovtAxCq5Gh7M7cml/j053+Xjobotv9MpNRt
      fw+wscSlOys8/5vnef2/3/a5JBH/bB+AQJBAepFXvvcWicnr/OCnl30uS8Qf218CWSHO//qn
      ePzsw6Tis1y5PeNzWSL+2D4A5RVU5uP8/d/9LVV1LXzhC8/5XJaIP7a/BMptcGNsitXVVcrI
      cXXops9lifhjh3eAA/zO7z//AA+3uTtym/VMliwRHj2tnSGktOxwExwgn4pzc3wW+GVtDRYP
      HTtBfWWIpta2XStSZLfs2Arh2Hm++ZV/4MIrr/D2e4M7DmDn08yu5Gmtr9yVAkV2044BKKus
      57nfepbaaBWRcPmOA6wtxzncdQy1q0kp2jEAGwt3+PFPL7Gatbk2dHvHAaobWmmIhnelOJHd
      tmMAQtVNnD33BCRiVFbp8kb2px2b4V5/4y1OnznH07/2qwSD+uiw7E/bv7JDVTz7G0+zMHGD
      r7/4VV594x2fyxLxx/bvAJtZfn7pXUbuThM6UMPJ7k6fyxLxx/YBcBzau3o5/8lPE7Q0vyP7
      1/YBKAtz9Ij2PJf9T3e3YjTXAdhYW+b69WHiyXUv6hHxlesA3BoZpb39MNEDWgyT0uN6V4jk
      coKlxXkSqTxnenu0MZYUrAQ3xoL6ujrCkQqs1KpOiRRXSnBjLDjV9wihUJi+3uNe1CPiK9dx
      s4JlNDQ0eFGLiO80DSpGUwDEaAqAGE0BEKMpAGI0BUCMpgCI0VyvAwxcuUQwXEnToQ4a66u9
      qEnEN+4Xwqwg9uYmgWBQh+SJKyXZC3Sy7wzBYIDLV/ppOPsooF4gKUwxeoFcP9vU3RFW17O0
      d3Z5UY+Ir1wH4Ej3CS/qECkKzQKJ0RQAMZoCIEZTAMRoCoAYTQEQoykAYjRPApBKLpPJq11B
      So/rANj5NJcv/oi5ZM6LekR85Xol+O6dOxzp6sYBNcOJK6XXDGfnSKyskV9fwsnW0lm/dY6A
      muGkEKXXDGeV89gTT5JOLpEL1XpUkoh/PIlbpPogES8GEvGZpkHFaAqAGE0BEKMpAGI0BUCM
      pgCI0RQAMZrrdYDJuyMk19apaWyno+WgFzWJ+MZ1ADqOdJOMzzNxL0F7cz2O+nbEBb9fP64D
      kF5bZnpuiXCkCsdxsG0b8LYZTqEyg+M4HzZT+sVlAGxisVnAYXPT3rVTIr0cS/au0muGw6L7
      xClvKhEpAs0CidEUADGaAiBGUwDEaAqAGE0BEKMpAGI01wHIZ9PMzMyS27S9qEfEV64DMDc3
      RzgUZGDwuhf1iPjK9bpzW3sHN4b6aWzp1MZY4krpbYwFDPdfobX7NHXRCj54yWtjLClEMXqB
      XF8ChSMRZifHmJlb8qIeEV+5jtuxk31e1CFSFJoGFaMpAGI0BUCMpgCI0RQAMZoCIEZTAMRo
      rgOQy2wwOT3jRS0ivnMdgGQyycLiohe1iPjO9UrwwcZm5hbjgE6JFHdKshkum0mTyWTIZLOE
      QyFAzXBSmJJshltJLFFbXU18edWLekR85TpujS1tNHpRiUgRaBpUjKYAiNEUADGa6wAsL8wy
      MDDIWjrnRT0ivnIdgLGpGU739jBy67YX9Yj4ynUALMvCCobA0TuAlB7XAQhic3dshIpogxf1
      iPjK9TpAb9/DrKbSVEervKhHxFeuA2AFy6mpLge2eoFs2/b8TK/AoUMEjx/3dEzZewJtbb4f
      khdwPDyC8YNTIr3uBRIplG3fP7xxO54GAO4faaoASLE9yGvR8wCIO/nsBjZlxJcWsB04UFVD
      bXVlscvat7QSvMckJm8wv24RLrMYm5ymvNzf9mDTKAB7UMAKUlNbS1VVlMqKcLHL2dcUADGa
      3l/3mMqGdiIRCATLaG1pKnY5+97/A33QYrjh7zK2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Diagramme Kpi_country' width='192'>
      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
      yE48F0iiILgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagramme Kpi_region' width='192'>
      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
      BxCiHv8PgDz7n8wI9F4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='49' name='Total Country' width='142'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='carte générale' width='192'>
      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
      PwKyPKcMPmqFAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
